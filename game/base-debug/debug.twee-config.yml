aliases:
  unused: &unused
    border: 0px
sugarcube-2:
  macros:
    characterViewerModel:
      name: characterViewerModel
    characterViewerModelClothes:
      name: characterViewerModelClothes
    characterViewerModelClothesControls:
      name: characterViewerModelClothesControls
    characterViewerModelExportControls:
      name: characterViewerModelExportControls
    checkEventNPC:
      description: |-
        Checks that npc at given slot was properly closed
        
        `<<checkEventNPC slot>>`
        - **slot**: `number` - slot to check (zero-based)
      parameters:
        - 'number'
    clothesTestingBodyControls:
      name: clothesTestingBodyControls
    clothesTestingFaceControls:
      name: clothesTestingFaceControls
    clothesTestingGenerateClothes:
      name: clothesTestingGenerateClothes
    clothesTestingHairControls:
      name: clothesTestingHairControls
    clothesTestingImageGenerateAll:
      name: clothesTestingImageGenerateAll
    clothesTestingImageUpdate:
      name: clothesTestingImageUpdate
    clothesTestingTransformationsControls:
      name: clothesTestingTransformationsControls
    debug:
      name: debug
    debugactionsman:
      name: debugactionsman
    debugAdd:
      name: debugAdd
    debugCharacter:
      name: debugCharacter
    debugContents:
      name: debugContents
    debugEvents:
      name: debugEvents
    debugFavourites:
      name: debugFavourites
    debugGenerateDivs:
      name: debugGenerateDivs
    debugMain:
      name: debugMain
    ejaculation-demon:
      name: ejaculation-demon
    eventExtraInfo:
      name: eventExtraInfo
    freezePlayerStats:
      description: |-
        Clones current story variables into the `$frozenValues` object, as well as stores all current story variable names in the `$frozenKeys` array

        Some variables, like ones with names starting with `real_` are ignored
        
        Also sets `$statFreeze` to `true`, which other widgets can use to determine if they should be active or not
        
        To restore the variables, use `<<unfreezePlayerStats>>`
    G:
      name: G
    GL:
      name: GL
    L:
      name: L
    rangeScopedTest:
      name: rangeScopedTest
    rangeScopedTestInner:
      name: rangeScopedTestInner
    resetDebugLinks:
      decoration: *unused
      name: resetDebugLinks
    saveCompareTool:
      decoration: *unused
      name: saveCompareTool
    saveCompareUI:
      name: saveCompareUI
    saveLoadCache:
      name: saveLoadCache
    scenes:
      name: scenes
    scenesSearch:
      name: scenesSearch
    scenesViewer:
      name: scenesViewer
    scenesViewerCalc:
      name: scenesViewerCalc
    scenesViewerControls:
      name: scenesViewerControls
    seenPassage:
      decoration: *unused
      name: seenPassage
    seenPassageChecks:
      name: seenPassageChecks
    setupReplayScene:
      name: setupReplayScene
    straponGeneratorOptions:
      name: straponGeneratorOptions
    testing-skinColorWidget:
      name: testing-skinColorWidget
    testScopedVar:
      name: testScopedVar
    testScopedVar2:
      name: testScopedVar2
    unfreezePlayerStats:
      description: |-
        Restores the story variables saved by `<<freezePlayerStats>>` and unsets `$statFreeze`
        
        Any new story variables not present in `$frozenKeys` also get removed
        
        After restoring the values, it runs `<<doVersionCheck>>` in case the game was updated while values were frozen
    updateSceneViewer:
      name: updateSceneViewer
