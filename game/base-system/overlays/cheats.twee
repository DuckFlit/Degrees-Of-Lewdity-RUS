:: Cheats [widget]
<<widget "cheats">>
	<<link [[Confirm|$passage]]>><<set $cheatReload to true>><</link>>
	<br>
	Can cause problems if confirmed during events, or with NPCs around.
	<br>
	Only required if you want cheats to take immediate effect on the current scene.
	<hr>
	<div id="cheatsShown"><<cheats-characterStats>></div>

	<div class="settingsGrid">
		<input type="button" class="toTop options" value="Top of Page" onclick="$('#customOverlayContent').scrollTop(0)"/>
	</div>
<</widget>>

<<widget "cheatVirginityToggle">>
	<<set _type to _args[0]>>
	<<set _id to `stats${_type}virginity`>>
	<<capture _type _id>>
		<span @id="_id"><<= ($player.virginity[_type] is true ? "Present" : "Taken by " + ($player.virginity[_type] is false ? "unknown" : $player.virginity[_type]))>></span> |
		<span @id="_id + 'link'"><<link `($player.virginity[_type] is true ? "Take" : "Restore")`>>
			<<if $player.virginity[_type] is true>>
				<<set $player.virginity[_type] to (_virginity[_type] is true ? false : _virginity[_type])>>
				<<if $player.virginity.temple isnot false and ["penile", "vaginal"].includes(_type)>><<set $player.virginity.temple to "unknown">><</if>>
			<<else>>
				<<set $player.virginity[_type] to true>>
				<<if $player.virginity.temple isnot false and ["penile", "vaginal"].includes(_type)>><<set $player.virginity.temple to true>><</if>>
			<</if>>
			<<run $(`#${_id}link .link-internal`).html($player.virginity[_type] is true ? "Take" : "Restore")>>
			<<run $(`#${_id}`).html($player.virginity[_type] is true ? "Present" : "Taken by " + ($player.virginity[_type] is false ? "unknown" : $player.virginity[_type]))>>
		<</link>></span>
	<</capture>>
<</widget>>

<<widget "cheatParasiteToggle">>
	<<set _bodypart to _args[0]>>
	<<set _parasiteTypes to setup.parasiteTypesPerBodypart[_bodypart]>>

	<<= _bodypart.toUpperFirst().replace("_", " ")>>:
	<<capture _bodypart, _parasiteTypes, _i, _temp>>
		<<for _i = 0; _i < _parasiteTypes.length; _i++>>
			<span @id="_parasite" @class="_i is 0 ? 'goldLink' : 'link' ">
				<<link _parasiteTypes[_i]>>
					<<removeparasite _bodypart>>
					<<set _temp to _parasiteTypes[_i]>>
					<<set _parasiteTypes[_i] to _parasiteTypes[0]>>
					<<set _parasiteTypes[0] to _temp>>
					<<if _temp isnot "none">>
						<<parasite _bodypart _temp>>
					<</if>>
					<<updatesidebarimg>>
					<<replace `"#"+ _bodypart`>><<cheatParasiteToggle _bodypart>><</replace>>
				<</link>>
			</span>
			<<if _i < _parasiteTypes.length - 1>> |<</if>>
		<</for>>
	<</capture>>
<</widget>>

<<widget "cheatBodyLiquid">>
	<<set _semen to _args[0]>>
	<<set _label to _semen is "goo" ? "slime" : _semen>>
	<div class="settingsToggleItem">
		<span class="gold"><<= _label.toUpperFirst()>></span>
		<br>

		<<capture _type _semen>>
			<<link `'Add all ' + _label`>>
				<<for _type range ["neck","rightarm","leftarm","thigh","bottom","tummy","chest","face","hair","feet","vaginaoutside","vagina","penis","anus","mouth"]>>
					<<bodyliquid _type _semen 5>><<run $(`#stats${_type}${_semen}`).html(Math.trunc($player.bodyliquid[_type][_semen]))>>
				<</for>>
				<<updatesidebarimg>>
			<</link>>
		<</capture>> |

		<<capture _type _semen>>
			<<link `'Remove all ' + _label`>>
				<<for _type range ["neck","rightarm","leftarm","thigh","bottom","tummy","chest","face","hair","feet","vaginaoutside","vagina","penis","anus","mouth"]>>
					<<bodyliquid _type _semen -5>><<run $(`#stats${_type}${_semen}`).html(Math.trunc($player.bodyliquid[_type][_semen]))>>
				<</for>>
				<<updatesidebarimg>>
			<</link>>
		<</capture>>
		<br>

		<<cheatBodyliquidOnPart "neck" "Neck" _semen>>
		<<cheatBodyliquidOnPart "rightarm" "Right arm" _semen>>
		<<cheatBodyliquidOnPart "leftarm" "Left arm" _semen>>
		<<cheatBodyliquidOnPart "thigh" "Thigh" _semen>>
		<<cheatBodyliquidOnPart "bottom" "Bottom" _semen>>
		<<cheatBodyliquidOnPart "tummy" "Tummy" _semen>>
		<<cheatBodyliquidOnPart "chest" "Chest" _semen>>
		<<cheatBodyliquidOnPart "face" "Face" _semen>>
		<<cheatBodyliquidOnPart "hair" "Hair" _semen>>
		<<cheatBodyliquidOnPart "feet" "Feet" _semen>>
		<<cheatBodyliquidOnPart "vaginaoutside" "Labia" _semen>>
		<<cheatBodyliquidOnPart "vagina" "Vagina" _semen>>
		<<cheatBodyliquidOnPart "penis" "Penis" _semen>>
		<<cheatBodyliquidOnPart "anus" "Anus" _semen>>
		<<cheatBodyliquidOnPart "mouth" "Mouth" _semen>>
	</div>
<</widget>>

<<widget "cheatBodyliquidOnPart">>
	<<set _part to _args[0]>>
	<<set _label to _args[1]>>
	<<set _type to _args[2]>>
	<<capture _type _label _part>>
		<<set _id to `stats${_part}${_type}`>>
		<<link "<">><<bodyliquid _part _type -1>><<run $(`#stats${_part}${_type}`).html(Math.trunc($player.bodyliquid[_part][_type]))>><<updatesidebarimg>><</link>>
		_label: <span @id="_id"><<= Math.trunc($player.bodyliquid[_part][_type])>></span>
		<<link ">">><<bodyliquid _part _type 1>><<run $(`#stats${_part}${_type}`).html(Math.trunc($player.bodyliquid[_part][_type]))>><<updatesidebarimg>><</link>>
		|
	<</capture>>
<</widget>>

<<widget "cheats-characterStats">>
	<div class="settingsGrid">
		<div class="settingsHeader options">Player</div>
		<div class="settingsToggleItemWide">
			<span class="gold">Miscellaneous</span>
			<br>

			<<cheatStat "Money" "money">>

			<<if $location is "prison">>
				<<set $prison.teeth to $prison.teeth or 0>>
				<<cheatStat "Teeth" "prison.teeth" 1000000>>
			<</if>>

			Infinite spray: <span id="statsinfinitespray"><<= ($infinitespray ? "On" : "Off")>></span> |
			<<link "Change">>
				<<if $infinitespray is 1>>
					<<set $infinitespray to 0>>
				<<else>>
					<<spray 5>>
					<<set $infinitespray to 1>>
				<</if>>
				<<replace "#statsinfinitespray">><<= ($infinitespray ? "On" : "Off")>><</replace>>
			<</link>>
			<br>

			<<if $debug is 1>>
				Pheromones (DEBUG): <span id="statsalluretest"><<= $alluretest ? "On" : "Off">></span> |
				<<link "Change">>
					<<if $alluretest is 1>>
						<<set $alluretest to 0>>
					<<else>>
						<<set $alluretest to 1>>
					<</if>>
					<<replace "#statsalluretest">><<= $alluretest>><</replace>>
				<</link>>
				<br>
			<</if>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Body</span> <mouse class="tooltip linkBlue">(?)<span>Changing the player's genitalia will wash the player of lewd fluids, to prevent them from lingering on nonexisting body parts.</span></mouse>
			<br>
			Sex:
			<span id="statsGender">
				<<cheatsGender>>
			</span>
			<br>
			<<set _gender_body_words to {"m": "Masculine", "f": "Feminine", "a": "Androgynous"}>>
			Body type:
			<span id="statsBodyType">
				<<cheatsBody>>
			</span>
			<br>
			<<set _bodysize_words to ["Tiny","Small","Normal","Large"]>>
			Body size:
			<span id="statsBodySize">
				<<cheatsBodySize>>
			</span>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Virginity</span>
			<br>
			<<set _virginity to clone($player.virginity)>>
			<<if $player.vaginaExist or $player.virginity.vaginal isnot true>>
				Vaginal: <<cheatVirginityToggle "vaginal">>
				<br>
			<</if>>
			<<if $player.penisExist or $player.virginity.penile isnot true>>
				Penile: <<cheatVirginityToggle "penile">>
				<br>
			<</if>>
			Anal: <<cheatVirginityToggle "anal">>
			<br>
			Oral: <<cheatVirginityToggle "oral">>
			<br>
			Handholding: <<cheatVirginityToggle "handholding">>
			<br>
			First kiss: <<cheatVirginityToggle "kiss">>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">State</span>
			<br>
			<<set _state to ["pain", "arousal", "tiredness", "stress", "trauma", "drunk", "drugged", "hallucinogen"]>>

			<<link "Refresh">>
				<<set $control = 1000>><<clamp>>
				<<for _i range _state>>
					<<set V[_i] to 0>><<clamp>>
				<</for>>
				<<replace "#cheatstate">><<cheatSection "state">><</replace>>
				<<updatesidebarimg>>
			<</link>> |

			<<link "Ruin">>
				<<set $control = 0>><<clamp>>
				<<for _i range _state>>
					<<set V[_i] to 20000>><<clamp>>
				<</for>>
				<<replace "#cheatstate">><<cheatSection "state">><</replace>>
				<<updatesidebarimg>>
			<</link>>
			<br><br>
			<div id="cheatstate">
				<<cheatSection "state">>
			</div>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Fluids:</span>
			<<link "Refill">><<set $semen_amount to $semen_volume>><<set $milk_amount to $milk_volume>><<replace "#fluids">><<cheatStat "Milk Amount" "milk_amount" $milk_volume>><<if $player.penisExist>><<cheatStat "Semen Amount" "semen_amount" $semen_volume>><</if>><</replace>><</link>> | <<link "Empty">><<set $semen_amount to 0>><<set $milk_amount to 0>><<replace "#fluids">><<cheatStat "Milk Amount" "milk_amount" $milk_volume>><<if $player.penisExist>><<cheatStat "Semen Amount" "semen_amount" $semen_volume>><</if>><</replace>><</link>>
			<br>
			<span class="gold">Lactating:</span> <span id="statslactatingspray"><<= ($lactating is 1 ? "Yes" : "No")>></span> |	<<link "Toggle">><<set $lactating to ($lactating is 1 ? 0 : 1)>><<set $lactation_pressure to $lactating * 100>><<replace "#statslactatingspray">><<= ($lactating is 1 ? "Yes" : "No")>><</replace>><<updatesidebarimg>><</link>>
			<br><br>
			<span id="fluids">
				<<cheatStat "Milk Amount" "milk_amount" $milk_volume>>
				<<if $player.penisExist>><<cheatStat "Semen Amount" "semen_amount" $semen_volume>><</if>>
			</span>
			<<cheatStat "Milk Volume" "milk_volume">>
			<<if $player.penisExist>><<cheatStat "Semen Volume" "semen_volume">><</if>>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Clothes</div>
		<div class="settingsToggleItemWide">
			<<link "Unlock all special clothing">>
				<<run for(const c in V.specialClothes) V.specialClothes[c] = "unlocked">>
			<</link>>
			<br>
			<span class="description">If clothing health is set to zero, it will break. Leaving the cheats menu will destroy it, and you will not be able to get it back.</span>
			<br>
		</div>
		<<set _cl_slots to ["upper", "lower", "under_upper", "under_lower", "over_upper", "over_lower", "genitals"]>>
		<<if $worn.face.type.includesAny("covered", "gag", "mask")>>
			<<run _cl_slots.push("face")>>
		<</if>>
		<<set $_clothes to []>>

		<<if $worn.over_upper.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.over_upper "over_upper">><<= $worn.over_upper.name.toUpperFirst()>> integrity:</span>

				<<set _overupperintegritymax to getSetupClothing('over_upper', $worn.over_upper)?.integrity_max || 200>>
				<<numberslider "$worn.over_upper.integrity" $worn.over_upper.integrity 0 _overupperintegritymax 1>>
				<<run cheatsWord("wornover-upperintegrity", "over_upper", V.worn.over_upper)>>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.over_upper "over_upper">><<= $worn.over_upper.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$overupperwet" $overupperwet 0 200 1>>
				<<run cheatsWord("overupperwet", "over_upper")>>
			</div>
		<<else>>
			<<set $_clothes.push("an overtop")>>
		<</if>>
		<<if $worn.over_lower.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<<set _overlowerintegritymax to getSetupClothing('over_lower', $worn.over_lower)?.integrity_max || 200>>
				<span class="gold"><<clothingicon $worn.over_lower "over_lower">><<= $worn.over_lower.name.toUpperFirst()>> integrity:</span>
				<<numberslider "$worn.over_upper.integrity" $worn.over_lower.integrity 0 _overlowerintegritymax 1>>
				<<run cheatsWord("wornover-lowerintegrity", "over_lower", V.worn.over_lower)>>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.over_lower "over_lower">><<= $worn.over_lower.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$overlowerwet" $overlowerwet 0 200 1>>
				<<run cheatsWord("overlowerwet", "over_lower")>>
			</div>
		<<else>>
			<<set $_clothes.push("an overbottom")>>
		<</if>>

		<<if $worn.upper.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.upper "upper">><<= $worn.upper.name.toUpperFirst()>> integrity:</span>

				<<set _upperintegritymax to getSetupClothing('upper', $worn.upper)?.integrity_max || 200>>
				<<numberslider "$worn.upper.integrity" $worn.upper.integrity 0 _upperintegritymax 1>>
				<<run cheatsWord("wornupperintegrity", "upper", V.worn.upper)>>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.upper "upper">><<= $worn.upper.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$upperwet" $upperwet 0 200 1>>
				<<run cheatsWord("upperwet", "upper")>>
			</div>
		<<else>>
			<<set $_clothes.push("a top")>>
		<</if>>

		<<if $worn.lower.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.lower "lower">><<= $worn.lower.name.toUpperFirst()>> integrity:</span>

				<<set _lowerintegritymax to getSetupClothing('lower', $worn.lower)?.integrity_max || 200>>
				<<numberslider "$worn.lower.integrity" $worn.lower.integrity 0 _lowerintegritymax 1>>
				<<run cheatsWord("wornlowerintegrity", "lower", V.worn.lower)>>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.lower "lower">><<= $worn.lower.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$lowerwet" $lowerwet 0 200 1>>
				<<run cheatsWord("lowerwet", "lower")>>
			</div>
		<<else>>
			<<set $_clothes.push("a bottom")>>
		<</if>>

		<<if $worn.under_lower.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.under_lower "under_lower">><<= $worn.under_lower.name.toUpperFirst()>> integrity:</span>

				<<set _underlowerintegritymax to getSetupClothing('under_lower', $worn.under_lower)?.integrity_max || 200>>
				<<numberslider "$worn.under_lower.integrity" $worn.under_lower.integrity 0 _underlowerintegritymax 1>>
				<<run cheatsWord("wornunder-lowerintegrity", "under_lower", V.worn.under_lower)>>
				<br>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.under_lower "under_lower">><<= $worn.under_lower.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$underlowerwet" $underlowerwet 0 200 1>>
				<<run cheatsWord("underlowerwet", "under_lower")>>
			</div>
		<<else>>
			<<set $_clothes.push("underbottoms")>>
		<</if>>

		<<if $worn.under_upper.integrity gte 1>>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.under_upper "under_upper">><<= $worn.under_upper.name.toUpperFirst()>> integrity:</span>

				<<set _underupperintegritymax to getSetupClothing('under_upper', $worn.under_upper)?.integrity_max || 200>>
				<<numberslider "$worn.under_upper.integrity" $worn.under_upper.integrity 0 _underupperintegritymax 1>>
				<<run cheatsWord("wornunder-upperintegrity", "under_upper", V.worn.under_upper)>>
				<br>
			</div>
			<div class="settingsToggleItem numberslider-inline">
				<span class="gold"><<clothingicon $worn.under_upper "under_upper">><<= $worn.under_upper.name.toUpperFirst()>> wetness:</span>
				<<numberslider "$underupperwet" $underupperwet 0 200 1>>
				<<run cheatsWord("underupperwet", "under_upper")>>
			</div>
		<<else>>
			<<set $_clothes.push("an undertop")>>
		<</if>>

		<<if $worn.genitals.integrity gte 1>>
			<div class="settingsToggleItemWide numberslider-inline">
				<span class="gold"><<clothingicon $worn.genitals "genitals">><<= $worn.genitals.name.toUpperFirst()>> integrity:</span>

				<<set _genitalsintegritymax to getSetupClothing('genitals', $worn.genitals)?.integrity_max || 200>>
				<<numberslider "$worn.genitals.integrity" $worn.genitals.integrity 0 _genitalsintegritymax 1>>
				<<run cheatsWord("worngenitalsintegrity", "genitals", V.worn.genitals)>>
				<br>
			</div>
		<<else>>
			<<set $_clothes.push("a chastity belt")>>
		<</if>>

		<<if $worn.face.type.includesAny("covered", "gag", "mask")>>
			<div class="settingsToggleItemWide numberslider-inline">
				<span class="gold"><<clothingicon $worn.face "face">><<= $worn.face.name.toUpperFirst()>> integrity:</span>

				<<set _faceintegritymax to getSetupClothing('face', $worn.face)?.integrity_max || 200>>
				<<numberslider "$worn.face.integrity" $worn.face.integrity 0 _faceintegritymax 1>>
				<<run cheatsWord("wornfaceintegrity", "face", V.worn.face)>>
				<br>
			</div>
		<<else>>
			<<set $_clothes.push("a mask, or a gag")>>
		<</if>>
		<div class="settingsToggleItemWide">
			You are not wearing <span class="gold"><<= $_clothes.join(", ")>></span>.

			/* Don't show links if player doesn't have anything to fix/destroy */
			<<if $_clothes.length lt 8>>
				<br>
				<<link "Fix all">>
					<<for _cl range _cl_slots>>
						<<if $worn[_cl].name isnot 'naked'>>
							<<set _cl_max to clothingData(_cl, $worn[_cl], 'integrity_max')>>
							<<set $worn[_cl].integrity to _cl_max>>
							<<unset _cl_max>>
						<</if>>
					<</for>>
					<<unset _cl>>
					<<updatesidebarimg>>
				<</link>> |
				<<link "Destroy all">>
					/* not using ruined widgets to avoid side effects until confirmation */
					<<for _cl range _cl_slots>>
						<<if $worn[_cl].name isnot 'naked'>>
							<<set $worn[_cl].integrity to 0>>
						<</if>>
					<</for>>
					<<unset _cl>>
					<<updatesidebarimg>>
				<</link>>
			<</if>>
			/* Don't show unless the player is wearing clothes that can be drenched or dried */
			<<if !$_clothes.includesAny("an overtop", "an overbottom", "a top", "a bottom", "underbottoms", "an undertop")>>
				| <<link "Dry all">>
					<<dry_full>>
					<<for _cl range _cl_slots.slice(0, 4)>>
						<<if $worn[_cl].name isnot 'naked'>>
							<<set _cl_wet to _cl.replace('_','') + "wet">>
							<<unset _cl_wet>>
						<</if>>
					<</for>>
					<<unset _cl>>
					<<updatesidebarimg>>
				<</link>> |
				<<link "Drench all">>
					<<for _cl range _cl_slots.slice(0, 4)>>
						<<if $worn[_cl].name isnot 'naked'>>
							<<set _cl_wet to _cl.replace('_','') + "wet">>
							<<set V[_cl_wet] to 200>>
							<<unset _cl_wet>>
						<</if>>
					<</for>>
					<<unset _cl>>
					<<clamp>>
					<<updatesidebarimg>>
				<</link>>
			<</if>>
			<br><br>
			<span class="gold">Bindings:</span>
			<br>
			<span class="description"> Binding your arms will destroy handheld items. Shackling your feet will destroy shoes.</span>
			<br>
			<<icon "clothes/gag.png">><<link "Gag">><<facewear 4>><<updatesidebarimg>><</link>> | <<link "Blindfold">><<facewear 5>><<updatesidebarimg>><</link>> | <<link "Gag and blindfold">><<facewear 6>><<updatesidebarimg>><</link>> | <<link "Bind arms">><<bind>><<updatesidebarimg>><</link>> | <<link "Shackle feet">><<shackle_feet>><<updatesidebarimg>><</link>>
			<br>
			<<undobindingsicon>> <<link "Unbind all">><<unbind>><<set $worn.face.type.push("broken")>><<faceruined>><<updatesidebarimg>><</link>>

			<<if $debug is 1>>
				<br><br>
				<span class="gold">Add to Wardrobe:</span>
				<br>
				<span class="description">DEBUG: Send clothing with a given ID to your wardrobe.</span>
				<br>
				<<listbox "_slot" autoselect>>
					<<optionsfrom setup.clothingLayer.body>>
				<</listbox>>
				<<set _clothesID to "1">>
				<<textbox "_clothesID" "1">>
				<br>
				<<link "Send">>
					<<if !between(+_clothesID, 1, setup.clothes[_slot].length)>>
						<<replace "#ClothesSendResult">>That didn't work!<</replace>>
					<<else>>
						<<shopbuyv2 _slot "buy" "send" _clothesID 1>>
						<<replace "#ClothesSendResult">>Sent <<= setup.clothes[_slot][_clothesID].name>> to your wardrobe!<</replace>>
					<</if>>
				<</link>>
				<br>
				<span id="ClothesSendResult"></span>
			<</if>>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Characteristics</div>
		<div class="settingsToggleItem">
			<<set _core to ["purity", "beauty", "physique", "willpower", "awareness", "promiscuity", "exhibitionism", "deviancy"]>>
			<<if numberOfEarSlime()>><<set _core.push("earSlime.corruption")>><</if>>
			<span class="gold">Core Characteristics</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _core>>
					<<set V[_i] to 0>><<clamp>>
				<</for>>
				<<replace "#characteristics">><<cheatSection "characteristics">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _core>>
					<<set V[_i] to 20000>><<clamp>>
				<</for>>
				<<replace "#characteristics">><<cheatSection "characteristics">><</replace>>
			<</link>>
			<br><br>
			<span id="characteristics">
				<<cheatSection "characteristics">>
			</span>
			<hr>
			<span class="gold">Secondary Characteristics</span>
			<br>
			<<cheatStat "Submissiveness" "submissive" 2000>>
			<<cheatStat "Masochism" "masochism" 1000>>
			<<cheatStat "Sadism" "sadism" 1000>>

			<<if $temple_rank is "initiate" or $temple_rank is "monk" or $temple_rank is "priest">>
				<<cheatStat "Grace" "grace" 100>>
			<</if>>
		</div>
		<div class="settingsToggleItem">
			<<set _skills to ["skulduggery", "skulduggeryday", "danceskill", "swimmingskill", "athletics", "tending", "housekeeping"]>>
			<span class="gold">Core Skills</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _skills>>
					<<set V[_i] to 0>><<clamp>>
				<</for>>
				<<replace "#coreSkills">><<cheatSection "skills">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _skills>>
					<<set V[_i] to 20000>><<clamp>>
				<</for>>
				<<replace "#coreSkills">><<cheatSection "skills">><</replace>>
			<</link>>
			<br><br>
			<span id="coreSkills">
				<<cheatSection "skills">>
			</span>
			<hr>
			<<set _subjects to ["english", "maths", "science", "history"]>>
			<span class="gold">School Skills</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _subjects>>
					<<set V[_i] to 0>><<clamp>>
				<</for>>
				<<replace "#schoolSkills">><<cheatSection "school">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _subjects>>
					<<set V[_i] to 1000>><<clamp>>
				<</for>>
				<<replace "#schoolSkills">><<cheatSection "school">><</replace>>
			<</link>>
			<br><br>
			<span id="schoolSkills">
				<<cheatSection "school">>
			</span>
		</div>

		<div class="settingsToggleItem">
			<<set _sexSkills to ["seduction", "oral", "vaginal", "penile", "anal", "hand", "feet", "bottom", "thigh", "chest"]>>
			<span class="gold">Sex Skills</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _sexSkills>>
					<<set V[`${_i}skill`] to 0>><<clamp>>
				<</for>>
				<<replace "#cheatsSex">><<cheatSection "sex">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _sexSkills>>
					<<set V[`${_i}skill`] to 1000>><<clamp>>
				<</for>>
				<<replace "#cheatsSex">><<cheatSection "sex">><</replace>>
			<</link>>
			<br><br>

			<span id="cheatsSex">
				<<cheatSection "sex">>
			</span>
		</div>

		<div class="settingsToggleItem">
			<span class="gold">Traits</span>
			<br>
			<<set $_traits to {"choke": $choketrait, "milkdrank" : $milkdranktrait, "vore" : $voretrait, "tentacle" : $tentacletrait, "bestiality" : $bestialitytrait, "rape" : $rapetrait, "molest" : $molesttrait, "ejac" : $ejactrait, "orgasm" : $orgasmtrait}>>
			<<set _traitValue to  {"1": "On", "-1": "Disabled", "0": "Off"}>>

			Orgasm Addict: <span id="statsorgasmtrait" @class="$orgasmtrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["orgasm"].toString()]>></span> |
			<<link "Change">>
				<<set $orgasmtrait += 1>>
				<<if $orgasmtrait gte 2>>
					<<set $orgasmtrait to -1>>
				<</if>>
				<<replace "#statsorgasmtrait">>
					<<set _orgasmtrait to _traitValue[$orgasmtrait.toString()]>>
					<<= _orgasmtrait>>
					<<changeCheatClass "#statsorgasmtrait" _orgasmtrait>>
				<</replace>>
			<</link>>
			<br>

			Cum Dump: <span id="statsejactrait" @class="$ejactrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["ejac"].toString()]>></span> |
			<<link "Change">>
				<<set $ejactrait += 1>>
				<<if $ejactrait gte 2>>
					<<set $ejactrait to -1>>
				<</if>>
				<<replace "#statsejactrait">>
					<<set _ejactrait to _traitValue[$ejactrait.toString()]>>
					<<= _ejactrait>>
					<<changeCheatClass "#statsejactrait" _ejactrait>>
				<</replace>>
			<</link>>
			<br>

			Plaything: <span id="statsmolesttrait" @class="$molesttrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["molest"].toString()]>></span> |
			<<link "Change">>
				<<set $molesttrait += 1>>
				<<if $molesttrait gte 2>>
					<<set $molesttrait to -1>>
				<</if>>
				<<replace "#statsmolesttrait">>
					<<set _molesttrait to _traitValue[$molesttrait.toString()]>>
					<<= _molesttrait>>
					<<changeCheatClass "#statsmolesttrait" _molesttrait>>
				<</replace>>
			<</link>>
			<br>

			Fucktoy: <span id="statsrapetrait" @class="$rapetrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["rape"].toString()]>></span> |
			<<link "Change">>
				<<set $rapetrait += 1>>
				<<if $rapetrait gte 2>>
					<<set $rapetrait to -1>>
				<</if>>
				<<replace "#statsrapetrait">>
					<<set _rapetrait to _traitValue[$rapetrait.toString()]>>
					<<= _rapetrait>>
					<<changeCheatClass "#statsrapetrait" _rapetrait>>
				<</replace>>
			<</link>>
			<br>

			Bitch: <span id="statsbestialitytrait"  @class="$bestialitytrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["bestiality"].toString()]>></span> |
			<<link "Change">>
				<<set $bestialitytrait += 1>>
				<<if $bestialitytrait gte 2>>
					<<set $bestialitytrait to -1>>
				<</if>>
				<<replace "#statsbestialitytrait">>
					<<set _bestialitytrait to _traitValue[$bestialitytrait.toString()]>>
					<<= _bestialitytrait>>
					<<changeCheatClass "#statsbestialitytrait" _bestialitytrait>>
				<</replace>>
			<</link>>
			<br>

			Prey: <span id="statstentacletrait" @class="$tentacletrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["tentacle"].toString()]>></span> |
			<<link "Change">>
				<<set $tentacletrait += 1>>
				<<if $tentacletrait gte 2>>
					<<set $tentacletrait to -1>>
				<</if>>
				<<replace "#statstentacletrait">>
					<<set _tentacletrait to _traitValue[$tentacletrait.toString()]>>
					<<= _tentacletrait>>
					<<changeCheatClass "#statstentacletrait" _tentacletrait>>
				<</replace>>
			<</link>>
			<br>

			Tasty: <span id="statsvoretrait" @class="$voretrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["vore"].toString()]>></span> |
			<<link "Change">>
				<<set $voretrait += 1>>
				<<if $voretrait gte 2>>
					<<set $voretrait to -1>>
				<</if>>
				<<replace "#statsvoretrait">>
					<<set _voretrait to _traitValue[$voretrait.toString()]>>
					<<= _voretrait>>
					<<changeCheatClass "#statsvoretrait" _voretrait>>
				<</replace>>
			<</link>>
			<br>

			Milk Addict: <span id="statsmilkdranktrait" @class="$milkdranktrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["milkdrank"].toString()]>></span> |
			<<link "Change">>
				<<set $milkdranktrait += 1>>
				<<if $milkdranktrait gte 2>>
					<<set $milkdranktrait to -1>>
				<</if>>
				<<replace "#statsmilkdranktrait">>
					<<set _milkdranktrait to _traitValue[$milkdranktrait.toString()]>>
					<<= _milkdranktrait>>
					<<changeCheatClass "#statsmilkdranktrait" _milkdranktrait>>
				<</replace>>
			<</link>>
			<br>

			Lustful: <span id="statslustful" @class="$backgroundTraits.includes('lustful') is true ? 'green' : 'red'"><<= $backgroundTraits.includes("lustful") is true ? "On" : "Off">></span> |
			<<link "Change">>
				<<if !$backgroundTraits.includes("lustful")>>
					<<set $backgroundTraits.pushUnique("lustful")>><<set $specialClothesEffects.bimboTotal to 1200>>
				<<else>>
					<<set $backgroundTraits.delete("lustful")>><<if $specialClothesEffects.bimboTotal gt 1000>><<set $specialClothesEffects.bimboTotal to 1000>><</if>>
				<</if>>
				<<replace "#statslustful">>
					<<set _lustful to $backgroundTraits.includes("lustful") is true ? "On" : "Off">>
					<<= _lustful>>
					<<changeCheatClass "#statslustful" _lustful>>
				<</replace>>
			<</link>>
			<br>

			Crossdresser: <span id="statscrossdresser" @class="$backgroundTraits.includes('crossdresser') is true ? 'green' : 'red'"><<= $backgroundTraits.includes("crossdresser") is true ? "On" : "Off">></span> |
			<<link "Change">>
				<<if !$backgroundTraits.includes("crossdresser")>>
					<<set $backgroundTraits.pushUnique("crossdresser")>><<set $crossdressingTrait to 100>>
				<<else>>
					<<set $backgroundTraits.delete("crossdresser")>><<if $crossdressingTrait gt 80>><<set $crossdressingTrait to 80>><</if>>
				<</if>>
				<<replace "#statscrossdresser">>
					<<set _crossdresser to $backgroundTraits.includes("crossdresser") is true ? "On" : "Off">>
					<<= _crossdresser>>
					<<changeCheatClass "#statscrossdresser" _crossdresser>>
				<</replace>>
			<</link>>
			<br>

			Green Thumb: <span id="statsgreenthumb" @class="$backgroundTraits.includes('greenthumb') is true ? 'green' : 'red'"><<= $backgroundTraits.includes("greenthumb")is true ? "On" : "Off">></span> |
			<<link "Change">>
				<<if !$backgroundTraits.includes("greenthumb")>>
					<<set $backgroundTraits.pushUnique("greenthumb")>>
				<<else>>
					<<set $backgroundTraits.delete("greenthumb")>>
				<</if>>
				<<replace "#statsgreenthumb">>
					<<set _greenthumb to $backgroundTraits.includes("greenthumb") is true ? "On" : "Off">>
					<<= _greenthumb>>
					<<changeCheatClass "#statsgreenthumb" _greenthumb>>
				<</replace>>
			<</link>>
			<br>

			Asphyxiophilia: <span id="statschoke" @class="$choketrait is 1 ? 'green' : 'red'"><<= _traitValue[$_traits["choke"].toString()]>></span> |
			<<link "Change">>
				<<set $choketrait += 1>>
				<<if $choketrait gte 2>>
					<<set $choketrait to 0>>
				<</if>>
				<<replace "#statschoke">>
					<<set _choketrait to _traitValue[$choketrait.toString()]>>
					<<= _choketrait>>
					<<changeCheatClass "#statschoke" _choketrait>>
				<</replace>>
			<</link>>
			<br>

			Plant Lover: <span id="statsplantlover" @class="$backgroundTraits.includes('plantlover') is true ? 'green' : 'red'"><<= $backgroundTraits.includes("plantlover")is true ? "On" : "Off">></span> |
			<<link "Change">>
				<<if !$backgroundTraits.includes("plantlover")>>
					<<set $backgroundTraits.pushUnique("plantlover")>>
					<<set $nectar_addiction to 200>>
					<<set $nectar_timer to 21>>
				<<else>>
					<<set $backgroundTraits.delete("plantlover")>>
					<<set $nectar_addiction to 0>>
					<<set $nectar_timer to 0>>
				<</if>>
				<<replace "#statsplantlover">>
					<<set _plantlover to $backgroundTraits.includes("plantlover") is true ? "On" : "Off">>
					<<= _plantlover>>
					<<changeCheatClass "#statsplantlover" _plantlover>>
				<</replace>>
			<</link>>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Fame</div>
		<div class="settingsToggleItem">
			<<set _positiveFames to ["good", "business", "scrap", "social", "model"]>>
			<<set _negativeFames to ["exhibitionism", "prostitution", "bestiality", "sex", "rape", "pregnancy", "impreg"]>>
			<span class="gold">Negative Fame</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _negativeFames>>
					<<set $fame[_i] to 0>>
				<</for>>
				<<fameclamp>>
				<<replace #cheatsNegative>><<cheatSection "negative">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _negativeFames>>
					<<set $fame[_i] to 2000>>
				<</for>>
				<<fameclamp>>
				<<replace #cheatsNegative>><<cheatSection "negative">><</replace>>
			<</link>>
			<br><br>
			<span id="cheatsNegative">
				<<cheatSection "negative">>
			</span>
			<hr>
			<span class="gold">Positive Fame</span>
			<br>
			<<link "Set all to 0">>
				<<for _i range _positiveFames>>
					<<set $fame[_i] to 0>>
				<</for>>
				<<fameclamp>>
				<<replace #cheatsPositive>><<cheatSection "positive">><</replace>>
			<</link>>
			|
			<<link "Set all to max">>
				<<for _i range _positiveFames>>
					<<set $fame[_i] to 2000>>
				<</for>>
				<<fameclamp>>
				<<replace #cheatsPositive>><<cheatSection "positive">><</replace>>
			<</link>>
			<br><br>
			<span id="cheatsPositive">
				<<cheatSection "positive">>
			</span>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Crime</span>
			<br>
			<<link "Set all to 0">>
				<<for _cr range Object.keys(setup.crimeNames)>>
					<<capture _cr>>
						<<set C.crime[_cr] to 0>>
						<<replace "#cheatsCrime">><<cheatSection "crime">><</replace>>
					<</capture>>
				<</for>>
			<</link>> |
			<<link "Set all to max">>
				<<for _cr range Object.keys(setup.crimeNames)>>
					<<capture _cr>>
						<<set C.crime[_cr] to 10000>>
						<<replace "#cheatsCrime">><<cheatSection "crime">><</replace>>
					<</capture>>
				<</for>>
			<</link>>
			<br><br>
			<span id="cheatsCrime">
				<<cheatSection "crime">>
			</span>
			<hr>
			<span class="gold">Crime Events</span>
			<br>
			<span id="statscrimeevents"><<listCrimeCheats>></span>
			<<link "Clear Crime events">><<crimeClearEvent "all">><<replace #statscrimeevents>><<listCrimeCheats>><</replace>><</link>>
		</div>
	</div>
<</widget>>

<<widget "cheats-characterVisual">>
	<div class="settingsGrid">
		<div class="settingsHeader options">Player</div>
		<div class="settingsToggleItemWide">
			<span class="gold">Hair Length</span>
			<br>
			<<if $passage is "Hairdressers Seat">>
				Hair cheats are disabled while at the hairdressers.
				<br><br>
			<<else>>
				<<cheatStat "Hair length" "hairlength" 1000>>
				<<cheatStat "Fringe length" "fringelength" 1000>>
				<br>

				<<if $hairtest is 1 or $debug>>
					<<foldout false "_cheatsFoldoutNatural">>
						<span class="gold">Natural Hair Colour (DEBUG)</span>
						<<set _bar to false>>
						<<for _i = 0; _i < setup.colours.hair.length; _i++>>
							<<if setup.colours.hair[_i].natural>>
								<<if _bar>>|<</if>>
								<label><span @class="setup.colours.hair[_i].csstext"><<= setup.colours.hair[_i].name_cap>></span> <<radiovar "$naturalhaircolour" setup.colours.hair[_i].variable>> <<updatesidebarimg>><</radiovar>></label>
								<<set _bar to true>>
							<</if>>
						<</for>>
						<br><br>
					<</foldout>>
				<</if>>

				<<foldout false "_cheatsFoldoutDye">>
					<span class="gold">Hair Dye</span>
					<label>None <<radiovar "$haircolour" $naturalhaircolour>> <<updatesidebarimg>><</radiovar>></label>
					<<for _i = 0; _i < setup.colours.hair.length; _i++>>
						<<if setup.colours.hair[_i].dye>>
							| <label><span @class="setup.colours.hair[_i].csstext"><<= setup.colours.hair[_i].name_cap>></span> <<radiovar "$haircolour" setup.colours.hair[_i].variable>> <<updatesidebarimg>><</radiovar>></label>
						<</if>>
					<</for>>
					<br>
					Two-tone:
					<label>Enable <<radiovar "$hairColourStyle" "gradient">> <<updatesidebarimg>><</radiovar>></label>
					<label>Disable <<radiovar "$hairColourStyle" "simple">> <<updatesidebarimg>><</radiovar>></label>
					<br>
					Two-tone style: <<listbox "$hairColourGradient.style" autoselect>>
								<<option "Low Ombré" "low-ombre">>
								<<option "High Ombré" "high-ombre">>
								<<option "Split" "split">>
								<<option "Face-framing highlights" "face-frame">>
							<</listbox>>
					<br><br>
				<</foldout>>

				<<foldout false "_cheatsFoldoutFringe">>
					<span class="gold">Hair Fringe Dye</span>
					<label>None <<radiovar "$hairfringecolour" $naturalhaircolour>> <<updatesidebarimg>><</radiovar>></label>
					<<for _i = 0; _i < setup.colours.hair.length; _i++>>
						<<if setup.colours.hair[_i].dye>>
							| <label><span @class="setup.colours.hair[_i].csstext"><<= setup.colours.hair[_i].name_cap>></span> <<radiovar "$hairfringecolour" setup.colours.hair[_i].variable>> <<updatesidebarimg>><</radiovar>></label>
						<</if>>
					<</for>>
					<br>
					Two-tone:
					<label>Enable <<radiovar "$hairFringeColourStyle" "gradient">> <<updatesidebarimg>><</radiovar>></label>
					<label>Disable <<radiovar "$hairFringeColourStyle" "simple">> <<updatesidebarimg>><</radiovar>></label>
					<br>
					Two-tone style: <<listbox "$hairFringeColourGradient.style" autoselect>>
								<<option "Low Ombré" "low-ombre">>
								<<option "High Ombré" "high-ombre">>
								<<option "Split" "split">>
								<<option "Face-framing highlights" "face-frame">>
							<</listbox>>
					<br><br>
				<</foldout>>
			<</if>>
		</div>

		<div class="settingsToggleItem">
			<span class="gold">Eye Colour</span>
			<br>
			<<set _bar to false>>
			<<for _i = 0; _i < setup.colours.eyes.length; _i++>>
				<<if setup.colours.eyes[_i].natural>>
					<<if _bar>>|<</if>>
					<label><span @class="setup.colours.eyes[_i].csstext">
						<<= setup.colours.eyes[_i].name>></span>
						<<radiovar "$eyeselected" setup.colours.eyes[_i].variable>>
							<<cheatMenuEyesSelected>>
						<</radiovar>></label>
					<<set _bar to true>>
				<</if>>
			<</for>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Freckles</span>
			<br>
			<label>Enabled <<radiobutton "$player.freckles" true autocheck>></label>
			| <label>Disabled <<radiobutton "$player.freckles" false `!$player.freckles ? "checked" : ""`>></label>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Breast Size</span>
			<<set _name to ["Flat", "Budding", "Tiny", "Small", "Pert", "Modest", "Full", "Large", "Ample", "Massive", "Huge", "Gigantic", "Enormous"]>>
			<<numberslider "$player.breastsize" $player.breastsize 0 _name.length-1 1>>
			<<run $(() => { $('#numberslider-input-playerbreastsize').on('input change', e => {
				$('#numberslider-value-playerbreastsize').html(" "+_name[e.currentTarget.value]);
				wikifier('<<updatesidebarimg>>');
			}).trigger('change') })>>
			<br><br>

			<span class="gold">Bottom Size</span>
			<<set _butts to ["Slender", "Slim", "Modest", "Cushioned", "Soft", "Round", "Plump", "Large", "Huge"]>>
			<<numberslider "$player.bottomsize" $player.bottomsize 0 _butts.length-1 1>>
			<<run $(() => { $('#numberslider-input-playerbottomsize').on('input change', e => {
				$('#numberslider-value-playerbottomsize').html(" "+_butts[e.currentTarget.value]);
				wikifier('<<updatesidebarimg>>');
			}).trigger('change') })>>

			<<if $player.penisExist>>
				<br><br>
				<span class="gold">Penis</span>
				<<set _penis to ["Micro", "Mini", "Tiny", "Small", "Normal", "Large", "Enormous"]>>
				<<numberslider "$player.penissize" $player.penissize -2 4 1>>
				<<run $(() => { $('#numberslider-input-playerpenissize').on('input change', e => {
					$('#numberslider-value-playerpenissize').html(" "+T.penis[Number(e.currentTarget.value) + 2]);
					wikifier('<<updatesidebarimg>>');
				}).trigger('change') })>>
				<<if $debug is 1>>
					<br>
					<span class="description">Ball Size (DEBUG):
					<<link "<">><<set $ballssize -= 1>><<clamp>><<replace "#statsballssize">><<= Math.trunc($ballssize)>><</replace>> <<updatesidebarimg>><</link>> |
					<span id="statsballssize"><<= Math.trunc($ballssize)>></span>
					| <<link ">">><<set $ballssize += 1>><<clamp>><<replace "#statsballssize">><<= Math.trunc($ballssize)>><</replace>> <<updatesidebarimg>><</link>></span>
				<</if>>
			<</if>>
			<br><br>
			Cover nudity (only if embarrassed): <<checkbox "$dontHide" true false autocheck>>
			<<run $(() => $('#checkbox-donthide').on('change', e => wikifier('<<updatesidebarimg>>')))>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Sensitivity</span>
			<br>
			<<link "<<">><<set $mouthsensitivity -= 1>><<clamp>><<replace "#statsmouthsensitivity">><<= $mouthsensitivity>> <<= $mouthsensitivity gte 1.5 ? "- <<mouthsensitivity>>" : "- normal ">><</replace>><</link>> |
			<<link "<">><<set $mouthsensitivity -= 0.25>><<clamp>><<replace "#statsmouthsensitivity">><<= $mouthsensitivity>> <<= $mouthsensitivity gte 1.5 ? "- <<mouthsensitivity>>" : "- normal ">><</replace>><</link>> |
			Mouth sensitivity: <span id="statsmouthsensitivity"><<= $mouthsensitivity>> <<= $mouthsensitivity gte 1.5 ? "- <<mouthsensitivity>>" : "- normal ">></span>
			| <<link ">">><<set $mouthsensitivity += 0.25>><<clamp>><<replace "#statsmouthsensitivity">><<= $mouthsensitivity>> <<= $mouthsensitivity gte 1.5 ? "- <<mouthsensitivity>>" : "- normal ">><</replace>><</link>>
			| <<link ">>">><<set $mouthsensitivity += 1>><<clamp>><<replace "#statsmouthsensitivity">><<= $mouthsensitivity>> <<= $mouthsensitivity gte 1.5 ? "- <<mouthsensitivity>>" : "- normal ">><</replace>><</link>>
			<br>
			<<link "<<">><<set $breastsensitivity -= 1>><<clamp>><<replace "#statsbreastsensitivity">><<= $breastsensitivity>> <<= $breastsensitivity gte 1.5 ? "- <<breastsensitivity>>" : "- normal ">><</replace>><</link>> |
			<<link "<">><<set $breastsensitivity -= 0.25>><<clamp>><<replace "#statsbreastsensitivity">><<= $breastsensitivity>> <<= $breastsensitivity gte 1.5 ? "- <<breastsensitivity>>" : "- normal ">><</replace>><</link>> |
			Breast sensitivity: <span id="statsbreastsensitivity"><<= $breastsensitivity>> <<= $breastsensitivity gte 1.5 ? "- <<breastsensitivity>>" : "- normal ">></span>
			| <<link ">">><<set $breastsensitivity += 0.25>><<clamp>><<replace "#statsbreastsensitivity">><<= $breastsensitivity>> <<= $breastsensitivity gte 1.5 ? "- <<breastsensitivity>>" : "- normal ">><</replace>><</link>>
			| <<link ">>">><<set $breastsensitivity += 1>><<clamp>><<replace "#statsbreastsensitivity">><<= $breastsensitivity>> <<= $breastsensitivity gte 1.5 ? "- <<breastsensitivity>>" : "- normal ">><</replace>><</link>>
			<br>
			<<link "<<">><<set $genitalsensitivity -= 1>><<clamp>><<replace "#statsgenitalsensitivity">><<= $genitalsensitivity>> <<= $genitalsensitivity gte 1.5 ? "- <<genitalsensitivity>>" : "- normal ">><</replace>><</link>> |
			<<link "<">><<set $genitalsensitivity -= 0.25>><<clamp>><<replace "#statsgenitalsensitivity">><<= $genitalsensitivity>> <<= $genitalsensitivity gte 1.5 ? "- <<genitalsensitivity>>" : "- normal ">><</replace>><</link>> |
			Genital sensitivity: <span id="statsgenitalsensitivity"><<= $genitalsensitivity>> <<= $genitalsensitivity gte 1.5 ? "- <<genitalsensitivity>>" : "- normal ">></span>
			| <<link ">">><<set $genitalsensitivity += 0.25>><<clamp>><<replace "#statsgenitalsensitivity">><<= $genitalsensitivity>> <<= $genitalsensitivity gte 1.5 ? "- <<genitalsensitivity>>" : "- normal ">><</replace>><</link>>
			| <<link ">>">><<set $genitalsensitivity += 1>><<clamp>><<replace "#statsgenitalsensitivity">><<= $genitalsensitivity>> <<= $genitalsensitivity gte 1.5 ? "- <<genitalsensitivity>>" : "- normal ">><</replace>><</link>>
			<br>
			<<link "<<">><<set $bottomsensitivity -= 1>><<clamp>><<replace "#statsbottomsensitivity">><<= $bottomsensitivity>> <<= $bottomsensitivity gte 1.5 ? "- <<bottomsensitivity>>" : "- normal ">><</replace>><</link>> |
			<<link "<">><<set $bottomsensitivity -= 0.25>><<clamp>><<replace "#statsbottomsensitivity">><<= $bottomsensitivity>> <<= $bottomsensitivity gte 1.5 ? "- <<bottomsensitivity>>" : "- normal ">><</replace>><</link>> |
			Bottom sensitivity: <span id="statsbottomsensitivity"><<= $bottomsensitivity>> <<= $bottomsensitivity gte 1.5 ? "- <<bottomsensitivity>>" : "- normal ">></span>
			| <<link ">">><<set $bottomsensitivity += 0.25>><<clamp>><<replace "#statsbottomsensitivity">><<= $bottomsensitivity>> <<= $bottomsensitivity gte 1.5 ? "- <<bottomsensitivity>>" : "- normal ">><</replace>><</link>>
			| <<link ">>">><<set $bottomsensitivity += 1>><<clamp>><<replace "#statsbottomsensitivity">><<= $bottomsensitivity>> <<= $bottomsensitivity gte 1.5 ? "- <<bottomsensitivity>>" : "- normal ">><</replace>><</link>>
		</div>
	</div>
	<<if $parasitedisable is "f">>
		<hr>
		<div class="settingsGrid">
			<div class="settingsHeader options">Parasites</div>
			<div class="settingsToggleItemWide">
				<<set _penis to $player.penisExist ? "penis" : "clit">>
				<div id="nipples"><<cheatParasiteToggle "nipples">></div>
				<div @id="_penis"><<cheatParasiteToggle _penis>></div>
				<div id="bottom"><<cheatParasiteToggle "bottom">></div>
				<div id="left_thigh"><<cheatParasiteToggle "left_thigh">></div>
				<div id="right_thigh"><<cheatParasiteToggle "right_thigh">></div>
				<div id="left_arm"><<cheatParasiteToggle "left_arm">></div>
				<div id="right_arm"><<cheatParasiteToggle "right_arm">></div>
				<div id="tummy"><<cheatParasiteToggle "tummy">></div>
				<div id="left_ear"><<cheatParasiteToggle "left_ear">></div>
				<div id="right_ear"><<cheatParasiteToggle "right_ear">></div>
			</div>
		</div>
	<</if>>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Fluids</div>
		<<cheatBodyLiquid "semen">>
		<<cheatBodyLiquid "goo">>
		<<cheatBodyLiquid "nectar">>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Transformations</div>
		<div class="settingsToggleItem">
			<span class="gold">Transformation Types</span>
			<br>
			<<tficon "angel">>Angel: <<link "Set">><<angelTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<angelTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "fallen">>Fallen Angel: <<link "Set">><<set $fallenangel to 2>><<set $transformationParts.fallenAngel.halo to ($transformationParts.angel.halo is "traditional" ? "traditional" : "default")>><<set $transformationParts.fallenAngel.wings to ($transformationParts.angel.wings is "classic" ? "classic" : "default")>><<updatesidebarimg>><</link>> / <<link "Clear">><<set $specialTransform to 0>><<set $fallenangel to 0>>				<<set $transformationParts.fallenAngel.halo to "disabled">><<set $transformationParts.fallenAngel.wings to "disabled">><<set $transformationParts.traits.flaunting to "disabled">><<updatesidebarimg>><</link>><br>
			<<tficon "demon">>Demon: <<link "Set">><<demonTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<demonTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "wolf">>Wolf: <<link "Set">><<wolfTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<wolfTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "cat">>Cat: <<link "Set">><<catTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<catTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "cow">>Cow: <<link "Set">><<cowTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<cowTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "bird">>Bird: <<link "Set">><<harpyTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<harpyTransform 99>><<updatesidebarimg>><</link>><br>
			<<tficon "fox">>Fox: <<link "Set">><<foxTransform>><<updatesidebarimg>><</link>> / <<link "Clear">><<foxTransform 99>><<updatesidebarimg>><</link>><br>
			<hr>
			<span class="description">You may only have one animal and one divine transformation at a time.</span>
		</div>
	<div class="settingsToggleItem">
		<span class="gold">Transformation Points</span>
		<br>
		<<capture _tf>>
			<<for _tf range ["angel", "fallen", "demon", "wolf", "cat", "cow", "bird", "fox"]>>
				<<tficon _tf>> <<= _tf is "fallen" ? "Fallen Angel" : _tf.toUpperFirst()>>:

				<<link "<<">><<set V[`${_tf}build`] -= 50>><<transformationAlteration>><<clamp>><<replace `"#" + _tf + "build"`>><<= Math.trunc(V[`${_tf}build`])>><</replace>> <<updatesidebarimg>><</link>> |
				<<link "<">><<set V[`${_tf}build`] -= 5>><<transformationAlteration>><<clamp>><<replace `"#" + _tf + "build"`>><<= Math.trunc(V[`${_tf}build`])>><</replace>> <<updatesidebarimg>><</link>> |

				<span @id="_tf + 'build'"><<= Math.trunc(V[`${_tf}build`])>></span>

				| <<link ">">><<set V[`${_tf}build`] += 5>><<transformationAlteration>><<clamp>><<replace `"#" + _tf + "build"`>><<= Math.trunc(V[`${_tf}build`])>><</replace>> <<updatesidebarimg>><</link>>
				| <<link ">>">><<set V[`${_tf}build`] += 50>><<transformationAlteration>><<clamp>><<replace `"#" + _tf + "build"`>><<= Math.trunc(V[`${_tf}build`])>><</replace>> <<updatesidebarimg>><</link>>
				<br>
			<</for>>
		<</capture>>
		<hr>
		<span class="description">Angel and Cat require 50 points to reach their full transformation, while all others require 30 points. Fallen Angel requires 30 points for Acceptance.</span>
	</div>
<</widget>>

<<widget "cheatMenuEyesSelected">>
	<<set $leftEyeColour to $eyeselected>>
	<<set $rightEyeColour to $eyeselected>>
	<<updatesidebarimg>>
<</widget>>

<<widget "cheats-npcs">>
	<div class="settingsGrid">
		<div class="settingsHeader options">NPC Virginity</div>
		<div class="settingsToggleItemWide">
			Reset the following NPC's virginities to their starting values:
			<br>
			<<listbox "_npcId" autoselect>>
				<<optionsfrom $NPCNameList>>
			<</listbox>>
			<br><br>
			<<link "Confirm">>
				<<initNNPCVirginity $NPCNameList.indexOf(_npcId)>>
				<<if $npc.includes(_npcId)>>
					<<set $NPCList[$npcrow[$npc.indexOf(_npcId)]].virginity to C.npc[_npcId].virginity>>
				<</if>>
				<<for _virginType, _virginList range $virginTaken>>
					<<run _virginList.delete(_npcId)>>
				<</for>>
				<<replace "#npcvirgin">><br><<= _npcId>>'s virginities have been restored.<</replace>>
			<</link>>
			<span id="npcvirgin"></span>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Primary Relationships</div>
		<div class="settingsToggleItem">
			<span class="gold">Robin</span>
			<br>
			<<cheatStat "Robin" "love" 100>>
			<<cheatStat "Robin" "lust" 100>>
			<<cheatStat "Robin" "dom" 100>>
			<<cheatStat "Robin" "trauma" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Whitney</span>
			<br>
			<<cheatStat "Whitney" "love" 30>>
			<<cheatStat "Whitney" "dom" 20>>
			<<cheatStat "Whitney" "lust" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Eden</span>
			<br>
			<<cheatStat "Eden" "love" 200>>
			<<cheatStat "Eden" "dom" 150>>
			<<cheatStat "Eden" "lust" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Kylar</span>
			<br>
			<<cheatStat "Kylar" "love" 100>>
			<<cheatStat "Kylar" "lust" 100>>
			<<cheatStat "Kylar" "rage" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Avery</span>
			<br>
			<<cheatStat "Avery" "love" 100>>
			<<cheatStat "Avery" "rage" 100>>
		</div>

		<div class="settingsToggleItem">
			<span class="gold">Alex</span>
			<br>
			<<cheatStat "Alex" "love" 100>>
			<<cheatStat "Alex" "dom" 100>>
			<<cheatStat "Alex" "lust" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Great Hawk</span>
			<br>
			<<cheatStat "Great Hawk" "love" 100>>
			<<cheatStat "Great Hawk" "dom" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Black Wolf</span>
			<br>
			/* Commented out until stat is used.
			<<cheatStat "Black Wolf" "dom" 150>>
			<br> */
			<<cheatStat "Black Wolf" "love" 150>>

		</div>
		<div class="settingsToggleItemWide">
			<span class="gold">Sydney</span>
			<br>
			<<set _purity to C.npc.Sydney.purity gt 0 ? "purity" : "corruption">>
			<<cheatStat "Sydney" "love" 150>>
			<<cheatStat "Sydney" "lust" 130>>
			<span id="sydneypurity">
				<<cheatStat "Sydney" _purity 100>>
			</span>
			<span id="sydneydesc" class="description">
				(Setting Sydney's <<= _purity is "purity" ? "purity to below 0%" : "corruption to above 0%">> will switch it to <<= _purity is "purity" ? "corruption" : "purity">>.)
			</span>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">People of Interest</div>
		<div class="settingsToggleItem">
			<span class="gold">Mason</span>
			<br>
			<<cheatStat "Mason" "love" 50>>
			<<cheatStat "Mason" "lust" 50>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Zephyr</span>
			<br>
			<<cheatStat "Zephyr" "love" 100>>
			<<cheatStat "Zephyr" "dom" 50>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Teachers</span>
			<br>
			<<cheatStat "Sirris" "love" 100>>
			<<cheatStat "Doren" "love" 100>>
			<<cheatStat "Leighton" "love" 100>>
			<<cheatStat "River" "love" 50>>
			<<cheatStat "Winter" "love" 100>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Other Named NPCs</span>
			<br>
			<<cheatStat "Briar" "love" 100>>
			<<cheatStat "Charlie" "love" 50>>
			<<cheatStat "Darryl" "love" 50>>
			<<cheatStat "Harper" "love" 100>>
			<<cheatStat "Morgan" "love" 100>>
			<<cheatStat "Niki" "love" 100>>
			<<cheatStat "Remy" "love" 100>>
			<<cheatStat "Sam" "love" 50>>
			<<cheatStat "Wren" "love" 50>>
		</div>
	</div>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Reputation</div>
		<<if $farm_stage gte 2>>
			<div class="settingsToggleItem">
				<<farmicon>><span class="gold">Farm</span>
				<br>
				<<cheatStat "Steeds' Respect" "horses" 30>>
				<<cheatStat "Pigs' Respect" "pigs" 30>>
				<<cheatStat "Cattle Respect" "cattle" 30>>
				<<cheatStat "Dogs' Respect" "dogs" 30>>
			</div>
			<div class="settingsToggleItem">
				<<farmicon>><span class="gold">Farm Progress</span>
				<br>
				<<if $farm_stage gte 12>>
					You've cleared <span class="green">all</span> of the fields.
				<<else>>
					<span id="farmYard"><<cheatsRep "farm">></span>
				<</if>>
				<<if $farm_stage gte 5>>
					<hr>
					<<cheatStat "Remy's Encroachment" "farm.aggro" 100>>
					<span id="farmAggro"><<cheatsRep "aggro">></span>
				<</if>>
			</div>
		<</if>>
		<div class="settingsToggleItem">
			<<wolfcaveicon "pup">><span class="gold">Wolves</span>
			<br>
			<<cheatStat "Trust" "wolfpacktrust" 30>>
			<<cheatStat "Fear" "wolfpackfear" 30>>
			<<if $syndromewolves is 1>>
				<<cheatStat "Harmony" "wolfpackharmony" 20>>
				<<cheatStat "Ferocity" "wolfpackferocity" 20>>
				<br>
				Rank: <span id="wolfpackleader"><<cheatsRep "wolfpackleader">></span>
			<</if>>
		</div>
		<div class="settingsToggleItem">
			<<schoolicon "building">><span class="gold">School</span>
			<br>
			<<cheatStat "Status" "cool" $coolmax>>
			<<cheatStat "Delinquency" "delinquency" 1000>>
			<hr>
			<<if $player.penisExist and $player.vaginaExist>>
				<<cheatStat "Hermaphrodite Fame" "schoolrep.herm">>
				<span id="repherm"><<cheatsRep "herm">></span>
			<<else>>
				<<cheatStat "Crossdresser Fame" "schoolrep.crossdress">>
				<span id="repcrossdress"><<cheatsRep "crossdress">></span>
			<</if>>
		</div>
		<<if ["asylum", "prison"].includes($location)>>
			<div class="settingsToggleItem">
				<<if $location is "asylum">>
					<<asylumicon "cell">><span class="gold">Asylum</span>
					<br>
					<<cheatStat "Status" "asylumstatus" 100>>
					<<cheatStat "Suspicion" "asylumsuspicion" 100>>
				<<elseif $location is "prison">>
					<<policeicon>><span class="gold">Prison</span>
					<br>
					<<cheatStat "Guards" "prison.guards" 100>>
					<<cheatStat "Inmates" "prison.inmates" 100>>
				<</if>>
			</div>
		<</if>>
		<<if $dockwork is 2>>
			<div class="settingsToggleItem">
				<<docksicon>><span class="gold">Docks</span>
				<br>
				<<cheatStat "Status" "dockstatus" 100>>
			</div>
		<</if>>
		<<if $pirate_rank gte 0>>
			<div class="settingsToggleItem">
				<<mericon>><span class="gold">Pirates</span>
				<br>
				<<cheatStat "Status" "pirate_status" 100>>
				<br>
				Rank: <span id="pirate_rank"><<cheatsRep "pirate_rank">></span>
			</div>
		<</if>>
		<<if $pound>>
			<div class="settingsToggleItem">
				<<poundicon>><span class="gold">Pound</span>
				<br>
				<<cheatStat "Status" "pound.status" 100>>
				<<cheatStat "Stray Contentment" "stray_happiness" 100>>
			</div>
		<</if>>
		<div class="settingsToggleItem">
			<<homeicon>><span class="gold">Orphanage</span>
			<br>
			<<cheatStat "Hope" "orphan_hope" 50>>
			<<cheatStat "Rebelliousness" "orphan_reb" 50>>
		</div>
	</div>
<</widget>>

<<widget "cheatsRep">>
	<<switch _args[0]>>
		<<case "aggro">>
			<<if $farm.aggro gte 100>>
				<span class="red">Remy's goons operate in the open, sabotaging the farm and its business.</span>
			<<elseif $farm.aggro gte 60>>
				<span class="pink">The farm is being sabotaged, day and night.</span>
			<<elseif $farm.aggro gte 40>>
				<span class="purple">The farm is being sabotaged at night.</span>
			<<elseif $farm.aggro gte 20>>
				<span class="blue">Something is spooking the beasts of the farm.</span>
			<<elseif $farm.aggro gte 10>>
				<span class="lblue">Signs of intrusion have been found around the farm.</span>
			<<elseif $farm.aggro gte 1>>
				<span class="teal">Strange people have been seen watching the farm.</span>
			<<else>>
				<span class="green">The farm is peaceful.</span>
			<</if>>
		<<case "farm">>
			One of the fields is being cleared,
			<<if $farm.clearing lte 0>>
				<span class="green">and is ready for planting!</span>
			<<elseif $farm.clearing lte 20>>
				<span class="teal">and is almost ready for planting.</span>
			<<elseif $farm.clearing lte 40>>
				<span class="lblue">and is starting to look civilised.</span>
			<<elseif $farm.clearing lte 60>>
				<span class="blue">and soil has been exposed in places.</span>
			<<elseif $farm.clearing lte 80>>
				<span class="purple">but the tangle remains defiant.</span>
			<<elseif $farm.clearing lte 99>>
				<span class="pink">but little progress has been made.</span>
			<<else>>
				<span class="red">but remains a jungle of weeds.</span>
			<</if>>
			<<if $farm.clearing gt 0>>
				| <<farmicon "clear yard">><<link "Clear field">><<set $farm.clearing to 0>><<replace "#farmYard">><<cheatsRep "farm">><</replace>><</link>>
			<<else>>
				<span class="green">Talk to Alex to advance farm progress.</span>
			<</if>>
		<<case "crossdress">>
			<<switch $schoolrep.crossdress>>
				<<case 5>><span class="red">Your crossdressing has become common knowledge at school. Everyone knows, including the teachers.</span>
				<<case 4>><span class="pink">Rumours of your crossdressing are spreading throughout the school.</span>
				<<case 3>><span class="purple">Rumours of your crossdressing are spreading, and have become a popular topic of conversation at school.</span>
				<<case 2>><span class="blue">Whispers of your crossdressing are spreading through the school.</span>
				<<case 1>><span class="lblue">A few cliques at school have begun whispering of your crossdressing.</span>
				<<default>><span class="green">No one is spreading rumours about you at school.</span>
			<</switch>>
		<<case "herm">>
			<<switch $schoolrep.herm>>
				<<case 5>><span class="red">Everyone at school has heard of your unique genitalia, including the teachers.</span>
				<<case 4>><span class="pink">Rumours of your unique genitalia have spread throughout the school.</span>
				<<case 3>><span class="purple">It sounds far-fetched to many, but the school is rife with gossip about a student with both boy and girl parts.</span>
				<<case 2>><span class="blue">Rumours of a student with both boy and girl parts are spreading through the school.</span>
				<<case 1>><span class="lblue">A few cliques at school have begun whispering about a student with both boy and girl parts.</span>
				<<default>><span class="green">No one is spreading rumours about you at school.</span>
			<</switch>>
		<<case "wolfpackleader" "pirate_rank">>
				<<set _ranks to _args[0] is "pirate_rank" ? {0: "Scum", 1: "Mate"} : {0: "Packmate", 1: "Pack leader"}>>
				<<capture _i, _ranks>>
				    <<for _i to 0; _i lt Object.keys(_ranks).length; _i++>>
						<span @class="V[_args[0]] is _i ? 'goldLink' : 'unselected'">
							<<link _ranks[_i]>>
								<<set V[_args[0]] to _i>>
								<<replace `"#" + _args[0]`>><<cheatsRep _args[0]>><</replace>>
							<</link>>
						</span>
						<<= _i < Object.keys(_ranks).length - 1 ? "|" : "">>
					<</for>>
				<</capture>>
		<<default>>
	<</switch>>
<</widget>>

<<widget "cheats-teleport">>
	<div class="settingsGrid">
		<div class="settingsHeader options">Teleportation</div>
		<<if ["Clothing Shop", "Forest Shop", "School Library Shop", "Adult Shop Store"].includes($passage)>>
			<div class="settingsToggleItemWide">
				<span class="red">Teleporting from a clothing store can break your wardrobe.</span> Please leave the shop before teleporting.
			</div>
		<<elseif setup.majorAreas.includes($passage) and $event is undefined>>
			<div class="settingsToggleItemWide">
			<b>Teleporting from anywhere but the overworld can cause bugs.</b>
			</div>
			<div class="settingsToggleItem">
				<span class="gold">Town Locations</span>
				<br>
				<<homeicon>>[[Orphanage]]
				<br>
				<<shopicon>>[[Shopping Centre]]
				<br>
				<<if $dorenintro gte 1 and $exposed lte 0>>
					<<dorenflaticon>><<link [[Doren's Flat|Doren Entrance]]>><</link>>
					<br>
				<</if>>
				<<dancestudioicon>>[[Dance Studio]]
				<br>
				<<policeicon>>[[Police Station]]
				<br>
				<<policeicon>>[[Police Back Office]]
				<br>
				<<spaicon>>[[Spa]]
				<br>
				<<wolficon>>[[Temple]]
				<br>
				<<soupkitchenicon>>[[Soup Kitchen]]
				<br>
				<<stripclubicon>>[[Strip Club]]
				<br>
				<<hospitalicon>><<link [[Hospital|Hospital front]]>><</link>>
				<br>
				<<if $trash_unlocked is 1>>
					<<landfillicon>><<link [[Landfill|Trash Gate Enter]]>><</link>>
					<br>
				<</if>>
				<<if $compoundcard or $farm_stage gte 9>>
					<<landfillicon>>[[Elk Compound]]
					<br>
				<</if>>
				<<museumicon>>[[Museum]]
				<br>
				<<oxfordicon>>[[School Front Courtyard]]
				<br>
				<<brothelicon>>[[Brothel]]
				<br>
				<<pubicon>>[[Pub]]
				<br>
				<<busstationicon>>[[Bus Station]]
				<br>
				<<docksicon>>[[Docks]]
				<br>
				<<beachicon>>[[Beach]]
				<br>
				<<cafeicon>>[[Ocean Breeze]]
				<hr>
				<span class="gold">Town Outskirts</span>
				<br>
				<<foresticon>>[[Forest]]
				<br>
				<<roadicon>>[[Farm Road 1]]
				<br>
				<<farmicon "barn">>[[Farmlands|Farmland]]
			</div>
			<div class="settingsToggleItem">
				<span class="gold">Town Streets</span>
				<br>
				<<domusicon>>[[Domus Street]]
				<br>
				<<danubeicon>>[[Danube Street]]
				<br>
				<<barbicon>>[[Barb Street]]
				<br>
				<<wolficon>>[[Wolf Street]]
				<br>
				<<connudatusicon>>[[Connudatus Street]]
				<br>
				<<nightingaleicon>>[[Nightingale Street]]
				<br>
				<<highicon>>[[High Street]]
				<br>
				<<elkicon>>[[Elk Street]]
				<br>
				<<oxfordicon>>[[Oxford Street]]
				<br>
				<<harvesticon>>[[Harvest Street]]
				<br>
				<<mericon>>[[Mer Street]]
				<br>
				<<starfishicon>>[[Starfish Street]]
				<br>
				<<clifficon>>[[Cliff Street]]
				<br>
				<<alleyicon>>[[Commercial alleyways]]
				<br>
				<<alleyicon>>[[Industrial alleyways]]
				<br>
				<<alleyicon>>[[Residential alleyways]]
				<hr>
				<span class="gold">Underground</span>
				<br>
				<<sewericon>>[[Industrial Drain]]
				<br>
				<<sewericon>>[[Commercial Drain]]
				<br>
				<<sewericon>>[[Residential Drain]]
				<br>
				<<sewericon>><<link [[Drain ocean exit|Drain Exit]]>><</link>>
				<br>
				<<sewericon>>[[Sewers Residential]]
				<br>
				<<sewericon>>[[Sewers Commercial]]
				<br>
				<<sewericon>>[[Sewers Industrial]]
			</div>
		<<else>>
			<div class="settingsToggleItemWide">
				<span class="red">You are in an area where teleporting can break your save, or an event is in progress.</span> Return to the overworld before teleporting.
			</div>
		<</if>>
	</div>
<</widget>>

<<widget "cheats-other">>
	<div class="settingsGrid">
		<div class="settingsHeader options">Time and Weather</div>
		<div class="settingsToggleItem">
			<span class="gold">Advance time:</span>
			<br>
			<<link [[15 minutes|$passage]]>><<pass 15>><</link>>
			<br>
			<<link [[30 minutes|$passage]]>><<pass 30>><</link>>
			<br>
			<<for _i, _hr range [1, 2, 3, 6, 8, 12, 16, 24]>>
				<<set _hours to _i is 0 ? "hour" : "hours">>
				<<link [[_hr _hours|$passage]]>><<pass _hr hour>><</link>>
				<<= _i lt 7 ? "<br>" : "">>
			<</for>>
		</div>
		<div class="settingsToggleItem">
			<span class="gold">Current Weather:</span>
			<br>
			<span id="cheatsWeather"><<cheatsWeather>></span>
			<br>
			<span class="description">Changing this setting will change the weather for at least 6 hours, before returning to the original weather simulation.</span>
		</div>
		<div class="settingsToggleItemWide">
			<span class="gold">Temperature</span>
			<<set _symbol to $options.fahrenheit ? "°F" : "°C">>
			<<set _temp to Weather.toSelected(Weather.temperature)>>
			<br>
			Current outside temperature: <<= _temp + _symbol>>
			<br>
			<span class="description">Will increase or decrease the base temperature until the next day - then go back to the proper temperature over time.<br>
			The base temperature will still be modified by other factors such as time of day - and will not be constant throughout the day.</span>
			<br>
			<<link "<">>
				<<set _temp to Math.round(_temp - 1)>>
				<<set Weather.Temperature.set($options.fahrenheit ? Weather.Temperature.toCelsius(_temp) : _temp)>>
				<<set Weather.Temperature.set($options.fahrenheit ? Weather.Temperature.toCelsius(_temp) : _temp, new DateTime(Time.date).addDays(1))>>
				<<replace "#temperatureCheatDisplay">><<= _temp + _symbol>><</replace>>
			<</link>> |
			Change temperature: <span id="temperatureCheatDisplay"><<= _temp + _symbol>></span>
			| <<link ">">>
				<<set _temp to Math.round(_temp + 1)>>
				<<set Weather.Temperature.set($options.fahrenheit ? Weather.Temperature.toCelsius(_temp) : _temp)>>
				<<set Weather.Temperature.set($options.fahrenheit ? Weather.Temperature.toCelsius(_temp) : _temp, new DateTime(Time.date).addDays(1))>>
				<<replace "#temperatureCheatDisplay">><<= _temp + _symbol>><</replace>>
			<</link>>
			<br>
			<span class="description">Changes will be visible after at least 1 minute of time passes.</span>
		</div>
	</div>

	<<if $maxDefaultActionSets isnot undefined>>
		<hr>
		<div class="settingsGrid">
			<div class="settingsHeader options">Default Action Sets</div>
			<div class="settingsToggleItemWide">
			Too many action sets may reduce combat performance. Without cheats, the max number of default action sets is 7.
			<br>
			<<link "<<<">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets -= 10, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>> |
			<<link "<<">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets -= 5, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>> |
			<<link "<">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets -= 1, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>> |
			Sets: <span id="statsDefaultSets"><<= $maxDefaultActionSets>></span>
			| <<link ">">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets += 1, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>>
			| <<link ">>">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets += 5, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>>
			| <<link ">>>">><<set $maxDefaultActionSets to Math.clamp($maxDefaultActionSets += 10, 1, 10)>><<replace "#statsDefaultSets">><<= $maxDefaultActionSets>><</replace>><</link>>
		</div>
	<</if>>
	<hr>
	<div class="settingsGrid">
		<div class="settingsHeader options">Pregnancy</div>
			<<if $parasitepregdisable is "t">>
				<div class="settingsToggleItemWide">
					<span class="gold">Parasitic Pregnancy</span>
					<br>
					You need to enable parasitic pregnancy in the settings to access these cheats.
				</div>
			<<else>>
				<div @class="$player.vaginaExist ? 'settingsToggleItem' : 'settingsToggleItemWide'">
					<<if $sexStats.anus.pregnancy.type is "parasite" or $sexStats.anus.pregnancy.type is null>>
						<div id="cheatsParasiteOptions-anus"><<cheatsParasiteOptions "anus">></div>
					<<else>>
						<span class="gold">Anal Parasitic Pregnancy</span>
						<br>
						You're currently pregnant with <<= $sexStats.anus.pregnancy.type>> children and can't get pregnant with anal parasites.
					<</if>>
				</div>
				<<if $player.vaginaExist>>
					<div class="settingsToggleItem">
						<<if ($sexStats.vagina.pregnancy.type is "parasite" or $sexStats.vagina.pregnancy.type is null)>>
							<div id="cheatsParasiteOptions-vagina"><<cheatsParasiteOptions "vagina">></div>
						<<elseif !($sexStats.vagina.pregnancy.type is "parasite" or $sexStats.vagina.pregnancy.type is null)>>
							<span class="gold">Vaginal Parasitic Pregnancy</span>
							<br>
							You're currently pregnant with <<= $sexStats.vagina.pregnancy.type>> children and can't get pregnant with vaginal parasites.
						<</if>>
					</div>
				<</if>>
			<</if>>
		<<if ($playerPregnancyBeastDisable is "f" or $playerPregnancyHumanDisable is "f")>>
			<div class="settingsToggleItem" id="cheatsPregnancyOptions">
				<<cheatsPregnancyOptions>>
			</div>
			<div class="settingsToggleItem" id="cheatsImpregOptions">
				<<cheatsImpregOptions>>
			</div>
		<<else>>
			<div class="settingsToggleItem">
				<span class="gold">Non-Parasitic Pregnancy</span>
				<br>
				You need to enable pregnancy in the settings to access these cheats.
			</div>
			<div class="settingsToggleItem">
				<span class="gold">Impregnation</span>
				<br>
				You need to enable pregnancy in the settings to access these cheats.
			</div>
		<</if>>
	</div>
<</widget>>

<<widget "cheatsParasiteOptions">>
	<<capture _args, _anal, _type>>
		<<set $_pregnancy to $sexStats[_args[0]].pregnancy>>
		<<set _anal to _args[0] is "anus" ? "anal" : "vaginal">>
		<<set _slots to maxParasites(_args[0])>>
		<<set $_aPregnancy to $sexStats[_args[0]].pregnancy>>
		<<set _parasiteTypes to ["eels", "slimes", "fish", "snake", "worms", "tentacle", "lurker", "wasp", "bee", "squid", "vine", "slug", "maggots", "spiders"]>>
		<<set $_linkName to "Clear current " + _anal + " pregnancies">>

		<span class="gold"><<= _anal.toUpperFirst()>> Parasitic Pregnancy</span>
		<br>
		You can have up to <<number _slots>> _anal <<= _slots is 1 ? "parasite" : "parasites">>.
		<<if $_pregnancy.fetus.length lt maxParasites(_args[0])>>
			<br><br>
			<<if $_aPregnancy.type is "parasite" or $_aPregnancy.type is null>>
				Get Pregnant with a:
				<br>
				<<for _i, _type range _parasiteTypes>>
					<<set _parasiteName to _type.endsWith('s') ? _type.slice(0, -1).toUpperFirst() : _type.toUpperFirst()>>
					<<link _parasiteName>>
						<<impregnateParasite _type true _args[0]>><<cheatsParasite _args[0] _hermaphrodite>>
						<<set _hermaphrodite to false>>
					<</link>>
					<<= _i lt _parasiteTypes.length - 1 ? "|" : "">>
				<</for>>
				<br>
				<<if $_pregnancy.motherStatus lt 2>>
					<label><<checkbox "_hermaphrodite" false true autocheck>> Hermaphrodite</label>
				<<else>>
					You can only have one hermaphrodite parasite in your _args[0] at a time.
				<</if>>
			<<else>>
				You are currently unable to host parasites due to your current _anal pregnancy.
			<</if>>
			<br>
		<<else>>
			You cannot get <<= _anal + "ly">> pregnant with any more parasites.
		<</if>>
		<hr>
		<<for _i to 0; _i lt maxParasites(_args[0]); _i++>>
			<<if $_aPregnancy.fetus[_i] isnot undefined>>
				<<if $_aPregnancy.fetus[_i].fertilised>>
					<<= _anal.toUpperFirst()>> slot <<=_i+1>> is pregnant with a $_aPregnancy.fetus[_i].stats.gender $_aPregnancy.fetus[_i].creature.
					<br>
				<<else>>
					<<= _anal.toUpperFirst()>> slot <<=_i+1>> has a $_aPregnancy.fetus[_i].stats.gender $_aPregnancy.fetus[_i].creature egg ready to be fertilised.
					<br>
				<</if>>
			<<else>>
				<<= _anal.toUpperFirst()>> slot <<=_i+1>> is empty.
				<br>
			<</if>>
		<</for>>
		<<link $_linkName>>
			<<if $sexStats[_args[0]].pregnancy.type is "parasite">>
				<<set $sexStats[_args[0]].pregnancy.fetus to []>>
				<<set $sexStats[_args[0]].pregnancy.type to null>>
				<<if $sexStats[_args[0]].pregnancy.motherStatus is 2>>
					<<set $sexStats[_args[0]].pregnancy.motherStatus to 1>>
				<</if>>
			<</if>>
			<<replace `"#cheatsParasiteOptions-" + _args[0]`>><<cheatsParasiteOptions _args[0]>><</replace>>
		<</link>>
	<</capture>>
<</widget>>

<<widget "cheatsParasite">>
	<<set $_pregnancy to $sexStats[_args[0]].pregnancy>>
	<<if $pregnancyStats.parasiteDoctorEvents lt 2>>
		<<set $pregnancyStats.parasiteDoctorEvents to 2>>
	<</if>>

	<<if _args[1]>>
		<<set $_pregnancy.motherStatus to 2>>
		<<set $_pregnancy.fetus.last().stats.gender to "Hermaphrodite">>
		<<set $_pregnancy.fetus.last().stats.lastEgg to Math.floor($_pregnancy.fetus.last().stats.growth / 3)>>
	<<else>>
		<<if $_pregnancy.motherStatus is 0>>
			<<set $_pregnancy.motherStatus to 1>>
		<</if>>
	<</if>>
	<<fertiliseParasites _args[0]>>
	<<replace `"#cheatsParasiteOptions-" + _args[0]`>><<cheatsParasiteOptions _args[0]>><</replace>>
<</widget>>

<<widget "cheatsPregnancyOptions">>
	<span class="gold">Non-Parasitic Pregnancy</span>
	<br>
	<<set _womb to ($player.vaginaExist ? "vagina" : "anus")>>
	<<set _eligible to ["Avery", "Eden", "Harper", "Kylar", "Morgan", "Robin", "Whitney", "Black Wolf", "Alex", "Wren", "Sydney", "Great Hawk"]>>
	<<set _impregnatableNPC to []>>
	<<set _impregnatorNPC to []>>
	<<set _pregnantNPC to {}>>
	<<for _pregEnabled range $NPCName.filter(npc => npc.pregnancy and npc.pregnancy.enabled isnot undefined)>>
		<<if playerPregnancyPossibleWith(_pregEnabled)>>
			<<set _impregnatorNPC.push($NPCName.indexOf(_pregEnabled))>>
		<</if>>
		<<if NPCPregnancyPossibleWithPlayer(_pregEnabled.nam)>>
			<<set _impregnatableNPC.push($NPCName.indexOf(_pregEnabled))>>
		<</if>>
	<</for>>
	<<if $player.vaginaExist or canBeMPregnant()>>
		<<set _menstruation to $sexStats.vagina.menstruation>>
		<<set $_pregnancy to getPregnancyObject()>>
		<<if !playerIsPregnant() and $cycledisable == "f">>
			You aren't pregnant.
			<<if $pregnancytype is "realistic">>
				You have <span id="cheatSpermSources"><span class="gold"><span class="gold">$sexStats[_womb].sperm.length</span></span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">></span> contributing to your chances of getting pregnant.
			<</if>>
			<br><br>
			Menstruation:
			<br>
			<<link "<<">><<set _menstruation.currentDay to Math.clamp(_menstruation.currentDay - 5, 0, _menstruation.currentDaysMax)>><<replace "#cheatMenstruationDay">><<= Math.trunc(_menstruation.currentDay)>><</replace>><</link>> |
			<<link "<">><<set _menstruation.currentDay to Math.clamp(_menstruation.currentDay - 1, 0, _menstruation.currentDaysMax)>><<replace "#cheatMenstruationDay">><<= Math.trunc(_menstruation.currentDay)>><</replace>><</link>> |
			Day <span id="cheatMenstruationDay"><<= Math.trunc(_menstruation.currentDay)>></span> of _menstruation.currentDaysMax
			| <<link "Ovulate">><<set _menstruation.currentDay to _menstruation.stages[2]>><<replace "#cheatMenstruationDay">><<= Math.trunc(_menstruation.currentDay)>><</replace>><</link>>
			| <<link ">">><<set _menstruation.currentDay to Math.clamp(_menstruation.currentDay + 1, 0, _menstruation.currentDaysMax)>><<replace "#cheatMenstruationDay">><<= Math.trunc(_menstruation.currentDay)>><</replace>><</link>>
			| <<link ">>">><<set _menstruation.currentDay to Math.clamp(_menstruation.currentDay + 5, 0, _menstruation.currentDaysMax)>><<replace "#cheatMenstruationDay">><<= Math.trunc(_menstruation.currentDay)>><</replace>><</link>>
			<br><br>
		<</if>>
		<<if playerIsPregnant()>>
			You are pregnant.
			<br>
			<<link "<<">>
				<<set _pregnancyTimer to getPregnancyObject()>>
				<<set _pregnancyTimer.timer to Math.clamp(_pregnancyTimer.timer - _pregnancyTimer.timerEnd * 0.05, 0, _pregnancyTimer.timerEnd)>>
				<<replace "#cheatPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyTimer.timer / _pregnancyTimer.timerEnd * 100, 0, 100))>>%<</replace>>
				<<updatesidebarimg>>
			<</link>> |
			<<link "<">>
				<<set _pregnancyTimer to getPregnancyObject()>>
				<<set _pregnancyTimer.timer to Math.clamp(_pregnancyTimer.timer - _pregnancyTimer.timerEnd * 0.01, 0, _pregnancyTimer.timerEnd)>>
				<<replace "#cheatPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyTimer.timer / _pregnancyTimer.timerEnd * 100, 0, 100))>>%<</replace>>
				<<updatesidebarimg>>
			<</link>> |
			Pregnancy progress: <span id="cheatPregnancyProgress"><<= Math.round(Math.clamp($_pregnancy.timer / $_pregnancy.timerEnd * 100, 0, 100))>>%</span>
			| <<link ">">>
				<<set _pregnancyTimer to getPregnancyObject()>>
				<<set _pregnancyTimer.timer to Math.clamp(_pregnancyTimer.timer + _pregnancyTimer.timerEnd * 0.01, 0, _pregnancyTimer.timerEnd * .99)>>
				<<replace "#cheatPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyTimer.timer / _pregnancyTimer.timerEnd * 100, 0, 100))>>%<</replace>>
				<<updatesidebarimg>>
			<</link>>
			| <<link ">>">>
				<<set _pregnancyTimer to getPregnancyObject()>>
				<<set _pregnancyTimer.timer to Math.clamp(_pregnancyTimer.timer + _pregnancyTimer.timerEnd * 0.05, 0, _pregnancyTimer.timerEnd * .99)>>
				<<replace "#cheatPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyTimer.timer / _pregnancyTimer.timerEnd * 100, 0, 100))>>%<</replace>>
				<<updatesidebarimg>>
			<</link>>
			<br><br>
			<<link [[Clear current pregnancy|$passage]]>>
				<<set _pregnancyClear to getPregnancyObject()>>
				<<set _pregnancyClear.type to null>>
				<<set _pregnancyClear.fetus to []>>
				<<set _pregnancyClear.waterBreaking to false>>
				<<set _pregnancyClear.waterBreakingTimer to null>>
				<<set _pregnancyClear.timer to null>>
				<<set _pregnancyClear.timerEnd to null>>
				<<set _pregnancyClear.awareOf to null>>
				<<set _pregnancyClear.awareOfMultiple to null>>
				<<set _pregnancyClear.awareOfDetails to null>>
				<<set _pregnancyClear.potentialFathers to []>>
				<<set $sexStats[($player.vaginaExist ? "vagina" : "anus")].sperm to []>>
				<<restartMenstruationCycle>>
				<<set _menstruation.currentState to "normal">>
				<<set _menstruation.recoveryTime to null>>
				<<set _menstruation.recoveryTimeStart to null>>
				<<set _menstruation.recoveryStage to null>>
				<<run delete C.npc.Alex.pregnancy.pcKnowledge>>
				<<run delete C.npc.Alex.pregnancy.test>>
				<<run delete C.npc.Alex.pregnancy.ultraSound>>
				<<run delete C.npc.Alex.pregnancy.sample>>
				<<run delete C.npc.Alex.pregnancy.ultraSoundPics>>
			<</link>>
			<span class="description">This is a cheat, not an abortion.</span>
		<<else>>
			<<if ($playerPregnancyHumanDisable == "f" or $playerPregnancyBeastDisable == "f") and !playerIsPregnant()>>
				Get pregnant from:
				<br>
				<<if $playerPregnancyHumanDisable == "f">>
					<<link [[A random person|$passage]]>> /* checks if males or females have penises, if there is no people with penises a foreigner impregnates PC */
					<<set _impregnator to "cheater ">>
					<<if $dgchance gt 0 and $cbchance lt 100>>
						<<set _impregnator += either("man", "boy", "woman", "girl")>>
					<<elseif $dgchance gt 0 and $cbchance gt 99>>
						<<set _impregnator += either("woman", "girl")>>
					<<elseif $dgchance lt 1 and $cbchance lt 100>>
						<<set _impregnator += either("man", "boy")>>
					<<else>>
						<<set _impregnator += "foreigner">>
					<</if>>
					<<playerPregnancy _impregnator "human" true _womb undefined true>>
					<</link>>
				<</if>>
				<<if $playerPregnancyBeastDisable == "f">>
					<<if $playerPregnancyHumanDisable == "f">>
						|
					<</if>>
					<<link [[A wolf|$passage]]>>
					<<if beastMaleChance() gt 0>> /* checks if there are male wolves, if not a foreigner wolf impregnates PC */
						<<set _impregnator to "cheater wolf">>
					<<else>>
						<<set _impregnator to "cheater foreign wolf">>
					<</if>>
					<<playerPregnancy _impregnator "wolf" true _womb undefined true>>
					<</link>>
				<</if>>
				<<for _pregEnabled range _impregnatorNPC>>
					<<set _actor to $NPCName[_pregEnabled]>>
					<<if !_eligible.includes(_actor.nam)>>
						<<continue>>
					<</if>>
					<<switch _actor.nam>>
						<<case "Black Wolf">><<set _spermType to "wolf">>
						<<case "Great Hawk">><<set _spermType to "hawk">>
						<<default>><<set _spermType to "human">>
					<</switch>>
					<<capture _actor, _spermType, _womb>>
					| <<link [[_actor.nam|$passage]]>>
						<<playerPregnancy _actor.nam _spermType true _womb undefined true>>
					<</link>>
					<</capture>>
				<</for>>
				<<if $player.penisExist>>
					| <<link [[Yourself|$passage]]>>
					<<playerPregnancy "pc" "human" true _womb undefined true>>
					<</link>>
				<</if>>
				<br><br>
				<<if $pregnancytype is "realistic">>
					Add sperm from:
					<br>
					<<if $playerPregnancyHumanDisable == "f">>
						<<link "An anonymous donor">> /* The sperm owner is always the same, anonymous donor, so it helps pregnancy from only one source */
							<<recordSperm `{target: "pc", spermOwner: "anonymous donor", spermType: "human", genital: _womb}`>>
							<<replace "#cheatSpermSources">><span class="gold">$sexStats[_womb].sperm.length</span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">><</replace>>
						<</link>>
						| <<link "A random person">> /* checks if males or females have penises, if there is no people with penises a foreigner inseminates PC */
							<<set _impregnator to either("arbitrary", "aimless", "by-the-way", "casual", "driftless", "hit-or-miss", "fluky", "promiscuous", "slapdash",  "irresponsible", "careless", "negligent") + " cheater ">>
							<<if $dgchance gt 0 and $cbchance lt 100>>
								<<set _impregnator += either("man", "boy", "woman", "girl")>>
							<<elseif $dgchance gt 0 and $cbchance gt 99>>
								<<set _impregnator += either("woman", "girl")>>
							<<elseif $dgchance lt 1 and $cbchance lt 100>>
								<<set _impregnator += either("man", "boy")>>
							<<else>>
								<<set _impregnator += "foreigner">>
							<</if>>
							<<recordSperm `{target: "pc", spermOwner: _impregnator, spermType: "human", genital: _womb}`>>
							<<replace "#cheatSpermSources">><span class="gold">$sexStats[_womb].sperm.length</span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">><</replace>>
						<</link>>
					<</if>>
					<<if $playerPregnancyBeastDisable == "f">>
						<<if $playerPregnancyHumanDisable == "f">>
							|
						<</if>>
						<<link "A wolf">>
							<<if beastMaleChance() gt 0>> /* checks if there are male wolves, if not a foreigner wolf inseminates PC */
								<<set _impregnator to "cheater wolf">>
							<<else>>
								<<set _impregnator to "foreign cheater wolf">>
							<</if>>
							<<recordSperm `{target: "pc", spermOwner: _impregnator, spermType: "wolf", genital: _womb}`>>
							<<replace "#cheatSpermSources">><span class="gold">$sexStats[_womb].sperm.length</span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">><</replace>>
						<</link>>
					<</if>>
					<<for _pregEnabled range _impregnatorNPC>>
						<<set _actor to $NPCName[_pregEnabled]>>
						<<if !_eligible.includes(_actor.nam)>>
							<<continue>>
						<</if>>
						<<switch _actor.nam>>
							<<case "Black Wolf">><<set _spermType to "wolf">>
							<<case "Great Hawk">><<set _spermType to "hawk">>
							<<default>><<set _spermType to "human">>
						<</switch>>
						<<capture _actor, _spermType, _womb>>
						| <<link _actor.nam>>
							<<recordSperm `{target: "pc", spermOwner: _actor.nam, spermType: "human", genital: _womb}`>>
							<<replace "#cheatSpermSources">><span class="gold">$sexStats[_womb].sperm.length</span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">><</replace>>
						<</link>>
						<</capture>>
					<</for>>
					<<if $player.penisExist>>
						| <<link "Yourself">>
							<<recordSperm `{target: "pc", spermOwner: "pc", spermType: "human", genital: _womb}`>>
							<<replace "#cheatSpermSources">><span class="gold">$sexStats[_womb].sperm.length</span> <<= $sexStats[_womb].sperm.length is 1 ? "sperm source" : "sperm sources">><</replace>>
						<</link>>
					<</if>>
				<</if>>
			<</if>>
		<</if>>
	<<else>>
		You are unable to get pregnant.
	<</if>>
<</widget>>

<<widget "cheatsImpregOptions">>
	<span class="gold">Impregnation</span>
	<<if $player.penisExist and _impregnatableNPC.length>>
		<br>
		You can impregnate <span class="gold">_impregnatableNPC.length</span> fertile <<= _impregnatableNPC.length is 1 ? "NPC" : "NPCs">>.
		<br><br>
		<<set _fertileNPC to 0>>
		<<for _pregEnabled range _impregnatableNPC>>
			<<set _actor to $NPCName[_pregEnabled]>>
			<<set _actorNameNoSpace to _actor.nam.replace(" ","")>>
			<<if !_eligible.includes(_actor.nam) or _actor.pregnancy.fetus.length>>
				<<continue>>
			<</if>>
			<<set _fertileNPC += 1>>
			<<= _actor.nam>>:
			<br>
			<<capture _actor>>
				<<set _linkText to "Impregnate">>
				<<link [[_linkText|$passage]]>>
					<<namedNpcPregnancy _actor.nam "pc" "human" true undefined true>>
				<</link>>
				<<if $pregnancytype is "realistic">>
					<<set _linkText to "Inseminate">>
					- <<link _linkText>>
						<<recordSperm `{target: _actor.nam, spermOwner: "pc", spermType: "human", genital: "vagina"}`>>
						<<replace `"#cheatSpermSources" + _actorNameNoSpace`>>(<<= _actor.pregnancy.sperm.length>> doses)<</replace>>
					<</link>>
					<span @id="'cheatSpermSources' + _actorNameNoSpace" class="description">(<<= _actor.pregnancy.sperm.length>> doses)</span>
				<</if>>
				<<if $cycledisable == "f">>
					- <<link [[Set cycle to fertile days|$passage]]>>
						<<set _actor.pregnancy.cycleDay to _actor.pregnancy.cycleDangerousDay - 1>>
					<</link>>
				<</if>>
			<</capture>>
			<br>
		<</for>>
		<<if !_fertileNPC is 0>>
			You can't impregnate any other NPCs.
		<</if>>
	<<else>>
		<br>
		You can't currently impregnate any NPCs<<if !$player.penisExist>>, since you have no penis<</if>>.
	<</if>>

	<<for _pregEnabled range $NPCName>> /* Checks for any pregnant named NPC. */
		<<if npcIsPregnant(_pregEnabled.nam) and _pregEnabled.pregnancy.type isnot "parasite">>
			<<set _pregnantNPC[_pregEnabled.nam] to $NPCName.indexOf(_pregEnabled)>>
		<</if>>
	<</for>>

	<<if Object.keys(_pregnantNPC).length>>
		<hr>
		<span class="gold">Pregnant NPCs</span>
		<br>
		<<listbox "_pregnantNPCId" autoselect>>
			<<optionsfrom _pregnantNPC>>
		<</listbox>>
		<br><br>
		<div id="cheatPregnancyNPC">
			<<cheatPregnancyNPC _pregnantNPCId>>
		</div>
		<<cheatPregnancyNPCReset>>
	<</if>>
<</widget>>

<<widget "cheatPregnancyNPC">>
	<<set _pregnancyNPC to $NPCName[_args[0]].pregnancy>>
	<<set $_fatherName to pregnancyNameCorrection(_pregnancyNPC.fetus[0].father)>>
	<<= $NPCName[_args[0]].nam>> is pregnant with <<= _pregnancyNPC.type is "wolf" ? "wolve" : _pregnancyNPC.type>>s. <<= $_fatherName === "yourself" ? "You are" : $_fatherName.toUpperFirst() + "is">> the father.
	<br>
	<<link "<<">>
		<<set _pregnancyNPC.timer to Math.clamp(_pregnancyNPC.timer - _pregnancyNPC.timerEnd * 0.05, 0, _pregnancyNPC.timerEnd)>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>> |
	<<link "<">>
		<<set _pregnancyNPC.timer to Math.clamp(_pregnancyNPC.timer - _pregnancyNPC.timerEnd * 0.01, 0, _pregnancyNPC.timerEnd)>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>> |
	Pregnancy progress: <span id="cheatNPCPregnancyProgress"><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%</span>
	| <<link ">">>
		<<set _pregnancyNPC.timer to Math.clamp(_pregnancyNPC.timer + _pregnancyNPC.timerEnd * 0.01, 0, _pregnancyNPC.timerEnd)>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>>
	| <<link ">>">>
		<<set _pregnancyNPC.timer to Math.clamp(_pregnancyNPC.timer + _pregnancyNPC.timerEnd * 0.05, 0, _pregnancyNPC.timerEnd)>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>>
	<br>

	<<link "1st trimester">>
		<<set _pregnancyNPC.timer to _pregnancyNPC.timerEnd * .05>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>> -
	<<link "2nd trimester">>
		<<set _pregnancyNPC.timer to _pregnancyNPC.timerEnd * .35>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>> -
	<<link "3rd trimester">>
		<<set _pregnancyNPC.timer to _pregnancyNPC.timerEnd * .7>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>> -
	<<link "End of pregnancy">>
		<<set _pregnancyNPC.timer to _pregnancyNPC.timerEnd>>
		<<replace "#cheatNPCPregnancyProgress">><<= Math.round(Math.clamp(_pregnancyNPC.timer / _pregnancyNPC.timerEnd * 100, 0, 100))>>%<</replace>>
	<</link>>
	<br><br>

	<<link [[Clear pregnancy|$passage]]>>
		<<set _pregnancyNPC.type to null>>
		<<set _pregnancyNPC.fetus to []>>
		<<set _pregnancyNPC.waterBreaking to false>>
		<<set _pregnancyNPC.timer to null>>
		<<set _pregnancyNPC.timerEnd to null>>
		<<set _pregnancyNPC.npcAwareOf to null>>
		<<set _pregnancyNPC.pcAwareOf to null>>
		<<set _pregnancyNPC.potentialFathers to []>>
		<<set _pregnancyNPC.sperm to []>>
		<<set _pregnancyNPC.cycleDay to 1>>
		<<if _pregnantNPCId is 25>><<run delete C.npc.Alex.pregnancy.selfKnowledge>><</if>>
	<</link>>
<</widget>>

<<widget "statColours">>
	<<set _statName to _args[0]>>
	<<set _statPercent to _args[1]>>
	<<switch _statName>>
		<<case "crossdress" "herm">>
			<<switch _statPercent>>
				<<case 5>><<set _statColour to "red">>
				<<case 4>><<set _statColour to "pink">>
				<<case 3>><<set _statColour to "purple">>
				<<case 2>><<set _statColour to "blue">>
				<<case 1>><<set _statColour to "lblue">>
				<<default>><<set _statColour to "green">>
			<</switch>>
		<<case "aggro">>
			<<if $farm.aggro gte 100>><<set _statColour to "red">>
			<<elseif $farm.aggro gte 60>><<set _statColour to "pink">>
			<<elseif $farm.aggro gte 40>><<set _statColour to "purple">>
			<<elseif $farm.aggro gte 20>><<set _statColour to "blue">>
			<<elseif $farm.aggro gte 10>><<set _statColour to "lblue">>
			<<elseif $farm.aggro gte 1>><<set _statColour to "teal">>
			<<else>><<set _statColour to "green">><</if>>
		<<case "submissive">>
			<<set _statColour to getColourClassFromPercentage($submissive/20, _statName)>>
		<<case "pain">>
			<<if _statPercent gte 100 and $willpowerpain is 0>><<set _statColour to "red">>
			<<else>><<set _statColour to getColourClassFromPercentage(_statPercent, _statName)>>
			<</if>>
		<<case "drunk">>
			<<set _statColour to getColourClassFromPercentage((_statPercent / 480), _statName)>>
		<<case "drugged" "hallucinogen">>
			<<set _statColour to getColourClassFromPercentage((_statPercent / 5), _statName)>>
		<<default>>
			<<set _statColour to getColourClassFromPercentage((_statPercent), _statName)>>
	<</switch>>
<</widget>>

<<widget "changeCheatClass">>
	<<for _class range ["red", "pink", "purple", "blue", "lblue", "teal", "green", "gold"]>>
		<<removeclass _args[0] _class>>
	<</for>>
	<<if _args[1] is "On">><<addclass _args[0] "green">>
	<<elseif ["Off", "Disabled"].includes(_args[1])>><<addclass _args[0] "red">>
	<<else>><<addclass _args[0] _statColour>>
	<</if>>
<</widget>>

<<widget "cheatsBody">>
	<<set _bodyTypes to ["masculine", "feminine", "androgynous"]>>

	<<capture _i>>
		<<for _i = 0; _i < _bodyTypes.length; _i++>>
			<span @class="$player.gender_body is _bodyTypes[_i].charAt(0) ? 'goldLink' : 'unselected'">
				<<link _bodyTypes[_i].toUpperFirst()>>
					<<set $player.gender_body to _bodyTypes[_i].charAt(0)>>
					<<replace "#statsBodyType">><<cheatsBody>><</replace>><<updatesidebarimg>>
				<</link>>
			</span>	<<= _i lt _bodyTypes.length - 1 ? "|" : "">>
		<</for>>
	<</capture>>
<</widget>>

<<widget "cheatsBodySize">>
	<<set _size = [6000, 10000, 12000, 16000]>>
	<<set _label = ["Tiny", "Small", "Normal", "Large"]>>

	<<capture _i, _size, _label>>
		<<for _i = 0; _i < _size.length; _i++>>
			<span @class="$bodysize is _i ? 'goldLink' : 'link'">
				<<link _label[_i]>>
					<<set $bodysize to _i>>
					<<set _physique_max_old to $physiquesize>>
					<<set $physiquesize to _size[_i]>>
					<<set $physique *= $physiquesize / _physique_max_old>>
					<<replace "#statsBodySize">><<cheatsBodySize>><</replace>>
				<</link>>
			</span> <<= _i lt _size.length - 1 ? "|" : "">>
		<</for>>
	<</capture>>
<</widget>>

<<widget "cheatsWeather">>
	<<set _weatherTypes to ["clear", "lightClouds", "heavyClouds", "lightPrecipitation", "heavyPrecipitation"]>>
	<<set _dayState to Weather.bloodMoon ? "blood" : Weather.dayState === "night" ? "night" : "day">>
	<<capture _i, _weatherState, _dayState, _name, _iconType, _weatherIcon>>
		<<for _i = 0; _i < _weatherTypes.length; _i++>>
			<<set _weatherState to _weatherTypes[_i]>>
			<<set _iconType = resolveValue(setup.WeatherGeneration.weatherTypes.find(w => w.name === _weatherState).iconType, "clear")>>

			<<set _weatherIcon to `<<icon 'weather/${_dayState}_${_iconType}.png'>>`>>

			<<set _weatherName to _weatherState.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase().toUpperFirst()>>
			<<= _weatherIcon.replace("none", "rain")>>
			<span @class="Weather.name is _weatherState ? 'goldLink' : 'unselected'">
				<<link [[_weatherName|$passage]]>>
					<<set Weather.set(_weatherState, true, 6 * 60)>>
					<<replace "#cheatsWeather">><<cheatsWeather>><</replace>>
				<</link>>
			</span>
			<<= _i lt _weatherTypes.length - 1 ? "<br>" : "">>
		<</for>>
	<</capture>>
<</widget>>

<<widget "cheatsGender">>
	<<set _reasons to []>>
	<<if $sexStats.vagina.menstruation.currentState isnot "normal">><<set _reasons.push("your pregnancy")>><</if>>
	<<if $earSlime.growth gt 50>><<set _reasons.push("your ear slime's current growth")>><</if>>
	<<if _inWardrobe>>
		<<if _reasons.length gte 1>>
			<span class="gold"><<= $player.gender is "m" ? "Male" : $player.gender is "f" ? "Female" : "Hermaphrodite">></span>
			| This setting cannot be changed due to <<= _reasons.join(" and ")>>.
		<<else>>
			<<if $player.gender is "m">>
				<span class="gold">Male</span> |
			<<else>>
				<<link "Male">>
					<<wash>>
					<<set $vaginause to "none">>
					<<set $vaginastate to "none">>
					<<set $penisuse to 0>>
					<<set $penisstate to 0>>
					<<set $player.gender to "m">>
					<<set $player.sex to "m">>
					<<set $player.ballsExist to true>>
					<<set $player.penisExist to true>>
					<<set $player.vaginaExist to false>>
					<<set $sexStats.vagina.menstruation.running = false>>
					<<updatesidebarimg>>
					<<replace "#statsGender">><<cheatsGender>><</replace>>
				<</link>> |
			<</if>>
			<<if $player.gender is "f">>
				<span class="gold">Female</span> |
			<<else>>
				<<link "Female">>
					<<wash>>
					<<set $vaginause to 0>>
					<<set $vaginastate to 0>>
					<<set $penisuse to "none">>
					<<set $penisstate to "none">>
					<<set $player.gender to "f">>
					<<set $player.sex to "f">>
					<<set $player.ballsExist to false>>
					<<set $player.penisExist to false>>
					<<set $player.vaginaExist to true>>
					<<set $sexStats.vagina.menstruation.running = true>>
					<<updatesidebarimg>>
					<<replace "#statsGender">><<cheatsGender>><</replace>>
				<</link>> |
			<</if>>
			<<if $player.gender is "h">>
				<span class="gold">Hermaphrodite</span>
			<<else>>
				<<link "Hermaphrodite">>
					<<wash>>
					<<set $vaginause to 0>>
					<<set $vaginastate to 0>>
					<<set $penisuse to 0>>
					<<set $penisstate to 0>>
					<<set $player.gender to "h">>
					<<set $player.sex to "h">>
					<<set $player.penisExist to true>>
					<<set $player.vaginaExist to true>>
					<<set $sexStats.vagina.menstruation.running = true>>
					<<updatesidebarimg>>
					<<replace "#statsGender">><<cheatsGender>><</replace>>
				<</link>>
			<</if>>
		<</if>>
		<<if $player.gender is "h">>
			<br>
			Hermaphrodite Balls: <span id="statsBallsExist"><<= $player.ballsExist ? "Present" : "Disabled">></span> |
			<<link "Change">>
				<<set $player.ballsExist to clone(!$player.ballsExist)>>
				<<updatesidebarimg>>
				<<replace "#statsGender">><<cheatsGender>><</replace>>
			<</link>>
		<</if>>
	<<else>>
		<span class="gold"><<= $player.gender is "m" ? "Male" : $player.gender is "f" ? "Female" : "Hermaphrodite">></span> | <<if _reasons.length gte 1>>You cannot change your gender due to <<= _reasons.join(" and ")>>. Normally, this<<else>>This<</if>> setting can only be changed when accessing your wardrobe.
	<</if>>
<</widget>>

<<widget "cheatSection">>
	<<switch _args[0]>>
		<<case "crime">>
			<<for _cr range Object.keys(setup.crimeNames)>>
				<<capture _cr>>
					<<link "<<<">><<set C.crime[_cr] -= 10000>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>><<= _percent>><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>> |
					<<link "<<">><<set C.crime[_cr] -= 1000>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>>><<= _percent + "%">><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>> |
					<<link "<">><<set C.crime[_cr] -= 100>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>><<= _percent>><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>> |
					<<set _percent to Math.trunc(C.crime[_cr])>>
					<<statColours "crime" _percent>>
					<<= toTitleCase(setup.crimeNames[_cr])>>: <span @id="'statscrime-'+_cr" @class="_statColour"><<= _percent>></span> |
					<<link ">">><<set C.crime[_cr] += 100>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>><<= _percent>><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>> |
					<<link ">>">><<set C.crime[_cr] += 1000>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>><<= _percent>><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>> |
					<<link ">>>">><<set C.crime[_cr] += 10000>><<replace `"#statscrime-"+_cr`>><<set _percent to Math.trunc(C.crime[_cr])>><<= _percent>><<statColours "crime" _percent>><<changeCheatClass `"#statscrime-"+_cr` _percent>><</replace>><</link>>
					<br>
				<</capture>>
			<</for>>
			<<unset _cr>>
		<<case "negative">>
			<<cheatStat "Sex" "fame.sex" 2000>>
			<<cheatStat "Prostitution" "fame.prostitution" 2000>>
			<<cheatStat "Rape" "fame.rape" 2000>>
			<<cheatStat "Bestiality" "fame.bestiality" 2000>>
			<<cheatStat "Pregnancy" "fame.pregnancy" 2000>>
			<<cheatStat "Impregnation" "fame.impreg" 2000>>
			<<cheatStat "Exhibitionism" "fame.exhibitionism" 2000>>
			<<if playerNormalPregnancyTotal() lt 8>>
				<span class="description"><<set _pregsNeeded to Math.trunc(8-playerNormalPregnancyTotal())>>
				Your pregnancy fame is capped by the amount of pregnancies you've had. You need to get pregnant <span class="gold"><<number _pregsNeeded>></span> more <<= _pregsNeeded is 1 ? "time" : "times">> to reach maximum pregnancy fame.</span>
			<</if>>
		<<case "positive">>
			<<cheatStat "Combat" "fame.scrap" 2000>>
			<<cheatStat "Kindness" "fame.good" 2000>>
			<<cheatStat "Business" "fame.business" 2000>>
			<<cheatStat "Socialite" "fame.social" 2000>>
			<<cheatStat "Model" "fame.model" 2000>>
		<<case "state">>
			<<cheatStat "Pain" "pain" 200>>
			<<cheatStat "Arousal" "arousal" 10000>>
			<<cheatStat "Fatigue" "tiredness" 2000>>
			<<cheatStat "Stress" "stress" 10000>>
			<<cheatStat "Trauma" "trauma" 5000>>
			<<cheatStat "Control" "control" 1000>>
			<<cheatStat "Alcohol" "drunk" 1000>>
			<<cheatStat "Drugs" "drugged" 1000>>
			<<cheatStat "Hallucinogens" "hallucinogen" 1000>>
		<<case "skills">>
			<<cheatStat "Skulduggery" "skulduggery" 1000>>
			<<cheatStat "Dance" "danceskill" 1000>>
			<<cheatStat "Swimming" "swimmingskill" 1000>>
			<<cheatStat "Athletics" "athletics" 1000>>
			<<cheatStat "Tending" "tending" 1000>>
			<<cheatStat "Housekeeping" "housekeeping" 1000>>
		<<case "school">>
			<<cheatStat "Science" "science" 1000>>
			<<cheatStat "Maths" "maths" 1000>>
			<<cheatStat "English" "english" 1000>>
			<<cheatStat "History" "history" 1000>>
		<<case "characteristics">>
			<<cheatStat "Purity" "purity" 1000>>
			<<cheatStat "Beauty" "beauty" 10000>>
			<<cheatStat "Physique" "physique" $physiquesize>>
			<<cheatStat "Willpower" "willpower" 1000>>
			<<cheatStat "Awareness" "awareness" 1000>>
			<<cheatStat "Promiscuity" "promiscuity" 100>>
			<<cheatStat "Exhibitionism" "exhibitionism" 100>>
			<<cheatStat "Deviancy" "deviancy" 100>>
			<<if numberOfEarSlime()>>
				<<cheatStat "Corruption" "earSlime.corruption" 100>>
			<</if>>
		<<case "sex">>
			<<cheatStat "Seduction" "seductionskill" 1000>>
			<<cheatStat "Chest" "chestskill" 1000>>
			<<cheatStat "Buttocks" "bottomskill" 1000>>
			<<if $player.vaginaExist>><<cheatStat "Vaginal" "vaginalskill" 1000>><</if>>
			<<if $player.penisExist>><<cheatStat "Penile" "penileskill" 1000>><</if>>
			<<cheatStat "Thighs" "thighskill" 1000>>
			<<cheatStat "Oral" "oralskill" 1000>>
			<<cheatStat "Hands" "handskill" 1000>>
			<<cheatStat "Anal" "analskill" 1000>>
			<<cheatStat "Feet" "feetskill" 1000>>
		<<default>>
			ERROR: Skill issue.
	<</switch>>
<</widget>>

<<widget "cheatStat">>
	<<set _name to _args[0]>>
	<<set _stat to _args[1]>>
	<<set _parts to _args[1].split(".")>>
	<<set _stat to _parts.length > 1 ? _parts[1] : _args[1]>>
	<<set _loc to _parts.length > 1 ? _parts[0] : null>>
	<<set _link to _loc is "schoolrep" ? ["<", ">"] : ["<<<", "<<", "<", ">", ">>", ">>>"]>>
	<<set _maxStat to _args[2]>>
	<<if _loc is "fame">>
		<<set _steps to [-1000, -100, -10, 10, 100, 1000]>>
	<<elseif setup.NPCNameList.includes(_name) or _loc is "pound">>
		<<set _steps to [-100, -10, -1, 1, 10, 100]>>
	<<else>>
		<<switch _stat>>
			<<case "herm" "crossdress">><<set _steps to [-1, 1]>>
			<<case "wolfpackharmony" "wolfpackferocity" "wolfpacktrust" "wolfpackfear" "horses" "cattle" "pigs" "dogs">><<set _steps to [-10, -5, -1, 1, 5, 10]>>
			<<case "money">><<set _steps to [-100000, -10000, -1000, 1000, 10000, 100000]>>
			<<case "beauty" "physique">><<set _steps to [-5000, -500, -50, 50, 500, 5000]>>
			<<case "teeth" "pain" "promiscuity" "exhibitionism" "deviancy" "corruption" "stray_happiness" "pirate_status" "dockstatus" "grace">><<set _steps to [-100, -10, -1, 1, 10, 100]>>
			<<case "aggro" "orphan_hope" "orphan_reb">><<set _steps to [-100, -15, -5, 5, 15, 100]>>
			<<case "arousal" "stress" "trauma">><<set _steps to [-10000, -1000, -100, 100, 1000, 10000]>>
			<<default>><<set _steps to [-1000, -100, -10, 10, 100, 1000]>>
		<</switch>>
	<</if>>
	<<set _farm to ["horses", "pigs", "cattle", "dogs"].includes(_stat)>>
	<<set _id to `stats${_farm || _stat is "aggro" ? _stat : _name.replace(" ", "")}${_loc ? _loc : _stat}`>>

	<<capture _name, _stat, _value, _maxValue>>
		<<if setup.NPCNameList.includes(_name)>>
			<<set _percent to Math.floor((C.npc[_name][_stat]/_maxStat)*100)>>
		<<elseif _stat is "submissive">>
			<<set _percent to Math.floor((V[_stat]-1000)/10)>>
		<<elseif _maxStat>>
			<<set _percent to Math.floor((_farm ? $farm.beasts[_stat]/_maxStat : _loc ? V[_loc][_stat]/_maxStat : V[_stat]/_maxStat)*100)>>
		<<else>>
			<<set _percent to Math.trunc(_loc ? V[_loc][_stat] : V[_stat])>>
		<</if>>
		<<statColours _stat _percent>>
	<</capture>>

	<<capture _step, _link, _id, _name, _loc, _stat, _maxStat, _farm>>
		<<cheatStatLinks "left">>

		<span @id="'label' + _id"><<statName _name _stat>></span>
		<span @id="_id" @class="_statColour">
			<<= _stat is "money" ? "<<printmoney _percent>>" : _maxStat ? _percent + "%" : _percent>>
		</span> |

		<<cheatStatLinks "right">>
	<</capture>>
	<br>
<</widget>>

<<widget "cheatStatLinks">>
	<<for _i, _step range _steps>>
		<<if _args[0] is "left" ? _step lt 0 : _step gt 0>>
			<<link _link[_i]>>
				<<if setup.NPCNameList.includes(_name)>>
					<<set _realStat to _stat is "corruption" ? "purity" : _stat>>
					<<npcincr _name _realStat _step>>
				<<elseif _stat is "arousal">>
					<<arousal _step>>
				<<elseif _stat is "pirate_status">>
					<<pirate_status _step>>
				<<elseif !_stat.includes("fame")>>
					<<set _farm ? $farm.beasts[_stat] += _step : _loc ? V[_loc][_stat] += _step : V[_stat] += _step>>
				<</if>>
				<<clamp>>
				<<if _loc is "fame">>
					<<switch _stat>>
						<<case "sex">><<famesex _step "none" true>>
						<<case "prostitution">><<fameprostitution _step "none" true>>
						<<case "rape">><<famerape _step "none" true>>
						<<case "bestiality">><<famebestiality _step "none" true>>
						<<case "pregnancy">><<famepregnancy _step "none" true>>
						<<case "impreg">><<fameimpreg _step "none" true>>
						<<case "exhibitionism">><<fameexhibitionism _step "none" true>>
						<<case "scrap">><<famescrap _step "none" true>>
						<<case "good">><<famegood _step "none" true>>
						<<case "business">><<famebusiness _step "none" true>>
						<<case "social">><<famesocial _step "none" true>>
						<<case "model">><<famemodel _step "none" true>>
					<</switch>>
					<<fameclamp>>
				<<else>>
					<<switch _stat>>
						<<case "horses" "pigs" "dogs" "cattle">>
							<<set V.farm.beasts[_stat] = Math.clamp(V.farm.beasts[_stat], -30, 30)>>
						<<case "crossdress" "herm">>
							<<set V[_loc][_stat] = Math.clamp(V[_loc][_stat], 0, 5)>>
							<<replace `"#rep" + _stat`>><<cheatsRep _stat>><</replace>>
						<<case "guards" "inmates" "status" "aggro" "teeth">>
							<<set V[_loc][_stat] = Math.clamp(V[_loc][_stat], 0, _maxStat)>>
							<<if _stat is "aggro">><<replace "#farmAggro">><<cheatsRep "aggro">><</replace>><</if>>
						<<case "asylumstatus" "suspicion" "dockstatus" "stray_happiness" "wolfpackharmony" "wolfpackferocity" "wolfpacktrust" "wolfpackfear">>
							<<set V[_stat] to Math.clamp(V[_stat], 0, _maxStat)>>
						<<case "science" "maths" "english" "history">>
							<<set $school += (_step * 4)>><<adjust_school_traits>>
						<<case "pain" "arousal" "tiredness" "stress" "trauma" "control" "drunk" "drugged" "hallucinogen" "corruption">>
							<<updatesidebarimg>>
						<<case "grace">>
							<<set $grace = Math.clamp($grace, -100, 100)>>
						<<case "hairlength" "fringelength">>
							<<calchairlengthstage>><<updatesidebarimg>>
					<</switch>>
				<</if>>
				<<set _double to _name is "Alex" and ["love", "dom"].includes(_stat) and C.npc.Alex[_stat] lt 0 || _stat is "corruption">>
				<<if setup.NPCNameList.includes(_name)>>
					<<set _percent to Math.floor((C.npc[_name][_stat]/_maxStat) * (_double ? 200 : 100))>>
				<<elseif _stat is "submissive">>
					<<set _percent to Math.floor((V[_stat]-1000)/10)>>
				<<elseif _maxStat>>
					<<set _percent to Math.floor((_farm ? $farm.beasts[_stat]/_maxStat : _loc ? V[_loc][_stat]/_maxStat : V[_stat]/_maxStat)*100)>>
				<<else>>
					<<set _percent to Math.trunc(_loc ? V[_loc][_stat] : V[_stat])>>
				<</if>>
				<<if setup.NPCNameList.includes(_name)>>
					<<if ["purity", "corruption"].includes(_stat)>>
						<<set $purityEvent to 1>><<set $corruptionEvent to 1>>
						<<set _stat to C.npc[_name].purity gt 0 ? "purity" : "corruption">>
						<<replace `"#" + _name.toLowerCase() + "desc"`>>
							/* Use of _name just in case any other NPCs get purity as a stat besides Sydney */
							(Setting <<= _name>>'s <<= C.npc[_name].purity gt 0 ? "purity to below 0%" : "corruption to above 0%">> will switch it to <<= C.npc[_name].purity gt 0 ? "corruption" : "purity">>.)
						<</replace>>
					<</if>>
					<<statColours _stat _percent>>
					<<replace `"#label" + _id`>><<statName  _name _stat>><</replace>>
					<<replace `"#" + _id`>><<= _percent + "%">><<changeCheatClass `"#" + _id` _statColour>><</replace>>
				<<else>>
					<<statColours _stat _percent>>
					<<replace `"#" + _id`>><<= _stat is "money" ? "<<printmoney _percent>>" : _maxStat ? _percent + "%" : _percent>><<changeCheatClass `"#" + _id` _statColour>><</replace>>
				<</if>>
			<</link>>
			<<= _step lt _steps[5] ? "|" : "">>
		<</if>>
	<</for>>
<</widget>>

<<widget "statName">>
	<<set _statName to _stat.toUpperFirst()>>
	<<switch _name>>
		<<case "Trust">><<symbol "love">>
		<<case "Fear">><<symbol "fear">>
		<<case "Harmony">><<wolfcaveicon "harmony">>
		<<case "Ferocity">><<wolfcaveicon "ferocity">>
		<<case "Steeds' Respect" "Pigs' Respect" "Dogs' Respect" "Cattle Respect">>
			<<switch _stat>>
				<<case "horses">><<animalicon "horse">>
				<<case "pigs">><<animalicon "pig">>
				<<case "cattle">><<animalicon "cow">>
				<<case "dogs">><<animalicon "dog">>
			<</switch>>
		<<case "Beauty" "Physique" "Awareness" "Promiscuity" "Exhibitionism" "Deviancy" "Willpower" "Purity" "Corruption">><<if _loc isnot "fame">><<symbol _name.toLowerCase()>><</if>>
		<<case "Science">><<scienceicon>>
		<<case "Maths">><<mathicon>>
		<<case "English">><<englishicon>>
		<<case "History">><<historyicon>>
		<<default>>/* No icon */
	<</switch>>

	<<if setup.NPCNameList.includes(_name)>>
		<<if ["Robin", "Whitney", "Eden", "Kylar", "Sydney", "Avery", "Great Hawk", "Black Wolf", "Alex", "Mason", "Zephyr"].includes(_name)>>
			<<switch _stat>>
				<<case "dom">>
					<<set _statName to _name is "Robin" ? "Confidence" : "Dominance">>
					<<set _src to _name is "Robin" ? "confidence" : "dominance">>
					<<symbol _src>>
				<<case "rage">>
					<<set _statName to _name is "Kylar" ? "Jealousy" : "Rage">>
					<<set _src to _name is "Kylar" ? "jealousy" : "rage">>
					<<symbol _src>>
				<<case "purity" "corruption">>
					<<set _src to C.npc[_name].purity gt 0 ? "angel" : "demon">>
					<<tficon _src>>
				<<default>>
					<<symbol _stat>>
			<</switch>>
		<<else>>
			<<= _name>>
		<</if>>
		<<= _statName>>:
	<<else>>
		<<= _name>>:
	<</if>>
<</widget>>
