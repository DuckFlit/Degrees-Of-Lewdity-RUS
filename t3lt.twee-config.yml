aliases:
  dom: &dom
    border: solid 0px
  form: &form
    border: solid 0px
  img: &img
    border: 1px
    borderStyle: dashed dashed none
  legacy: &legacy
    border: solid 0px
  links: &links
    textDecoration: bold
  refactor: &refactor
    textDecoration: bold
  temp: &temp
    border: solid 0px
  text: &text
    textDecoration: underline
  unused: &unused
    border: 0px
sugarcube-2:
  enums:
    bodyLiquidParts: '"neck"|"rightarm"|"leftarm"|"thigh"|"bottom"|"tummy"|"chest"|"face"|"hair"|"feet"|"vaginaoutside"|"vagina"|"penis"|"anus"|"mouth"'
    bodyLiquidPartsDesc: '`"neck"` | `"rightarm"` | `"leftarm"` | `"thigh"` | `"bottom"` | `"tummy"` | `"chest"` | `"face"` | `"hair"` | `"feet"` | `"vaginaoutside"` | `"vagina"` | `"penis"` | `"anus"` | `"mouth"`'
    bodyParts: '"forehead"|"left_cheek"|"right_cheek"|"left_shoulder"|"right_shoulder"|"breasts"|"back"|"left_bottom"|"right_bottom"|"pubic"|"left_thigh"|"right_thigh"'
    bodyPartsDesc: '`"forehead"` | `"left_cheek"` | `"right_cheek"` | `"left_shoulder"` | `"right_shoulder"` | `"breasts"` | `"back"` | `"left_bottom"` | `"right_bottom"` | `"pubic"` | `"left_thigh"` | `"right_thigh"`'
    clothesTypes: '"over_upper"|"over_lower"|"upper"|"lower"|"under_upper"|"under_lower"|"over_head"|"head"|"face"|"neck"|"hands"|"handheld"|"legs"|"feet"|"genitals"'
    clothesTypesDesc: '`"over_upper"` | `"over_lower"` | `"upper"` | `"lower"` | `"under_upper"` | `"under_lower"` | `"over_head"` | `"head"` | `"face"` | `"neck"` | `"hands"` | `"handheld"` | `"legs"` | `"feet"` | `"genitals"`'
    combatPositions: '"doggy"|"missionary"'
    combatPositionsDesc: '`"doggy"` | `"missionary"`'
    combatProps: '"haybale"|"milk"|"bench"|"table"'
    combatPropsDesc: '`"haybale"` | `"milk"` | `"bench"` | `"table"`'
    crimeTypes: '"assault"|"coercion"|"destruction"|"exposure"|"obstruction"|"prostitution"|"resisting"|"thievery"|"petty"|"trespassing"'
    crimeTypesDesc: '`"assault"` | `"coercion"` | `"destruction"` | `"exposure"` | `"obstruction"` | `"prostitution"` | `"resisting"` | `"thievery"` | `"petty"` | `"trespassing"`'
    fameTypes: '"exhibitionism"|"prostitution"|"bestiality"|"sex"|"rape"|"good"|"business"|"scrap"|"pimp"|"social"|"model"|"pregnancy"|"impreg"'
    fameTypesDesc: '`"exhibitionism"` | `"prostitution"` | `"bestiality"` | `"sex"` | `"rape"` | `"good"` | `"business"` | `"scrap"` | `"pimp"` | `"social"` | `"model"` | `"pregnancy"` | `"impreg"`'
    insecurityTypes: '"penis_tiny"|"penis_small"|"penis_big"|"breasts_tiny"|"breasts_small"|"breasts_big"|"pregnancy"'
    insecurityTypesDesc: '`"penis_tiny"` | `"penis_small"` | `"penis_big"` | `"breasts_tiny"` | `"breasts_small"` | `"breasts_big"` | `"pregnancy"`'
    liquidTypes: '"goo"|"slime"|"fluid"|"nectar"|"cum"|"semen"'
    liquidTypesDesc: '`"goo"` | `"slime"` | `"fluid"` | `"nectar"` | `"cum"` | `"semen"`'
    loveInterest: '"Robin"|"Whitney"|"Kylar"|"Sydney"|"Eden"|"Avery"|"Alex"|"Great Hawk"|"Black Wolf"'
    loveInterestDesc: '`"Robin"` | `"Whitney"` | `"Kylar"` | `"Sydney"` | `"Eden"` | `"Avery"` | `"Alex"` | `"Great Hawk"` | `"Black Wolf"`'
    namedNPC: '"Avery"|"Bailey"|"Briar"|"Charlie"|"Darryl"|"Doren"|"Eden"|"Gwylan"|"Harper"|"Jordan"|"Kylar"|"Landry"|"Leighton"|"Mason"|"Morgan"|"River"|"Robin"|"Sam"|"Sirris"|"Whitney"|"Winter"|"Black Wolf"|"Niki"|"Quinn"|"Remy"|"Alex"|"Great Hawk"|"Wren"|"Sydney"|"Ivory Wraith"|"Zephyr"'
    namedNPCDesc: '`"Avery"` | `"Bailey"` | `"Briar"` | `"Charlie"` | `"Darryl"` | `"Doren"` | `"Eden"` | `"Gwylan"` | `"Harper"` | `"Jordan"` | `"Kylar"` | `"Landry"` | `"Leighton"` | `"Mason"` | `"Morgan"` | `"River"` | `"Robin"` | `"Sam"` | `"Sirris"` | `"Whitney"` | `"Winter"` | `"Black Wolf"` | `"Niki"` | `"Quinn"` | `"Remy"` | `"Alex"` | `"Great Hawk"` | `"Wren"` | `"Sydney"` | `"Ivory Wraith"` | `"Zephyr"`'
    plantTypes: '"apple"|"baby_bottle_of_breast_milk"|"banana"|"bird_egg"|"blackberry"|"blood_lemon"|"bottle_of_breast_milk"|"bottle_of_milk"|"bottle_of_semen"|"broccoli"|"cabbage"|"carnation"|"chicken_egg"|"daisy"|"garlic_bulb"|"ghostshroom"|"lemon"|"lily"|"lotus"|"mushroom"|"onion"|"orange"|"orchid"|"peach"|"pear"|"plum"|"plumeria"|"poppy"|"potato"|"red_rose"|"strange_flower"|"strawberry"|"truffle"|"tulip"|"turnip"|"white_rose"|"wild_carrot"|"wild_honeycomb"|"wolfshroom"'
    plantTypesDesc: '`"apple"` | `"baby_bottle_of_breast_milk"` | `"banana"` | `"bird_egg"` | `"blackberry"` | `"blood_lemon"` | `"bottle_of_breast_milk"` | `"bottle_of_milk"` | `"bottle_of_semen"` | `"broccoli"` | `"cabbage"` | `"carnation"` | `"chicken_egg"` | `"daisy"` | `"garlic_bulb"` | `"ghostshroom"` | `"lemon"` | `"lily"` | `"lotus"` | `"mushroom"` | `"onion"` | `"orange"` | `"orchid"` | `"peach"` | `"pear"` | `"plum"` | `"plumeria"` | `"poppy"` | `"potato"` | `"red_rose"` | `"strange_flower"` | `"strawberry"` | `"truffle"` | `"tulip"` | `"turnip"` | `"white_rose"` | `"wild_carrot"` | `"wild_honeycomb"` | `"wolfshroom"`'
    pronouns: he, him, girl, girlfriend, sir, lass
    virginityTypes: '"vaginal"|"penile"|"anal"|"oral"|"kiss"|"handholding"'
    virginityTypesDesc: '`"vaginal"` | `"penile"` | `"anal"` | `"oral"` | `"kiss"` | `"handholding"`'
  macros:
    a:
      description: |-
        Prints text with prepended correctly-tensed indefinite article

        `<<a text>>`
        - **text**: `string` - text to check first character of
      parameters:
        - "string"
      tags: ["text"]
    A:
      description: |-
        Prints text with prepended correctly-tensed capitalised indefinite article

        `<<a text>>`
        - **text**: `string` - text to check first character of
      parameters:
        - "string"
      tags: ["text"]
    a_pillory_person:
      description: |-
        Prints `a <<person>>` or the name of person in the pillory

        Undercase `<<A_pillory_person>>`.
        Related to `<<the_pillory_person>>`/ '<<The_pillory_person>>
      tags: ["text", "unused"]
    A_pillory_person:
      description: |-
        Prints `A <<person>>` or the name of person in the pillory

        Capitalised `<<a_pillory_person>>`.
        Related to `<<the_pillory_person>>` / '<<The_pillory_person>>'
      tags: ["text"]
    a_role:
      description: |-
        Prints active npc as their role

        Example:
        ```
        You find <<a_role>> nearby to help you out with this example.
        ```
      tags: ["text"]
    A_role:
      description: |-
        Prints active npc as their role capitalised

        Example:
        ```
        <<A_role>> comes out from behind the other to help with the example.
        ```
      tags: ["unused", "text"]
    abomination:
      name: abomination
    abortbrothelshow:
      name: abortbrothelshow
      tags: ["unused"]
    acceptance:
      description: |-
        Adds acceptance to pc's state concerning specific part and applies effects

        `$acceptance_X` are measures of pc overcoming specific insecurities where 0 is not accepting (0-1,000)

        `<<insecurity part change>>`
        - **part**: `string` - part to gain insecurity in
          - %insecurityTypesDesc%
        - **change**: `number` - +/- change to apply
      parameters:
        - "%insecurityTypes% &+ number"
    acceptassignment:
      name: acceptassignment
    acceptbrothelshow:
      name: acceptbrothelshow
    actioncarry:
      name: actioncarry
    actioncarrydrop:
      name: actioncarrydrop
    actionsabomination:
      name: actionsabomination
    actionsAnalKiss:
      name: actionsAnalKiss
    actionsAnalLick:
      name: actionsAnalLick
    actionsanusdoubleedging:
      name: actionsanusdoubleedging
    actionsanusdoubleescape:
      name: actionsanusdoubleescape
    actionsanusdoubletake:
      name: actionsanusdoubletake
    actionsanusdoublethrust:
      name: actionsanusdoublethrust
    actionsanusedging:
      name: actionsanusedging
    actionsanusescape:
      name: actionsanusescape
    actionsanusFaceAgainstAnus:
      name: actionsanusFaceAgainstAnus
    actionsanusHandAgainstAnus:
      name: actionsanusHandAgainstAnus
    actionsanusHandEntrance:
      name: actionsanusHandEntrance
    actionsanusHandPenetration:
      name: actionsanusHandPenetration
    actionsanusMouthEntrance:
      name: actionsanusMouthEntrance
    actionsanusMouthImminent:
      name: actionsanusMouthImminent
    actionsanusMouthPenetration:
      name: actionsanusMouthPenetration
    actionsanusPenisAgainstAnus:
      name: actionsanusPenisAgainstAnus
    actionsanusPenisDoubleEntrance:
      name: actionsanusPenisDoubleEntrance
    actionsanuspenisdoublefuck:
      name: actionsanuspenisdoublefuck
    actionsanusPenisDoubleImminent:
      name: actionsanusPenisDoubleImminent
    actionsanusPenisDoublePenetration:
      name: actionsanusPenisDoublePenetration
    actionsanusPenisEntrance:
      name: actionsanusPenisEntrance
    actionsanuspenisfucknew:
      name: actionsanuspenisfucknew
    actionsanusPenisImminent:
      name: actionsanusPenisImminent
    actionsanusPenisPenetration:
      name: actionsanusPenisPenetration
    actionsanusrub:
      name: actionsanusrub
    actionsanustake:
      name: actionsanustake
    actionsanusthrust:
      name: actionsanusthrust
    actionsanustopenisnew:
      name: actionsanustopenisnew
    actionscheekrub:
      name: actionscheekrub
    actionschoke:
      name: actionschoke
    actionsclitrub:
      name: actionsclitrub
    actionsclitstroke:
      name: actionsclitstroke
    actionsconfront:
      name: actionsconfront
    actionsconfrontNNPC:
      name: actionsconfrontNNPC
    actionsdemand:
      name: actionsdemand
    actionsdissociation:
      name: actionsdissociation
    actionsfeetpussy:
      name: actionsfeetpussy
    actionsfeetrub:
      name: actionsfeetrub
    actionsfencingcooperate:
      name: actionsfencingcooperate
    actionsfencingescape:
      name: actionsfencingescape
    actionsfencingtake:
      name: actionsfencingtake
    actionsfencingtease:
      name: actionsfencingtease
    actionsgrabrub:
      name: actionsgrabrub
    actionsgrowl:
      name: actionsgrowl
    actionshandanustake:
      name: actionshandanustake
    actionshandanustease:
      name: actionshandanustease
    actionshandanusthrust:
      name: actionshandanusthrust
    actionshandbite:
      name: actionshandbite
    actionshandedge:
      name: actionshandedge
    actionshit:
      name: actionshit
    actionskick:
      name: actionskick
    actionskiss:
      name: actionskiss
    actionskissback:
      name: actionskissback
    actionsman:
      name: actionsman
    actionsmoan:
      name: actionsmoan
    actionsmock:
      name: actionsmock
    actionsmouthbottomrub:
      name: actionsmouthbottomrub
    actionsmouththighrub:
      name: actionsmouththighrub
    actionsOmni:
      name: actionsOmni
    actionsoraledge:
      name: actionsoraledge
    actionsorgasm:
      name: actionsorgasm
    actionsotheranusedging:
      name: actionsotheranusedging
    actionsotheranusescape:
      name: actionsotheranusescape
    actionsotheranusrub:
      name: actionsotheranusrub
    actionsotheranustake:
      name: actionsotheranustake
    actionsotheranustease:
      name: actionsotheranustease
    actionsotheranusthrust:
      name: actionsotheranusthrust
    actionsothermouthanusescape:
      name: actionsothermouthanusescape
    actionsothermouthanusrub:
      name: actionsothermouthanusrub
    actionsothermouthanustease:
      name: actionsothermouthanustease
    actionsothermouthanusthrust:
      name: actionsothermouthanusthrust
    actionsothermouthpenisescape:
      name: actionsothermouthpenisescape
    actionsothermouthpenisrub:
      name: actionsothermouthpenisrub
    actionsothermouthpenistease:
      name: actionsothermouthpenistease
    actionsothermouthpenisthrust:
      name: actionsothermouthpenisthrust
    actionsothermouthvaginaescape:
      name: actionsothermouthvaginaescape
    actionsothermouthvaginarub:
      name: actionsothermouthvaginarub
    actionsothermouthvaginatease:
      name: actionsothermouthvaginatease
    actionsothermouthvaginathrust:
      name: actionsothermouthvaginathrust
    actionsotherpenispenisrub:
      name: actionsotherpenispenisrub
    actionsothervaginavaginarub:
      name: actionsothervaginavaginarub
    actionspain:
      name: actionspain
    actionspenisAgainstAss:
      name: actionspenisAgainstAss
    actionspenisAgainstClit:
      name: actionspenisAgainstClit
    actionspenisAnusEntrance:
      name: actionspenisAnusEntrance
    actionspenisanusfucknew:
      name: actionspenisanusfucknew
    actionspenisAnusImminent:
      name: actionspenisAnusImminent
    actionspenisAnusPenetration:
      name: actionspenisAnusPenetration
    actionspenisdoubleedging:
      name: actionspenisdoubleedging
    actionspenisdoubleride:
      name: actionspenisdoubleride
    actionspenisdoubletake:
      name: actionspenisdoubletake
    actionspenisdoubletip:
      name: actionspenisdoubletip
    actionspenisedging:
      name: actionspenisedging
    actionspenisescape:
      name: actionspenisescape
    actionspeniskiss:
      name: actionspeniskiss
    actionspenislick:
      name: actionspenislick
    actionspenisMouthEntrance:
      name: actionspenisMouthEntrance
    actionspenisMouthImminent:
      name: actionspenisMouthImminent
    actionspenisMouthPenetration:
      name: actionspenisMouthPenetration
    actionspenisPenisEntrance:
      name: actionspenisPenisEntrance
    actionspenisPenisFencing:
      name: actionspenisPenisFencing
    actionspenisPenisImminent:
      name: actionspenisPenisImminent
    actionspenisPussyEntrance:
      name: actionspenisPussyEntrance
    actionspenisPussyImminent:
      name: actionspenisPussyImminent
    actionspenisPussyPenetration:
      name: actionspenisPussyPenetration
    actionspenisride:
      name: actionspenisride
    actionspenisrub:
      name: actionspenisrub
    actionspenisstroke:
      name: actionspenisstroke
    actionspenissuck:
      name: actionspenissuck
    actionspenistake:
      name: actionspenistake
    actionspenistip:
      name: actionspenistip
    actionspenistoanusnew:
      name: actionspenistoanusnew
    actionspenistopenis:
      name: actionspenistopenis
    actionspenistopenisfucknew:
      name: actionspenistopenisfucknew
    actionspenistovaginanew:
      name: actionspenistovaginanew
    actionspenisvaginafucknew:
      name: actionspenisvaginafucknew
    actionsplead:
      name: actionsplead
    actionspossessed:
      name: actionspossessed
    actionspussyedging:
      name: actionspussyedging
    actionspussylick:
      name: actionspussylick
    actionspussyrub:
      name: actionspussyrub
    actionspussytake:
      name: actionspussytake
    actionspussytease:
      name: actionspussytease
    actionspussythrust:
      name: actionspussythrust
    actionsshaftrub:
      name: actionsshaftrub
    actionsStroke:
      name: actionsStroke
    actionsStrokerCooperate:
      name: actionsStrokerCooperate
    actionsStrokerRest:
      name: actionsStrokerRest
    actionstentacleadvanus:
      name: actionstentacleadvanus
      tags: ["unused"]
    actionstentacleadvbottom:
      name: actionstentacleadvbottom
      tags: ["unused"]
    actionstentacleadvcheckbox:
      description: |-
        Prints `<<radiobutton>>` for tentacle actions

        `<<actionstentacleadvcheckbox behavior checkboxText receiverVar checkedValue defaultValue>>`

        - **behavior**: `string` - decoration and classification of label
          - `"def"` | `"sub"` | `"neutral"` | `"brat"`
        - **checkboxText**: `string` - displayed label of the checkbox
        - **receiverName**: `string` - name of the variable to modify, which must be quoted—e.g., `"$foo"`. See `<<radiobutton>>`
        - **checkedValue**: `object` - value set by the radio button when checked. See `<<radiobutton>>`
        - **defaultValue**: `object` - displays the radiobutton as checked if this value exactly matches `checkedValue`
      parameters:
        - '"def"|"sub"|"neutral"|"brat" &+ string &+ string &+ var|bareword |+ var|bareword'
      tags: ["text"]
    actionstentacleadvchest:
      name: actionstentacleadvchest
      tags: ["unused"]
    actionstentacleadvlefthand:
      name: actionstentacleadvlefthand
    actionstentacleadvlegs:
      name: actionstentacleadvlegs
    actionstentacleadvmouth:
      name: actionstentacleadvmouth
      tags: ["unused"]
    actionstentacleadvpenis:
      name: actionstentacleadvpenis
    actionstentacleadvrighthand:
      name: actionstentacleadvrighthand
    actionstentacleadvthighs:
      name: actionstentacleadvthighs
      tags: ["unused"]
    actionstentacleadvvagina:
      name: actionstentacleadvvagina
      tags: ["unused"]
    actionstentacles:
      name: actionstentacles
    actionstentacleslefthand:
      name: actionstentacleslefthand
      tags: ["unused"]
    actionstentacleslegs:
      name: actionstentacleslegs
      tags: ["unused"]
    actionstentaclespenis:
      name: actionstentaclespenis
      tags: ["unused"]
    actionstentaclesrighthand:
      name: actionstentaclesrighthand
      tags: ["unused"]
    actionsthighrub:
      name: actionsthighrub
    actionstribcooperate:
      name: actionstribcooperate
    actionstribedge:
      name: actionstribedge
    actionstribescape:
      name: actionstribescape
    actionsTribRest:
      name: actionsTribRest
    actionstribtake:
      name: actionstribtake
    actionstribtease:
      name: actionstribtease
    actionsvaginadoubleescape:
      name: actionsvaginadoubleescape
    actionsvaginaescape:
      name: actionsvaginaescape
    actionsvaginaMouthEntrance:
      name: actionsvaginaMouthEntrance
    actionsvaginaMouthImminent:
      name: actionsvaginaMouthImminent
    actionsvaginaMouthPenetrated:
      name: actionsvaginaMouthPenetrated
    actionsvaginaPenisDoubleEntrance:
      name: actionsvaginaPenisDoubleEntrance
    actionsvaginapenisdoublefuck:
      name: actionsvaginapenisdoublefuck
    actionsvaginaPenisDoubleImminent:
      name: actionsvaginaPenisDoubleImminent
    actionsvaginaPenisDoublePenetrated:
      name: actionsvaginaPenisDoublePenetrated
    actionsvaginaPenisEntrance:
      name: actionsvaginaPenisEntrance
    actionsvaginapenisfucknew:
      name: actionsvaginapenisfucknew
    actionsvaginaPenisImminent:
      name: actionsvaginaPenisImminent
    actionsvaginaPenisPenetrated:
      name: actionsvaginaPenisPenetrated
    actionsvaginatopenisnew:
      name: actionsvaginatopenisnew
    actionsvaginatovaginafucknew:
      name: actionsvaginatovaginafucknew
    actionsvaginatovaginanew:
      name: actionsvaginatovaginanew
    actionsvaginaVagina:
      name: actionsvaginaVagina
    actionsvaginaVaginaEntrance:
      name: actionsvaginaVaginaEntrance
    actionsvaginaVaginaImminent:
      name: actionsvaginaVaginaImminent
    actionsvorentacles:
      name: actionsvorentacles
    actor:
      name: actor
      tags: ["unused"]
    actorAroused:
      name: actorAroused
      tags: ["unused"]
    add_bodywriting:
      name: add_bodywriting
    add_link:
      name: add_link
    add_plot:
      name: add_plot
    addConsumableCosmetics:
      name: addConsumableCosmetics
    addevent:
      name: addevent
    addfemininityfromfactor:
      name: addfemininityfromfactor
      tags: ["unused"]
    addfemininityofclothingarticle:
      name: addfemininityofclothingarticle
      tags: ["unused"]
    addinlineevent:
      container: true
      name: addinlineevent
    addNNPCOutfit:
      name: addNNPCOutfit
    addVaginalWetness:
      name: addVaginalWetness
    adjust_school_traits:
      name: adjust_school_traits
    adultShop-main:
      name: adultShop-main
    adultShopBackgroundEvent:
      name: adultShopBackgroundEvent
    adultShopClear:
      name: adultShopClear
    adultshopclerkevents:
      name: adultshopclerkevents
    adultshopentryevent:
      name: adultshopentryevent
    adultShopEvents:
      name: adultShopEvents
    adultShopPersonEvent:
      name: adultShopPersonEvent
    adultShopWage:
      name: adultShopWage
    advancelesson:
      name: advancelesson
    advancetohour:
      description: |-
        Advances time until the next whole hour

        `<<advancetohour>>`
      parameters:
        - ""
    ahe:
      name: ahe
    aHe:
      name: aHe
    ahis:
      name: ahis
    alarmstate:
      name: alarmstate
    alcohol:
      description: |-
        Adds alcohol to pc's system

        `$drunk` is a measure of how much alcohol is in the pc's system where 0 is none (0-1,000)

        `<<alcohol change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    alex_baby_interactions:
      name: alex_baby_interactions
    alex_cottage_pregnancy_reveal:
      name: alex_cottage_pregnancy_reveal
    alex_pregnancy_comment:
      name: alex_pregnancy_comment
    alexclamp:
      name: alexclamp
    allBottoms:
      description: |-
        Prints worn over and middle bottom clothing names
      tags: ["text"]
    allBottomsUnderwear:
      description: |-
        Prints worn over, middle, and under bottom clothing names
      tags: ["text"]
    allSettings:
      name: allSettings
    AllShop:
      description: |-
        Prints all categories of
      name: AllShop
      tags: ["form"]
    allTops:
      description: |-
        Prints worn over and middle top clothing names
      tags: ["text"]
    allTopsUnderwear:
      description: |-
        Prints worn over, middle, and under top clothing names
      tags: ["unused", "text"]
    allurecaption:
      name: allurecaption
    alongsideButtPlug:
      name: alongsideButtPlug
    ambulance:
      name: ambulance
    ampm:
      description: |-
        Prints hours and minutes as formatted time string

        1. `<<ampm>>`
          - Uses current time as display

        2. `<<ampm hour minute?>>`
        - **hour**: `number` - hour to calculate
        - **minute** _optional_: `number` - minute to calculate
          - Defaults to `0`
      parameters:
        - ""
        - "number |+ number"
      tags: ["text"]
    analdifficulty:
      description: |-
        Prints color-coded adjective of anal action difficulty in current combat
      tags: ["text"]
    analdoublestat:
      name: analdoublestat
    analejacstat:
      name: analejacstat
    analskill:
      name: analskill
    analskilluse:
      name: analskilluse
    analstat:
      name: analstat
    analtext:
      description: |-
        Prints color-coded adjective of active anal skill usage
      tags: ["text"]
    analvirginitywarning:
      description: |-
        Prints `This action will take your anal virginity.` if anal virginity can still be lost

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    andButtPlug:
      name: andButtPlug
    angel:
      description: |-
        Prints `| Angel`
      tags: ["text"]
    angelTransform:
      name: angelTransform
    animalsemenswallowedstat:
      name: animalsemenswallowedstat
    animatemodel:
      description: |-
        Renders, prints, and JS-animates model

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<animatemodel className?>>`
        - **className** _optional_: `string` - class or space-separated classes of canvas element to be inserted when placed in the DOM
      parameters:
        - "|+ text"
      tags: ["dom"]
    anticatcall:
      description: |-
        Prints random response from player putting down a catcall
      tags: ["text"]
    anus_lube_amount:
      description: |-
        Prints the amount of lube around player anus

        Relies on `_anus_lube_amount` being set already

        See `<<anus_lube_text>>`
      tags: ["text", "temp"]
    anus_lube_text:
      description: |-
        Prints qualified description of lube around the anus prior to penetration

        Example:
        ```
        <<anus_lube_text>> the example can be performed without a problem.
        ```
      tags: ["text"]
    anusactionDifficulty:
      name: anusactionDifficulty
    anusactionDifficultyTentacle:
      name: anusactionDifficultyTentacle
    anusActionInit:
      name: anusActionInit
    anusActionInitStruggle:
      name: anusActionInitStruggle
    anusActionInitTentacle:
      name: anusActionInitTentacle
    anusActions:
      name: anusActions
    anusActionsTentacle:
      name: anusActionsTentacle
    anusraped:
      name: anusraped
    anxious_guard:
      name: anxious_guard
    apologyWraith:
      name: apologyWraith
    applyFeatsBoost:
      name: applyFeatsBoost
    applyLube:
      name: applyLube
    arcade_npc_bet:
      name: arcade_npc_bet
    arcade_player_bet:
      name: arcade_player_bet
    arcade_player_lost:
      name: arcade_player_lost
    arcade_player_win:
      name: arcade_player_win
    arcadeEndLink:
      name: arcadeEndLink
    arm_unbind:
      name: arm_unbind
    arousal:
      description: |-
        Adds arousal to pc with appropriate modifiers

        `$arousal` is pc's arousal state where 0 is not-aroused (0-10,000)

        `source` is messy, overdefined, and underused. Consider refactoring

        `<<arousal change source?>>`
        - **change**: `number` - +/- change to apply
        - **source** _optional_: `string` - source of the stimulus
          - `"masturbation"` | `"mouth"` | `"oral"` | `"lips"` | `"masturbationMouth"` | `"masturbationOral"` | `"breast"` | `"breasts"` | `"chest"` | `"nipple"` | `"nipples"` | `"masturbationBreasts"` | `"masturbationNipples"` | `"bottom"` | `"anus"` | `"anal"` | `"ass"` | `"butt"` | `"masturbationAnal"` | `"masturbationAss"` | `"genital"` | `"genitals"` | `"penis"` | `"penile"` | `"pussy"` | `"vaginal"` | `"vagina"` | `"masturbationGenital"` | `"masturbationPenis"` | `"masturbationVagina"` | `"maso"` | `"time"`
      parameters:
        - 'number |+ "masturbation"|"mouth"|"oral"|"lips"|"masturbationMouth"|"masturbationOral"|"breast"|"breasts"|"chest"|"nipple"|"nipples"|"masturbationBreasts"|"masturbationNipples"|"bottom"|"anus"|"anal"|"ass"|"butt"|"masturbationAnal"|"masturbationAss"|"genital"|"genitals"|"penis"|"penile"|"pussy"|"vaginal"|"vagina"|"masturbationGenital"|"masturbationPenis"|"masturbationVagina"|"maso"|"time"'
    arousalcaption:
      name: arousalcaption
    arousalclamp:
      name: arousalclamp
    arousalError:
      description: |-
        Stores a up to 50 arousal errors

        `$arousalError` is an array of arousal errors

        Eligible for deprecation

        `<<arousalError firstArg secondArg>>`
        - **firstArg**: `any` - something to store
        - **secondArg**: `any` - something else to store
      tags: ["unused"]
    askrough:
      name: askrough
    assignmenttip:
      name: assignmenttip
    asylumassessment:
      name: asylumassessment
    asylumeffects:
      name: asylumeffects
    asylumend:
      name: asylumend
    asylumescape:
      name: asylumescape
    asylumevents:
      name: asylumevents
    asylumoptions:
      name: asylumoptions
    asylumpunish:
      name: asylumpunish
      tags: ["unused"]
    asylumpunish2:
      name: asylumpunish2
    asylumstats:
      name: asylumstats
    asylumstatus:
      description: |-
        Adds status to asylum in regards to pc

        `$asylumstatus` is status of pc in the asylum where 0 is not liked (0-100)

        `<<suspicion change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    asylumtreatments:
      name: asylumtreatments
    athletics:
      name: athletics
    athleticsdifficulty:
      name: athleticsdifficulty
    attach_leash:
      description: |-
        Attaches leash to pc's collar

        Can be used to gain infinite collars and keepCursed isn't universal. Consider refactoring

        `<<attach_leash pcCanRemove? noRebuy?>>`
        - **keepCursed** _optional_: `bool` - collar will not be cursed unless original collar was already (truthy)
          - Defaults to `false`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool |+ bool"
      tags: ["refactor"]
    attackstat:
      name: attackstat
    attitudes:
      name: attitudes
    attitudesControlCheck:
      name: attitudesControlCheck
    audience:
      name: audience
    audiencecamera:
      name: audiencecamera
    audiencecameraswarm:
      name: audiencecameraswarm
    audiencespeech:
      name: audiencespeech
    autoTakePillCheck:
      name: autoTakePillCheck
    averyscore:
      name: averyscore
    awareness:
      description: |-
        Adds awareness to pc's state, with appropriate modifiers

        `$awareness` is measure of pc's knowledge of lewdity where negative is innocent and 0 is unaware (-200-1,000)

        `<<awareness change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    awarenessup:
      name: awarenessup
    babyIs:
      description: |-
        Prints `<<pregnancyBabyText>>` with the corresponding conjugation of `be`.

        `<<babyIs babySource?>>`
        - **babySource** _optional_: `string` - source where baby text is pulled from
          - `"pc"`: Take description from pc's current pregnancy
          - %namedNPCDesc%: Take description from named npc's current pregnancy
          - Defaults to `pc`
      parameters:
        - '|+ %namedNPC% |+ "pc"'
      tags: ["text"]
    babyRent:
      name: babyRent
    babyRentDisplay:
      name: babyRentDisplay
    babyType:
      name: babyType
      tags: ["unused"]
    backComp:
      name: backComp
    balloonRobinAngryHelp:
      name: balloonRobinAngryHelp
      tags: ["text"]
    balloonRobinAngryPurchase:
      name: balloonRobinAngryPurchase
      tags: ["text"]
    balloonRobinGrateful:
      name: balloonRobinGrateful
      tags: ["text"]
    balloonRobinHelped:
      name: balloonRobinHelped
      tags: ["text"]
    balloonRobinSabotaged:
      name: balloonRobinSabotaged
    balloonRobinTalk:
      name: balloonRobinTalk
      tags: ["text"]
    ballsize:
      description: |-
        Prints random adjective describing pc's `$ballssize`
    barb:
      name: barb
    barbeventend:
      name: barbeventend
    barbexposed:
      name: barbexposed
      tags: ["unused"]
    barbquick:
      name: barbquick
    barn_img:
      description: |-
        Displays combat img of player inside barn, including a haybale prop and optionally a milk pump.
      tags: ["text"]
    baseClothingImg:
      name: baseClothingImg
    baseClothingStrings:
      name: baseClothingStrings
    basegloryholespeech:
      name: basegloryholespeech
    basespeech:
      name: basespeech
    bastard:
      description: |-
        Prints `bastard` or `whore` depending on pc's appearance
      tags: ["text"]
    bathroomLink:
      name: bathroomLink
    beach_cave_caught:
      name: beach_cave_caught
    beach_cave_end:
      name: beach_cave_end
    beach_cave_init:
      name: beach_cave_init
    beach_cave_pursuit:
      name: beach_cave_pursuit
    beachday1:
      name: beachday1
    beachday2:
      name: beachday2
    beachday3:
      name: beachday3
    beachday4:
      name: beachday4
    beachday5:
      name: beachday5
    beachday6:
      name: beachday6
    beachex1:
      name: beachex1
    beachex2:
      name: beachex2
    beachnight1:
      name: beachnight1
    beachnight2:
      name: beachnight2
    beast:
      name: beast
    beast_claws_text:
      description: |-
        Prints `talons` or type of claws for active NPC's type
      tags: ["unused", "text"]
    beast_growling_text:
      description: |-
        Prints `growling` verbs for active NPC's type
      tags: ["text"]
    beast_growls_text:
      description: |-
        Prints `growls` verbs for active NPC's type
      tags: ["text"]
    beast_jaws_text:
      description: |-
        Prints `beak` or `jaws` for active NPC's type
      tags: ["text"]
    beast_Jaws_text:
      description: |-
        Prints `Beak` or `Jaws` for active NPC's type
      tags: ["text"]
    beast_teeth_text:
      description: |-
        Prints `beak` or `teeth` for active NPC's type
      tags: ["text"]
    beastAttractionSettings:
      name: beastAttractionSettings
    beastattribute:
      name: beastattribute
    beastclothing:
      name: beastclothing
    beastCombatInit:
      name: beastCombatInit
    beastejaculation:
      description: |-
        Performs end of combat ejaculation description for all combat beast NPCs

        All beast NPCs, including named, should go through here to get pre and post ejac descriptions

        `<<beastejaculation ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation to perform
          - `"short"`: Quick ejac that prevents angry post-sex actions
          - `"knot"`: Player is temporarily tied to beast at end of ejac
      parameters:
        - '|+ "short"|"knot"'
      tags: ["text"]
    beastescape:
      name: beastescape
    beastGenders:
      name: beastGenders
    beastimgdoggy:
      name: beastimgdoggy
    beastimggenitals:
      name: beastimggenitals
    beastimggenitalsmissionary:
      name: beastimggenitalsmissionary
    beastimgidle:
      name: beastimgidle
    beastimgmissionary:
      name: beastimgmissionary
    beastlick:
      name: beastlick
    beastMaleChanceSplitControls:
      name: beastMaleChanceSplitControls
    beastNEWinit:
      name: beastNEWinit
    beastNNPCinit:
      name: beastNNPCinit
      tags: ["unused"]
    beastNOGENinit:
      name: beastNOGENinit
    beastPARTNERinit:
      description: |-
       Forces a beast to generate as a partner for another NPC, whether it be a human or beast. Should not be used in combat

        Example:
        `<<beastNEWinit 1 fox>><<beastPARTNERinit 1 fox 0>>`

        `<<beastPARTNERinit npcSlot type partnerSlot>>`
        - **npcSlot**: `number` - slot number of selected npc
        - **type**: `string` - type of partner to generate
        - **partnerSlot**: `number` - slot number for partner npc
    beastSettings:
      name: beastSettings
    beastspeech:
      name: beastspeech
    beastSplitBy:
      name: beastSplitBy
    beastSplitByFull:
      name: beastSplitByFull
    beastsplural:
      description: |-
        Prints plural beast type of provided NPC

        `<<beasttype npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to 0
      parameters:
        - "|+ number"
      tags: ["text"]
    beastTrainGenerate:
      name: beastTrainGenerate
    beasttype:
      description: |-
        Prints beast type of NPC

        `<<beasttype npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to 0
      parameters:
        - "|+ number"
      tags: ["text"]
    beasttypes:
      description: |-
        Prints beast type of first NPC with posssessive apostraphe s
      tags: ["text"]
    beastwound:
      name: beastwound
    beauty:
      description: |-
        Adds beauty to pc's state

        `$beauty` is a measure of pc's base beauty that grows over time from lack of trauma where 0 is none (0-10,000)

        `<<beauty change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    becomePinch:
      description: |-
        Morphs the pc into either Lew or Pinch

        **Should be used after `<<freezePlayerStats>>`**

        `<<becomePinch characterName>>`
        - **characterName**: `string` - name of the character to morph into
          - `"Lew"` | `"Pinch"`
      parameters:
        - '"Lew"|"Pinch"'
    bedclotheson:
      name: bedclotheson
    bellyDescription:
      description: |-
        Prints description of a belly based on its size

        `<<bellyDescription sizeSource forcePregDesc?>>`
        - **sizeSource**: `number|string` - source where size is pulled from
          - `number`: Direct size value
          - `"pc"`: Take size from pc
          - `namedNPC`: Take size from named npc
          - %namedNPCDesc%
        - **forcePregDesc** _optional_: `bool` - use pregnant version of description regardless of pregnancy awareness (truthy)
          - Defaults to `false`
      parameters:
        - '|+ number|"pc"|%namedNPC% |+ bool'
    bestialityTrait:
      description: |-
        Prints `| Tamer` or `| Bitch` depending on pc's `$submissive`
      tags: ["unused", "text"]
    bhe:
      description: |-
        Prints singular pronoun of current beast (he/she/it)

        See `<<bHe>>` for capitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<he>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bhe npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bHe:
      description: |-
        Prints capitalised singular pronoun of current beast (He/She/It)

        See `<<bhe>>` for un-capitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<He_Short>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bHe npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bhers:
      description: |-
        Prints singular possessive pronoun as predicate adjective of current beast (his/hers/its)

        See `<<bhis>>` for general possessive pronoun

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<his>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bhers npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bhes:
      description: |-
        Prints singular pronoun as is/has contraction of current beast (he's/she's/it's)

        See `<<bHes>>` for capitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<Himself>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bHimself npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["unused", "text", "refactor"]
    bHes:
      name: bHes
    bhim:
      description: |-
        Prints singular objective pronoun of current beast (him/her/it)

        See `<<bHim>>` for capitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<him>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bhim npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bHim:
      description: |-
        Prints capitalised singular objective pronoun of current beast (Him/Her/It)

        See `<<bhim>>` for uncapitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<Him>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bHim npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["unused", "text", "refactor"]
    bhimself:
      description: |-
        Prints singular objective pronoun as reflexive form of current beast (Himself/Herself/Itself)

        See `<<bHimself>>` for capitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<himself>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bhimself npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["unused", "text", "refactor"]
    bHimself:
      description: |-
        Prints capitalised singular objective pronoun as reflexive form of current beast (Himself/Herself/Itself)

        See `<<bhimself>>` for uncapitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<Himself>>` (because it doesn't exist) for named npcs.
        Consider refactoring to not personselect but allow named

        `<<bHimself npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["unused", "text", "refactor"]
    bhis:
      description: |-
        Prints singular possessive pronoun of current beast (his/her/its)

        See `<bHis>>` for capitalised prose or `<<bhers>>` for general possessive pronoun as predicate adjective (hers)

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<his>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bhis npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bHis:
      description: |-
        Prints capitalised singular possessive pronoun of current beast (his/hers/its)

        See `<<bhis>>` for uncapitalised prose

        Does not `<<personselect>>` to provided npc, set pronoun, or behave like `<<His>>` for named npcs. Consider refactoring to not personselect but allow named

        `<<bHis npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to output
          - Defaults to `0`
      parameters:
        - "|+ number"
      tags: ["text", "refactor"]
    bhisnext:
      name: bhisnext
    bimboCheck:
      name: bimboCheck
    bimboUpdate:
      name: bimboUpdate
    bind:
      name: bind
    bindings:
      name: bindings
    bindtemp:
      name: bindtemp
    bird_fly_options:
      description: |-
        Prints partial passage regarding player's ability to fly based on their current wings, as well as links for them to prepare for a hunt, learn to fly, or fly to town, the farm, or the base of the tower as relevant
      tags: ["text", "links"]
    bird_greeting:
      description: |-
        Prints daily greeting from the Great Hawk
      tags: ["text"]
    bird_hunt_children_event:
      description: |-
        Events for feeding hawk children
      tags: ["text", "links"]
    bird_hunt_return:
      description: |-
        Gives the player lurkers, trash, valuables, food, rocks, or clothes when the Great Hawk returns from a solo hunt, as assigned by `<<bird_loot_select>>`. Prints links for the player to thank, scold, or do nothing.
      tags: ["text", "links"]
    bird_hunt_start:
      name: bird_hunt_start
    bird_hunt_timer:
      description: |-
        Sets `$bird.timer` to a random appropriate value

        `$bird.timer` is an amount in minutes before GH is allowed to hunt again
    bird_init:
      name: bird_init
    bird_loot:
      name: bird_loot
    bird_loot_random:
      description: |-
        Randomises the options of loot given to the player when the Great Hawk returns from a solo hunt
      tags: ["text", "links"]
    bird_loot_select:
      description: |-
        - Selects what loot to give the player when Great Hawk returns from hunting solo, modified by player responses
        = Defaults to `<<bird_loot_random>>`
    bird_pass:
      description: |-
        Advances time by an amount, used in place of `<<pass>>` while at the Great Hawk's tower. Increases hunger, if the player is not stockholmed, and advances several other timers, including hunts and upgrades.

        `<<bird_pass timeToPass>>`
        - **timeToPass**: `number` - number of units
    bird_perch_options:
      description: |-
        Prints events and links for players on the perch in the Great Hawk's tower
      tags: ["text", "links"]
    bird_schedule:
      description: |-
        - Sets $bird.activity to "sleep", "sing", "bathe", "rest", "brood", "build", "groom", or `$bird.override`  - Checks for and updates daily/weekly flight triggers, as well as the number of eggs present at the tower
    bird_stockholm:
      description: |-
        Increases `$bird.syndrome` by a given amount

        `<<bird_stockholm amountToIncrease>>`
        - **amountToIncrease**: `number` - number of units
    bird_telescope_options:
      name: bird_telescope_options
    birdEggLayEvent:
      name: birdEggLayEvent
    birthChildElement:
      name: birthChildElement
    birthUi:
      name: birthUi
    bishop:
      description: |-
        Prints `bishop` if confessor has had intro, otherwise `<<priest>>`
      tags: ["text"]
    bishop_hands:
      description: |-
        Prints `bishop's hands` or its parts

        `<<bishop_hands length?>>`
        - **length** _optional_: `string` - type of description
          - `"long"`: Individual hands that make up the bishop's hands (currently unused)
      parameters:
        - '|+ "long"'
    bitch:
      description: |-
        Prints `bitch`
      tags: ["text"]
    bitch_pirate:
      description: |-
        Prints `dog` or `bitch` depending on pc's appearance
      tags: ["text"]
    blackjackCalculate:
      name: blackjackCalculate
    blackjackCaughtCheatingSurrender:
      name: blackjackCaughtCheatingSurrender
    blackjackCaughtControls:
      name: blackjackCaughtControls
    blackjackCheatingAlertsFooter:
      name: blackjackCheatingAlertsFooter
    blackjackCheatingCaught:
      name: blackjackCheatingCaught
    blackjackCheatingChoicesGenerate:
      name: blackjackCheatingChoicesGenerate
    blackjackCheatingPeekingChoiceGenerate:
      name: blackjackCheatingPeekingChoiceGenerate
    blackjackControls:
      name: blackjackControls
    blackjackControlsChoices:
      name: blackjackControlsChoices
    blackjackControlsPostGameSuspicion:
      name: blackjackControlsPostGameSuspicion
    blackjackEnd:
      name: blackjackEnd
    blackjackGetCanMarkCount:
      name: blackjackGetCanMarkCount
    blackjackHelp:
      name: blackjackHelp
    blackjackPostGameBettingResult:
      name: blackjackPostGameBettingResult
    blackjackPostGameThrowTips:
      name: blackjackPostGameThrowTips
    blackjackResultText:
      name: blackjackResultText
    blackjackScore:
      name: blackjackScore
    blackjackShowCards:
      name: blackjackShowCards
    blackjackStart:
      name: blackjackStart
    blackjackSuspicion:
      name: blackjackSuspicion
    blackwolfhand:
      name: blackwolfhand
    blackwolfhealth:
      name: blackwolfhealth
    blindfoldintro:
      name: blindfoldintro
    blindfoldremove:
      name: blindfoldremove
    body_size_text:
      description: |-
        Prints random appropriate description of pc's physique
      tags: ["text"]
    body_tip:
      name: body_tip
    bodycommentsetdata:
      name: bodycommentsetdata
    bodyliquid:
      description: |-
        Applies specified liquid(s) to specified bodypart(s)

        [].deleteAt is used incorrectly here and repeated arguments should be the last.
        Consider refactoring to accept array and fixing delete behavior

        `<<bodyliquid bodypart ...liquidTypes amount?>>`
        - **bodypart**: `string` - bodypart(s) to apply liquid to
          - `"all"` | `"clear"`: all bodyparts
          - `"inside"`: inner bodyparts
          - `"outside"`: all bodyparts without inner bodyparts
          - %bodyLiquidPartsDesc%
        - ...**liquidTypes**: `string` - type of liquid(s) to apply
          - %liquidTypesDesc%
        - **amount** _optional_: `number` - amount of liquid to apply to bodypart(s)
          - Defaults to `1`
      parameters:
        - '"all"|"inside"|"outside"|%bodyLiquidParts% &+ ...(%liquidTypes%|number|var|bareword)'
        - '"all"|"inside"|"outside"|%bodyLiquidParts% &+ "all" |+ number|var|bareword'
        - '"clear" &+ ...(%liquidTypes%)'
      tags: ["refactor"]
    bodypart:
      name: bodypart
    bodypart_admire:
      name: bodypart_admire
    bodypart_admire_arrow:
      name: bodypart_admire_arrow
    bodypart_admire_bestiality:
      name: bodypart_admire_bestiality
    bodypart_admire_boyish:
      name: bodypart_admire_boyish
    bodypart_admire_chance:
      name: bodypart_admire_chance
    bodypart_admire_combat:
      name: bodypart_admire_combat
    bodypart_admire_criminal:
      name: bodypart_admire_criminal
    bodypart_admire_cum:
      name: bodypart_admire_cum
    bodypart_admire_cum_convert:
      name: bodypart_admire_cum_convert
    bodypart_admire_cum_heavy:
      name: bodypart_admire_cum_heavy
    bodypart_admire_cum_light:
      name: bodypart_admire_cum_light
    bodypart_admire_exhibitionism:
      name: bodypart_admire_exhibitionism
    bodypart_admire_generic:
      name: bodypart_admire_generic
    bodypart_admire_girly:
      name: bodypart_admire_girly
    bodypart_admire_impreg:
      name: bodypart_admire_impreg
    bodypart_admire_kylar:
      name: bodypart_admire_kylar
    bodypart_admire_lewd:
      name: bodypart_admire_lewd
    bodypart_admire_named:
      name: bodypart_admire_named
    bodypart_admire_parasite:
      name: bodypart_admire_parasite
    bodypart_admire_parasite_comment:
      name: bodypart_admire_parasite_comment
    bodypart_admire_parasite_convert:
      name: bodypart_admire_parasite_convert
    bodypart_admire_plant:
      name: bodypart_admire_plant
    bodypart_admire_pregnancy:
      name: bodypart_admire_pregnancy
    bodypart_admire_promiscuity:
      name: bodypart_admire_promiscuity
    bodypart_admire_prostitution:
      name: bodypart_admire_prostitution
    bodypart_admire_rape:
      name: bodypart_admire_rape
    bodypart_admire_violence:
      name: bodypart_admire_violence
    bodyPregCalc:
      name: bodyPregCalc
      tags: ["unused"]
    bodyremarkcapitalise:
      name: bodyremarkcapitalise
    bodyremarkcomma:
      name: bodyremarkcomma
    bodyremarkstop:
      name: bodyremarkstop
    bodywriting:
      name: bodywriting
    bodywriting_beauty_select:
      name: bodywriting_beauty_select
    bodywriting_bestiality_select:
      name: bodywriting_bestiality_select
    bodywriting_clear:
      name: bodywriting_clear
    bodywriting_clear_all:
      name: bodywriting_clear_all
      tags: ["unused"]
    bodywriting_criminal:
      name: bodywriting_criminal
    bodywriting_criminal_select:
      name: bodywriting_criminal_select
    bodywriting_dungeon_select:
      name: bodywriting_dungeon_select
    bodywriting_exhibitionism_select:
      name: bodywriting_exhibitionism_select
    bodywriting_finalisation:
      name: bodywriting_finalisation
    bodywriting_impreg_select:
      name: bodywriting_impreg_select
    bodywriting_init:
      name: bodywriting_init
    bodywriting_machine:
      name: bodywriting_machine
    bodywriting_normal_select:
      name: bodywriting_normal_select
    bodywriting_npc:
      name: bodywriting_npc
    bodywriting_npc_bodypart:
      name: bodywriting_npc_bodypart
    bodywriting_npc_kylar:
      name: bodywriting_npc_kylar
    bodywriting_npc_normal:
      name: bodywriting_npc_normal
    bodywriting_npc_picture:
      name: bodywriting_npc_picture
    bodywriting_npc_special:
      name: bodywriting_npc_special
    bodywriting_npc_sydney:
      name: bodywriting_npc_sydney
    bodywriting_npc_sydney_book:
      name: bodywriting_npc_sydney_book
    bodywriting_npc_sydney_friendly:
      name: bodywriting_npc_sydney_friendly
    bodywriting_npc_sydney_science:
      name: bodywriting_npc_sydney_science
    bodywriting_npc_whitney:
      name: bodywriting_npc_whitney
    bodywriting_pregnancy_select:
      name: bodywriting_pregnancy_select
    bodywriting_prostitution_check:
      name: bodywriting_prostitution_check
      tags: ["unused"]
    bodywriting_prostitution_select:
      name: bodywriting_prostitution_select
    bodywriting_rape_select:
      name: bodywriting_rape_select
    bodywriting_scrap_select:
      name: bodywriting_scrap_select
    bodywriting_sex_select:
      name: bodywriting_sex_select
    bodywritingExposureCheck:
      name: bodywritingExposureCheck
    bodywritingMenu:
      name: bodywritingMenu
    bodywritingMenuLinks:
      name: bodywritingMenuLinks
    bodywritingOptions:
      name: bodywritingOptions
    bookCriminal:
      name: bookCriminal
    bookRentalOptions:
      name: bookRentalOptions
    bottom:
      name: bottom
    bottom_sensitivity:
      description: |-
        Changes sensitivity of bottom by provided amount

        `<<bottom_sensitivity amount>>`
        - **amount**: `number` - change to sensitivity
      parameters:
        - "number"
    bottom_wiggle:
      name: bottom_wiggle
    bottomaside:
      description: |-
        Prints name of innermost bottom clothing layer that can be seen or `bottom` if everything is exposed

        Does not take into account over_bottom. Consider refactoring
      tags: ["refactor", "text"]
    bottomdifficulty:
      description: |-
        Prints color-coded adjective of bottom action difficulty in current combat
      tags: ["text"]
    bottomejacstat:
      name: bottomejacstat
    bottoms:
      description: |-
        Prints lower clothing layer, taking into account if it is part of an outfit
      tags: ["text"]
    bottomsensitivity:
      name: bottomsensitivity
    BottomShop:
      name: BottomShop
    bottomskill:
      description: |-
        Adds bottom skill to pc's state

        `$bottomskill` is a measure of pc's proficiency using their buttocks where 0 is awkward (0-1,000)

        `<<bottomskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    bottomskilluse:
      name: bottomskilluse
    bottomstat:
      name: bottomstat
    bottomtext:
      description: |-
        Prints color-coded adjective of active bottom skill usage
      tags: ["text"]
    boughtOnce:
      name: boughtOnce
    bound2init:
      name: bound2init
      tags: ["unused"]
    boundBodyParts:
      description: |-
        Prints description of bound body parts if there are any

        Output is also stored in `_boundparts` for convenience
      tags: ["text", "temp"]
    bra:
      description: |-
        Prints descriptor of active NPC's inner_upper clothing

        See `<<panties>> for inner_lower clothing or `<<dress>>` for upper clothing

        See `<<npcClothesText>>` for full name of clothes
      tags: ["text"]
    brat:
      name: brat
    breast_sensitivity:
      description: |-
        Changes sensitivity of breasts by provided amount

        `<<breast_sensitivity amount>>`
        - **amount**: `number` - change to sensitivity
      parameters:
        - "number"
    breastarousal:
      deprecatedSuggestions:
        - <<arousal X "breasts">>
      description: |-
        Adds breast-focused arousal to pc with appropriate modifiers

        `<<breastsarousal change source>>`
        - **change**: `number` - +/- change to apply
      tags: ["unused"]
    breastfed:
      name: breastfed
    breastfeed:
      description: |-
        Milks the pc and applies effects of being milked

        Amount extracted is between 1x-5x amount with possible additional 2x multiplier for cow transform

        `<<breastfeed amount? storage?>>`
        - **amount** _optional_: `number` - multiplier to random amount of milk extracted
          - Defaults to `1`
        - **storage** _optional_: `string` - method used to gather milk
          - `"pump"`: a breastpump is being used
          - Defaults to not storing
      parameters:
        - '|+ number |+ "pump"'
    breastFlavorText:
      name: breastFlavorText
    breasts:
      name: breasts
    breastsactive:
      name: breastsactive
    breastsactivemissionary:
      name: breastsactivemissionary
    breastsaside:
      description: |-
        Prints name of innermost top clothing layer that can be seen or `<<breasts>>` if everything is exposed

        See `<<topaside>>`
      tags: ["text"]
    breastsensitivity:
      name: breastsensitivity
    breastsidle:
      name: breastsidle
    breastsidlemissionary:
      name: breastsidlemissionary
    breastsizedesc:
      name: breastsizedesc
    breastssimple:
      name: breastssimple
    bred:
      description: |-
        Prints `bred` or `fucked` depending on pc's pregnancy speech settings

        Bug reports of it sometimes showing up as `bread` are just rumours
      tags: ["text"]
    brothel_bukkake:
      name: brothel_bukkake
    brothel_bukkake_end:
      name: brothel_bukkake_end
    brothel_bukkake_init:
      name: brothel_bukkake_init
    brothel_bukkake_links:
      name: brothel_bukkake_links
    brothel_show_security:
      name: brothel_show_security
    brothelshowintro:
      name: brothelshowintro
    brothelshowoptions:
      name: brothelshowoptions
    brothers_and_sisters:
      description: |-
        Prints `brothers and sisters` unless player has mono-gendered the world

        See `<<monks_and_nuns>>`
      tags: ["text"]
    browsColourPreview:
      name: browsColourPreview
    browsDyeReset:
      name: browsDyeReset
    bruise:
      name: bruise
    busmoveinit:
      name: busmoveinit
      tags: ["unused"]
    busstationex1:
      name: busstationex1
    buswait:
      name: buswait
    buttplugon:
      name: buttplugon
    buyToy:
      name: buyToy
    buyTryOnClothes:
      name: buyTryOnClothes
    bwpcinteraction:
      name: bwpcinteraction
    cabinothers:
      name: cabinothers
    cabintime:
      name: cabintime
    cafecoffeeflasharousal:
      name: cafecoffeeflasharousal
    cafecoffeesip:
      name: cafecoffeesip
    CafeExhibitionismLegsPartEnd:
      name: CafeExhibitionismLegsPartEnd
    CafeExhibitionismLegsPartNormalTerminate:
      description: |-
        End Cafe Exhibitionism event and link to Cliff Street

        ```dart
        // :: Cafe Exhibitionism Legs Part
        //   <<CafeExhibitionismLegsPartSuccessS1>>
        //   <<CafeExhibitionismLegsPartPhotoDecision>>
        //   <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
           <<CafeExhibitionismLegsPartNormalTerminate>>
        // :: Cafe Exhibitionism Legs Part Pantiless
        //   <<CafeExhibitionismLegsPartPantilessPhotoDecision>>
           <<CafeExhibitionismLegsPartNormalTerminate>>
        ```
      tags: ["links"]
    CafeExhibitionismLegsPartPantilessPhotoDecision:
      description: |-
        Link to Cafe Exhibitionism Legs Part Pantiless Photo/No Photo Passages
        ```dart
        // :: Cafe Exhibitionism Legs Part Pantiless
           <<CafeExhibitionismLegsPartPantilessPhotoDecision>>
        //   <<CafeExhibitionismLegsPartNormalTerminate>>
        ```
      tags: ["links"]
    CafeExhibitionismLegsPartPantyTakeoffDecision:
      description: |-
        ```dart
        // :: Cafe Exhibitionism Legs Part
        //   <<CafeExhibitionismLegsPartSuccessS1>>
           <<CafeExhibitionismLegsPartPhotoDecision>>
        //   <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
        //   <<CafeExhibitionismLegsPartNormalTerminate>>
        // :: Cafe Exhibitionism Legs Part Photo
        //   <<CafeExhibitionismLegsPartSuccessS2>>
           <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
        //   <<CafeExhibitionismLegsPartEnd>>
        ```
      tags: ["links"]
    CafeExhibitionismLegsPartPhotoDecision:
      description: |-
        ```dart
        // :: Cafe Exhibitionism Legs Part
        //   <<CafeExhibitionismLegsPartSuccessS1>>
           <<CafeExhibitionismLegsPartPhotoDecision>>
        //   <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
        //   <<CafeExhibitionismLegsPartNormalTerminate>>
        ```
      tags: ["links"]
    CafeExhibitionismLegsPartSuccessS1:
      description: |-
        ```dart
        // :: Cafe Exhibitionism Legs Part
           <<CafeExhibitionismLegsPartSuccessS1>>
        //   <<CafeExhibitionismLegsPartPhotoDecision>>
        //   <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
        //   <<CafeExhibitionismLegsPartNormalTerminate>>
        ```
      tags: ["links"]
    CafeExhibitionismLegsPartSuccessS2:
      description: |-
        ```dart
        // :: Cafe Exhibitionism Legs Part Photo
           <<CafeExhibitionismLegsPartSuccessS2>>
        //   <<CafeExhibitionismLegsPartPantyTakeoffDecision>>
        //   <<CafeExhibitionismLegsPartEnd>>
        ```
      tags: ["links"]
    calchairlengthstage:
      name: calchairlengthstage
    calculateallure:
      name: calculateallure
    calculateBlackjackLuckStats:
      name: calculateBlackjackLuckStats
    callJanet:
      description: |-
        Freezes the story variables, then morphs the pc into Janet, also altering the location and time
    campFurnitureMessage:
      name: campFurnitureMessage
    canvas-model-override:
      name: canvas-model-override
    canvas-player-base-body:
      name: canvas-player-base-body
    canvasanimate:
      description: |-
        Insert HTML <canvas> element right here

        Renders, prints, and animates previously prepared images into it

        [Low-Level Canvas API Overview](%workspaceDir%/game/base-clothing/canvas.twee#L2)

        `<<canvasanimate className>>`
        - **className**: `string` - class or space-separated classes of canvas element to be inserted when placed in the DOM
      parameters:
        - "|+ text"
      tags: ["dom", "unused"]
    canvasColoursEditor:
      name: canvasColoursEditor
    canvasdraw:
      description: |-
        Insert HTML <canvas> element right here

        Renders, prints, and animates previously prepared images into it

        [Low-Level Canvas API Overview](%workspaceDir%/game/base-clothing/canvas.twee#L2)

        `<<canvasdraw frameCount className>>`
        - **frameCount**: `number` - frame count to use for splitting canvas
          - Defaults to 1
        - **className**: `string` - class or space-separated classes of canvas element to be inserted when placed in the DOM
      parameters:
        - "|+ number |+ text"
      tags: ["dom", "unused"]
    canvasimg:
      name: canvasimg
    canvaslayer:
      description: |-
        Prepares a layer to be rendered

        [Low-Level Canvas API Overview](%workspaceDir%/game/base-clothing/canvas.twee#L2)

        `<<canvaslayer zIndex sourceUrl ...options>>`
        - **zIndex**: `number` - z-index of the layer (bigger above lower)
        - **sourceUrl**: `string` - path to image
        - ...**options**: extra CompositeLayerSpec option objects
          - Are merged, last has most priority
      parameters:
        - number &+ text &+ ...(bareword|var)
      tags: ["unused"]
    canvasLayersEditor:
      name: canvasLayersEditor
    canvasModelEditor:
      name: canvasModelEditor
    canvasstart:
      description: |-
        Creates an off-screen <canvas> element

        [Low-Level Canvas API Overview](%workspaceDir%/game/base-clothing/canvas.twee#L2)

        `<<canvasstart width height frames>>`
        - **width**: `number` - positive integer corresponding to HTMLCanvasElement.width
        - **height**: `number` - positive integer corresponding to HTMLCanvasElement.height
        - **frames**: `number` - positive integer multiplied to width for creating horizontal spritesheet
      parameters:
        - number &+ number &+ number
      tags: ["unused"]
    capitalise:
      description: |-
        Capitalises the first letter of `_text_output`

        Example:
        ```
        <<widget "The">><<silently>>
          <<set _text_output to "the">>
          <<capitalise>>
        <</silently>>_text_output<</widget>>
        ```
    capitalise2:
      container: true
      description: |-
        Capitalises the inner contents of this widget

        Example:
        ```
        <<capitalise2>>
          the
        <</captialise2>>
        ```
      tags: ["unused"]
    caption_clamp:
      name: caption_clamp
    card_clothes_lost:
      name: card_clothes_lost
    card_clothes_rebuy_calculate:
      name: card_clothes_rebuy_calculate
    card_pot_collected:
      name: card_pot_collected
    card_pot_confiscated:
      name: card_pot_confiscated
    cardImage:
      name: cardImage
    cards_arousal_check:
      name: cards_arousal_check
    cards_bottom_cover:
      name: cards_bottom_cover
    cards_bra_cover:
      name: cards_bra_cover
    cards_cheating_virginity_warning:
      name: cards_cheating_virginity_warning
    cards_exposure_text:
      name: cards_exposure_text
    cards_lap_clothes:
      name: cards_lap_clothes
    cards_lap_clothes_intro:
      name: cards_lap_clothes_intro
    cards_lap_return:
      name: cards_lap_return
    cards_naked_cover:
      name: cards_naked_cover
    cards_naked_end:
      name: cards_naked_end
    cards_oral_options:
      name: cards_oral_options
    cards_panties_cover:
      name: cards_panties_cover
      tags: ["unused"]
    cards_play_options:
      name: cards_play_options
    cards_start_play_options:
      name: cards_start_play_options
    cards_strip_text:
      name: cards_strip_text
    cards_top_cover:
      name: cards_top_cover
    cards_underwear_cover:
      name: cards_underwear_cover
    cards_virginity_all_warnings:
      name: cards_virginity_all_warnings
    cards_virginity_warning:
      name: cards_virginity_warning
    cardText:
      name: cardText
      tags: ["unused"]
    carriedClear:
      description: |-
        Sets provided clothing slot to naked
        
        `<<carriedClear slot>>`
        - **slot**: `string` - carried clothing slot to erase
          - %clothesTypesDesc%
      parameters:
        - '%clothesTypes%'
    carriedSend:
      name: carriedSend
    carryblock:
      name: carryblock
    cassBoy:
      name: cassBoy
    cast_aside_clothes:
      description: |-
        Prints sentence describing what an npc does with forcibly stripped clothing

        Out of date and underutilised. Consider refactoring
      tags: ["text", "refactor"]
    cat:
      description: |-
        Prints `| Cat`
      tags: ["text"]
    catacombs_end:
      name: catacombs_end
    catacombs_exit_indicator:
      name: catacombs_exit_indicator
    catacombs_init:
      name: catacombs_init
    catacombs_skip:
      name: catacombs_skip
    catacombs_torch:
      name: catacombs_torch
    catacombs_torch_text:
      name: catacombs_torch_text
    catcall:
      description: |-
        Prints random catcall
      tags: ["text"]
    catHeterochromiaTF:
      name: catHeterochromiaTF
    catTransform:
      name: catTransform
    cell_trouble:
      name: cell_trouble
    chalets_bags:
      name: chalets_bags
    chalets_end:
      name: chalets_end
    chalets_end_link:
      name: chalets_end_link
    chalets_fall_events:
      name: chalets_fall_events
    chalets_links:
      name: chalets_links
    chalets_start:
      name: chalets_start
    changeCChildbirthDate:
      name: changeCChildbirthDate
      tags: ["unused"]
    changeCChildConceptionDate:
      name: changeCChildConceptionDate
      tags: ["unused"]
    changeCChildId:
      name: changeCChildId
      tags: ["unused"]
    changeCNPCEventTimer:
      name: changeCNPCEventTimer
      tags: ["unused"]
    changeCNPCPregnancyAvoidance:
      name: changeCNPCPregnancyAvoidance
      tags: ["unused"]
    changeCNPCPregnancyTimer:
      name: changeCNPCPregnancyTimer
      tags: ["unused"]
    changingRoom:
      name: changingRoom
    changingRoomFeelings:
      name: changingRoomFeelings
    changingrooms:
      name: changingrooms
      tags: ["unused"]
    characteristic-box:
      name: characteristic-box
    characteristic-box-modifier:
      name: characteristic-box-modifier
    characteristic-text:
      name: characteristic-text
    characteristics:
      name: characteristics
    characterSettings:
      name: characterSettings
    charles:
      description: |-
        Prints the name Morgan gives the player based on appearance
      tags: ["text"]
    charLight:
      description: |-
        Render and print light behind character model

        `<<charLight xOffset yOffset className?>>`
        - **xOffset**: `number` - CSS x offset
          - Assumes px
        - **yOffset**: `number` - CSS y offset
          - Assumes px
        - **className** _optional_: `string` - class or space-separated classes of div element to be inserted when placed in the DOM
      parameters:
        - number|text &+ number|text |+ text
      tags: ["dom"]
    charLightCombat:
      description: |-
        Render and print light behind character model

        `<<charLight position? prop?>>`
        - **position** _optional_: `string` - combat position
          - %combatPositionsDesc%
        - **prop** _optional_: `string` - prop being rendered in combat
          - %combatPropsDesc%
        - **className** _optional_: `string` - class or space-separated classes of div element to be inserted when placed in the DOM
      parameters:
        - "|+ %combatPositions% |+ %combatProps% |+ text"
      tags: ["dom"]
    chastityBreakWraith:
      name: chastityBreakWraith
    cheatBodyliquidOnPart:
      name: cheatBodyliquidOnPart
    cheatMenuEyesSelected:
      name: cheatMenuEyesSelected
    cheatParasiteToggle:
      name: cheatParasiteToggle
    cheatPregnancyNPC:
      name: cheatPregnancyNPC
    cheatPregnancyNPCReset:
      name: cheatPregnancyNPCReset
    cheats:
      name: cheats
    cheats-characterStats:
      name: cheats-characterStats
    cheats-characterVisual:
      name: cheats-characterVisual
    cheats-npcs:
      name: cheats-npcs
    cheats-other:
      name: cheats-other
    cheats-teleport:
      name: cheats-teleport
    cheatsImpreg:
      name: cheatsImpreg
    cheatsImpregOptions:
      name: cheatsImpregOptions
    cheatsPregnancyOptions:
      name: cheatsPregnancyOptions
    cheatStart:
      name: cheatStart
    cheatVirginityToggle:
      name: cheatVirginityToggle
    checkdroptowel:
      name: checkdroptowel
    checkfloor:
      name: checkfloor
    checkforloveinterests:
      name: checkforloveinterests
    checkWraith:
      name: checkWraith
    cheeklick:
      description: |-
        Prints some facial reaction by NPC to pc's mouth usage

        `<<ejaculation-eden npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to 0
      parameters:
        - "|+ number"
      tags: ["text"]
    chefspeechoptions:
      name: chefspeechoptions
    chefwork:
      name: chefwork
    chest:
      name: chest
    chest_section:
      name: chest_section
    chestactionDifficulty:
      name: chestactionDifficulty
    chestactionDifficultyTentacle:
      name: chestactionDifficultyTentacle
    chestActionInit:
      name: chestActionInit
    chestActionInitStruggle:
      name: chestActionInitStruggle
    chestActionInitTentacle:
      name: chestActionInitTentacle
    chestActions:
      name: chestActions
    chestActionsTentacle:
      name: chestActionsTentacle
    chestdifficulty:
      description: |-
        Prints color-coded adjective of chest action difficulty in current combat
      tags: ["text"]
    chestejacstat:
      name: chestejacstat
    chestsimple:
      name: chestsimple
    chestskill:
      description: |-
        Adds chest skill to pc's state

        `$chestskill` is a measure of pc's proficiency using their chest where 0 is awkward (0-1,000)

        `<<chestskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    chestskilluse:
      name: chestskilluse
    cheststat:
      name: cheststat
    chesttext:
      description: |-
        Prints color-coded adjective of active chest skill usage
      tags: ["text"]
    chikanattention:
      name: chikanattention
    chikanmolestactions:
      name: chikanmolestactions
    childActivity:
      name: childActivity
    childAge:
      name: childAge
    childChangeClothes:
      name: childChangeClothes
      tags: ["unused"]
    childcry:
      name: childcry
    childCry:
      name: childCry
      tags: ["unused"]
    childfeet:
      description: |-
        Prints feet appropriate to type of selected child
        
        `<<childfeet childId?>>`
        - **childId** _optional_: `string` - childId to use in place of currently selected child
          - Defaults to currently selected
      parameters:
        - '|+ string'
      tags: ["text"]
    childfinger:
      description: |-
        Prints fingers appropriate to type of selected child
        
        `<<childfinger childId?>>`
        - **childId** _optional_: `string` - childId to use in place of currently selected child
          - Defaults to currently selected
      parameters:
        - '|+ string'
      tags: ["text"]
    childFirstWord:
      name: childFirstWord
      tags: ["unused"]
    childgiggles:
      name: childgiggles
    childhair:
      name: childhair
      tags: ["unused"]
    childhand:
      name: childhand
    childhands:
      name: childhands
    childhe:
      name: childhe
    childHe:
      name: childHe
    childhers:
      name: childhers
      tags: ["unused"]
    childHers:
      name: childHers
      tags: ["unused"]
    childherself:
      name: childherself
    childhim:
      name: childhim
    childHim:
      name: childHim
    childhimself:
      name: childhimself
    childhis:
      name: childhis
    childHis:
      name: childHis
    childInteratedWith:
      name: childInteratedWith
    childname:
      name: childname
    childRename:
      name: childRename
      tags: ["unused"]
    childrenEvents:
      name: childrenEvents
    childrenNames:
      name: childrenNames
    childrenSetup:
      name: childrenSetup
    childrenToysUI:
      name: childrenToysUI
    childrenToysUIReplace:
      name: childrenToysUIReplace
    childSelect:
      name: childSelect
    childSelectRandom:
      description: |-
        Sets `$childSelected` to a random child

        `$childSelected` is a `{Child}` object from `$children`.
        It being synced with the original cannot be guaranteed between passages

        `<<childSelectRandom location>>`
        - **location** _optional_: `string` - location string to select from randomly
          - Defaults to all if no location is provided
      parameters:
        - string
    childsibling:
      name: childsibling
    childsiblings:
      name: childsiblings
    childson:
      description: |-
        Prints singular noun of provided or selected child

        See `<childsons>` for plural
        
        `<<childson childId?>>`
        - **childId** _optional_: `string` - childId to use in place of currently selected child
      parameters:
        - '|+ string'
      tags: ["text"]
    childsons:
      description: |-
        Prints plural noun of provided or selected child

        See `<childson>` for singular
        
        `<<childsons childId?>>`
        - ...**childId** _optional_: `string|Array` - childId as separate params or array of ids
      parameters:
        - '...(string|var|bareword)'
      tags: ["text", "unused"]
    childtoes:
      description: |-
        Prints toes appropriate to type of selected child
        
        `<<childtoes childId?>>`
        - **childId** _optional_: `string` - childId to use in place of currently selected child
          - Defaults to currently selected
      parameters:
        - '|+ string'
      tags: ["text"]
    childtoy:
      name: childtoy
    childTransform:
      name: childTransform
    childtype:
      name: childtype
    childTypeDisplay:
      description: |-
        Prints the type of a selected child, for use within `<<childViewerElement>>` and `<<birthChildElement>>`

        `<<childTypeDisplay childObject>>`
        - **childObject**: `object` - selected child
      parameters:
        - string
    childViewerDisplay:
      name: childViewerDisplay
    childViewerDisplayElements:
      name: childViewerDisplayElements
    childViewerElement:
      name: childViewerElement
    childViewerHiddenElements:
      name: childViewerHiddenElements
    childViewerHiddenElementsUnhide:
      name: childViewerHiddenElementsUnhide
    childViewerPageUpdate:
      name: childViewerPageUpdate
    chokeTrait:
      description: |-
        Prints `| Asphyxiophilia`
      tags: ["text"]
    christmas_options:
      name: christmas_options
    christmas_robin:
      name: christmas_robin
    christmas_robin_visit:
      name: christmas_robin_visit
    clamp:
      name: clamp
    clampgoo:
      name: clampgoo
    classgrades:
      name: classgrades
    classRoomEarSlime:
      description: |-
        Checks if ear slime wants the player to skip specified class and interrupt passage

        Sets `_earSlimeClassRoomBlock` to true if slime outputs enough text to warrant a passage block

        `<<classRoomEarSlime class>>`
        - **class**: `string` - name of class to check
          - `"english"` | `"history"` | `"maths"` | `"science"` | `"swimming"`
      parameters:
        - '"english"|"history"|"maths"|"science"|"swimming"'
      tags: ["links", "text", "temp"]
    cleanupOnWardrobeExit:
      name: cleanupOnWardrobeExit
    clear_pillory:
      name: clear_pillory
    clear_plot:
      name: clear_plot
    clearAllWarning:
      name: clearAllWarning
    clearAnimalTransformations:
      name: clearAnimalTransformations
    clearDivineTransformations:
      name: clearDivineTransformations
    cleareventpool:
      name: cleareventpool
    clearingactions:
      name: clearingactions
    clearingedenactions:
      name: clearingedenactions
    clearnpc:
      description: |-
        Clears active npcs, saving persistent npcs if present

        See `<<clearsinglenpc>>` to clear just a single active npc
    clearNPC:
      description: |-
        Fully clears data about a specific persistent npc

        Not to be confused with `<<clearnpc>>`. Consider refactoring

        `<<clearNPC name>>`
        - **name**: `string` - npc key to clear data from
          - spaces should be avoided if possible
      parameters:
        - "text"
      tags: ["refactor"]
    clearPronouns:
      description: |-
        Resets NPC object's `pronouns` property back to empty

        `<<clearPronouns npcObject>>`
        - **npcObject**: `object` - NPC to unfill
      parameters:
        - "var"
      tags: ["unused"]
    clearSaveMenu:
      name: clearSaveMenu
    clearsinglenpc:
      description: |-
        Clears single active npc

        Does not save persistent npcs when cleared

        `<<clearsinglenpc slot>>`
        - **slot**: `number` - slot number to clear (zero-based)
      parameters:
        - "number"
    clearToDeleteParasiteFetus:
      name: clearToDeleteParasiteFetus
    clearWraith:
      name: clearWraith
    cliff:
      name: cliff
    cliff_top_desc:
      name: cliff_top_desc
    cliffeventend:
      name: cliffeventend
    cliffexposed:
      name: cliffexposed
      tags: ["unused"]
    cliffquick:
      name: cliffquick
    clit:
      name: clit
    clock:
      description: |-
        Prints an analogue clock set to current time
      tags: ["dom"]
    closeButton:
      name: closeButton
    closeButtonMobile:
      name: closeButtonMobile
    closeimg:
      name: closeimg
    clothesactive:
      name: clothesactive
    clothesactivemissionary:
      name: clothesactivemissionary
    clothescolour:
      name: clothescolour
      tags: ["unused"]
    clothesidle:
      name: clothesidle
    clothesidlemissionary:
      name: clothesidlemissionary
    clotheson:
      name: clotheson
    clothesonplant:
      name: clothesonplant
    clothesontowel:
      name: clothesontowel
    clothesruined:
      description: |-
        Destroys pc's main body clothing slots, whether worn or carried

        This includes over_upper, upper, under_upper, over_lower, lower, and under_lower slot clothing
    clothesruinstat:
      name: clothesruinstat
    clothesspeech:
      name: clothesspeech
    clothesstrip:
      name: clothesstrip
    clothesstripstat:
      name: clothesstripstat
    clothing_arrays:
      name: clothing_arrays
    clothing_data:
      name: clothing_data
    clothingCaptionChastityEffect:
      name: clothingCaptionChastityEffect
      tags: ["unused"]
    clothingCaptionExposed:
      name: clothingCaptionExposed
    clothingCaptionText:
      name: clothingCaptionText
    clothingCaptionTextGender:
      name: clothingCaptionTextGender
    clothingCaptionTextGenitals:
      name: clothingCaptionTextGenitals
    clothingCaptionTextHandheld:
      name: clothingCaptionTextHandheld
    clothingCaptionTextMask:
      name: clothingCaptionTextMask
    clothingCaptionTextMiddle:
      name: clothingCaptionTextMiddle
    clothingCaptionTextNothing:
      name: clothingCaptionTextNothing
    clothingCaptionTextOver:
      name: clothingCaptionTextOver
    clothingCaptionTextPreggy:
      name: clothingCaptionTextPreggy
    clothingCaptionTextStrip:
      name: clothingCaptionTextStrip
    clothingCaptionTextUnder:
      name: clothingCaptionTextUnder
    clothinginit:
      name: clothinginit
    clothingReset:
      name: clothingReset
    clothingResetOwnedReset:
      name: clothingResetOwnedReset
    clothingShop-main:
      name: clothingShop-main
    clothingshopChangePage:
      name: clothingshopChangePage
    clothingShopLegend:
      name: clothingShopLegend
    clothingShopv2:
      description: |-
        1. `<<clothingShopv2 shopName slot>>`

        2. `<<clothingShopv2 shopName slot outfits?>>`
          - **shopName**: `string` - name of shop
          - `"clothing"` | `"forest"` | `"school"`"*slot**: `string` - name of clothing slot"
          - `"all"` | %clothesTypesDesc%
          - `"over_upper"` | `"upper"` | `"under_upper"`"*outfits** _optional_: `string|bool` - display outfits version of slots"
          - `"outfits"` | `"non-outfits"` | `true` | `false`
      parameters:
        - '"clothing"|"forest"|"school" &+ "all"|%clothesTypes%'
        - '"clothing"|"forest"|"school" &+ "over_upper"|"upper"|"under_upper" |+ "outfits"|"non-outfits"|bool'
      tags: ["dom"]
    clothingstatecompare:
      name: clothingstatecompare
    clothingtrait:
      description: |-
        ```dart
        /*  <<shoptraits>>  */
          <<clothingtrait trait noOutput?>>
        /*    <<shopTraitDescription trait>>  */
        ```

        <<clothingtrait trait noOutput?>>
        - **trait**: `string` - trait key in lowercase
        - **noOutput** _optional_: `bool` - suppress output (truthy)
      parameters:
        - text |+ bool|text|number
      tags: ["text", "img"]
    colourCodes:
      name: colourCodes
    combat_deviancy_text:
      name: combat_deviancy_text
    combat_lewdity_text:
      name: combat_lewdity_text
    combat_promiscuity_text:
      name: combat_promiscuity_text
    combat-dildo-on-anus:
      name: combat-dildo-on-anus
    combat-dildo-on-anusentrance:
      name: combat-dildo-on-anusentrance
    combat-dildo-on-penis:
      name: combat-dildo-on-penis
    combat-dildo-on-penisentrance:
      name: combat-dildo-on-penisentrance
    combat-dildo-on-vagina:
      name: combat-dildo-on-vagina
    combat-dildo-on-vaginaentrance:
      name: combat-dildo-on-vaginaentrance
    combat-dildospank:
      name: combat-dildospank
    combat-get-other-hand:
      name: combat-get-other-hand
    combat-hand-hypnosis:
      name: combat-hand-hypnosis
    combat-hand-hypnosis-cover:
      name: combat-hand-hypnosis-cover
    combat-hand-hypnosis-masochism:
      name: combat-hand-hypnosis-masochism
    combat-hand-hypnosis-orgasm:
      name: combat-hand-hypnosis-orgasm
    combat-hand-hypnosis-scream:
      name: combat-hand-hypnosis-scream
    combat-hand-on-anus:
      name: combat-hand-on-anus
    combat-hand-on-anusentrance:
      name: combat-hand-on-anusentrance
    combat-hand-on-arms:
      name: combat-hand-on-arms
    combat-hand-on-bottom:
      name: combat-hand-on-bottom
    combat-hand-on-buttplug:
      name: combat-hand-on-buttplug
    combat-hand-on-chastity:
      name: combat-hand-on-chastity
    combat-hand-on-clothes:
      name: combat-hand-on-clothes
    combat-hand-on-hair:
      name: combat-hand-on-hair
    combat-hand-on-hand:
      name: combat-hand-on-hand
    combat-hand-on-head_breasts:
      name: combat-hand-on-head_breasts
    combat-hand-on-head_nipples:
      name: combat-hand-on-head_nipples
    combat-hand-on-lowerclothes:
      name: combat-hand-on-lowerclothes
    combat-hand-on-lube:
      name: combat-hand-on-lube
    combat-hand-on-mask:
      name: combat-hand-on-mask
    combat-hand-on-mouth:
      name: combat-hand-on-mouth
    combat-hand-on-one-arm:
      name: combat-hand-on-one-arm
    combat-hand-on-overlowerclothes:
      name: combat-hand-on-overlowerclothes
    combat-hand-on-overupperclothes:
      name: combat-hand-on-overupperclothes
    combat-hand-on-penis:
      name: combat-hand-on-penis
    combat-hand-on-penisentrance:
      name: combat-hand-on-penisentrance
    combat-hand-on-sextoy:
      name: combat-hand-on-sextoy
    combat-hand-on-shackle:
      name: combat-hand-on-shackle
    combat-hand-on-shackle-imminent:
      name: combat-hand-on-shackle-imminent
    combat-hand-on-shoes:
      name: combat-hand-on-shoes
    combat-hand-on-socks:
      name: combat-hand-on-socks
    combat-hand-on-throat:
      name: combat-hand-on-throat
    combat-hand-on-underlowerclothes:
      name: combat-hand-on-underlowerclothes
    combat-hand-on-underupperclothes:
      name: combat-hand-on-underupperclothes
    combat-hand-on-upperclothes:
      name: combat-hand-on-upperclothes
    combat-hand-on-vagina:
      name: combat-hand-on-vagina
    combat-hand-on-vaginaentrance:
      name: combat-hand-on-vaginaentrance
    combat-lift-skirt:
      name: combat-lift-skirt
    combat-pen-on-bodypart:
      name: combat-pen-on-bodypart
    combat-pull-clothing-down:
      name: combat-pull-clothing-down
    combat-pull-clothing-state:
      name: combat-pull-clothing-state
    combat-pull-clothing-to-side:
      name: combat-pull-clothing-to-side
    combat-pull-clothing-up:
      name: combat-pull-clothing-up
    combat-pull-outfit-down:
      name: combat-pull-outfit-down
    combat-pull-outfit-up:
      name: combat-pull-outfit-up
    combat-remove-buttplug:
      name: combat-remove-buttplug
    combat-reset-hand:
      name: combat-reset-hand
    combat-reset-tool:
      name: combat-reset-tool
    combat-reveal-sextoy:
      name: combat-reveal-sextoy
    combat-set-hand-start:
      name: combat-set-hand-start
    combat-set-hand-target:
      name: combat-set-hand-target
    combat-spank:
      name: combat-spank
    combat-stroker-on-penis:
      name: combat-stroker-on-penis
    combat-stroker-on-penisentrance:
      name: combat-stroker-on-penisentrance
    combat-tug-clothing:
      name: combat-tug-clothing
    combatApologise:
      name: combatApologise
    combataware:
      description: |-
        Prints `Awareness X` with appropriate color for level

        `<<combatX>>` widgets should be used in combat

        `<<combataware level>>`
        - **level**: `number` - required level for this action
          - `1-5`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["text"]
    combatBreast:
      name: combatBreast
    combatButtonAdjustments:
      name: combatButtonAdjustments
    combatcontrol:
      description: |-
        Adds control to pc and updates effects of it

        Modifies `$controlstart` to track when changes should be output in combat

        `change` is technically optional but should not be. Consider refactoring

        `<<trauma change?>>`
        - **change** _optional_: `number` - +/- change to apply
          - if not provided, just clamps pc's control
      parameters:
        - "number"
      tags: ["refactor"]
    combatcrime:
      description: |-
        Prints `Crime X` where X is type of crime

        `<<combatX>>` widgets should be used in combat

        `<<combatcrime type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "%crimeTypes%"
      tags: ["text"]
    combatDefaults:
      name: combatDefaults
    combatdeviancy1:
      name: combatdeviancy1
      tags: ["unused"]
    combatdeviancy2:
      name: combatdeviancy2
      tags: ["unused"]
    combatdeviancy3:
      name: combatdeviancy3
      tags: ["unused"]
    combatdeviancy4:
      name: combatdeviancy4
      tags: ["unused"]
    combatdeviancy5:
      name: combatdeviancy5
    combatdeviancy6:
      name: combatdeviancy6
      tags: ["unused"]
    combatdeviancyN:
      name: combatdeviancyN
    combatdeviant:
      description: |-
        Prints `Deviancy X` with appropriate color for level

        `<<combatX>>` widgets should be used in combat

        `<<combatdeviant level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["unused", "text"]
    combatdeviant1:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combatdeviant2:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combatdeviant3:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combatdeviant4:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combatdeviant5:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combatdeviant6:
      description: |-
        Prints `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combateffects:
      name: combateffects
    combatexhibitionist:
      description: |-
        Prints `Exhibitionism X` with appropriate color for level

        `<<combatX>>` widgets should be used in combat

        `<<combatexhibitionist level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["unused", "text"]
    combatexhibitionist1:
      description: |-
        Prints `Exhibitionism 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatexhibitionist2:
      description: |-
        Prints `Exhibitionism 2` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatexhibitionist3:
      description: |-
        Prints `Exhibitionism 3` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatexhibitionist4:
      description: |-
        Prints `Exhibitionism 4` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatexhibitionist5:
      description: |-
        Prints `Exhibitionism 5` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatexhibitionist6:
      description: |-
        Prints `!Exhibitionism 6!` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["unused", "text"]
    combathandguide:
      name: combathandguide
    combathandhold:
      name: combathandhold
    combatimg:
      name: combatimg
    combatinit:
      name: combatinit
    combatListColor:
      description: |-
        Use `combatListColor()` instead
      name: combatListColor
      tags: ["unused"]
    combatMasturbate:
      name: combatMasturbate
    combatMouthOtherAnus:
      name: combatMouthOtherAnus
    combatNipple:
      name: combatNipple
    combatOthervagina:
      name: combatOthervagina
    combatPenisEntrance:
      name: combatPenisEntrance
    combatPenisImminent:
      name: combatPenisImminent
    combatPenisPenetrated:
      name: combatPenisPenetrated
    combatperson:
      name: combatperson
    combatPerson:
      name: combatPerson
    combatpersons:
      name: combatpersons
    combatpromiscuity1:
      name: combatpromiscuity1
    combatpromiscuity2:
      name: combatpromiscuity2
    combatpromiscuity3:
      name: combatpromiscuity3
    combatpromiscuity4:
      name: combatpromiscuity4
    combatpromiscuity5:
      name: combatpromiscuity5
    combatpromiscuity6:
      name: combatpromiscuity6
    combatpromiscuityN:
      name: combatpromiscuityN
    combatpromiscuous:
      description: |-
        Prints `Promiscuous X` or `Deviancy X` with appropriate color for level

        `<<combatX>>` widgets should be used in combat

        `<<combatpromiscuous level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["unused", "text"]
    combatpromiscuous1:
      description: |-
        Prints `Promiscuous 1` or `Deviancy 1` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatpromiscuous2:
      description: |-
        Prints `Promiscuous 2` or `Deviancy 2` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatpromiscuous3:
      description: |-
        Prints `Promiscuous 3` or `Deviancy 3` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatpromiscuous4:
      description: |-
        Prints `Promiscuous 4` or `Deviancy 4` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatpromiscuous5:
      description: |-
        Prints `Promiscuous 5` or `Deviancy 5` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatpromiscuous6:
      description: |-
        Prints `!Promiscuous 6!` or `!Deviancy 6!` with appropriate color for level

        `<<combatX>>` widgets should be used in combat
      tags: ["text"]
    combatskulduggeryskilluse:
      name: combatskulduggeryskilluse
    combatspeech:
      name: combatspeech
    combatstate:
      name: combatstate
    combatTrainAdvance:
      name: combatTrainAdvance
    combattrauma:
      description: |-
        Adds trauma to pc based on control and trait modifiers

        This trauma is half of normal trauma gain

        Trauma effects on pc are not updated after change.
        Consider refactoring to call `<<trauma>>` instead of `<<traumaclamp>>`

        `<<combattrauma change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "|+ number"
      tags: ["refactor"]
    commaButtPlug:
      name: commaButtPlug
      tags: ["unused"]
    commercial:
      name: commercial
    commercialdrain:
      name: commercialdrain
    commercialdraineventend:
      name: commercialdraineventend
    commercialdrainlinks:
      name: commercialdrainlinks
    commercialdrainquick:
      name: commercialdrainquick
    commercialeventend:
      name: commercialeventend
    commercialex1:
      name: commercialex1
    commercialex2:
      name: commercialex2
    commercialex3:
      name: commercialex3
    commercialexposed:
      name: commercialexposed
      tags: ["unused"]
    commercialquick:
      name: commercialquick
    completeassignment:
      name: completeassignment
    compoundoptions:
      name: compoundoptions
    compressionVerifier:
      name: compressionVerifier
      tags: ["unused"]
    compressNPC:
      description: |-
        Puts an active npc in a persistent slot after compressing it

        `<<compressNPC slot name>>`
        - **slot**: `number` - slot number to put npc data at (zero-based)
        - **name**: `string` - key to load npc's data from
          - spaces should be avoided if possible
      parameters:
        - "number &+ string|text"
    compute:
      container: true
      name: compute
    condition:
      name: condition
      tags: ["unused"]
    condomDesc:
      name: condomDesc
    condomsPrice:
      name: condomsPrice
    condomsSidebar:
      name: condomsSidebar
    connector-box:
      name: connector-box
    connudatus:
      name: connudatus
    connudatuseventend:
      name: connudatuseventend
    connudatusexposed:
      name: connudatusexposed
      tags: ["unused"]
    connudatusMarketsLewdEvents:
      name: connudatusMarketsLewdEvents
    connudatusMarketsProductsEvents:
      name: connudatusMarketsProductsEvents
    connudatusMarketsStatusEvents:
      name: connudatusMarketsStatusEvents
    connudatusquick:
      name: connudatusquick
    connudatuswallet:
      name: connudatuswallet
    consensual:
      name: consensual
    consensualman:
      name: consensualman
      tags: ["unused"]
    containerInfo:
      name: containerInfo
    containersInit:
      name: containersInit
    containersLink:
      name: containersLink
    continueWraith:
      name: continueWraith
    control:
      description: |-
        Adds control to pc and updates effects of it

        `$control` is pc's control over their life choices where higher numbers are healthy (0-1,000)

        See `<<combatcontrol>>` for other use cases

        `change` is technically optional but should not be. Consider refactoring

        `<<trauma change?>>`
        - **change** _optional_: `number` - +/- change to apply
          - if not provided, just clamps pc's control
      parameters:
        - "number"
      tags: ["refactor"]
    controlcaption:
      name: controlcaption
    controlloss:
      name: controlloss
    convertToDDFormat:
      name: convertToDDFormat
      tags: ["unused"]
    convertToDMYFormat:
      name: convertToDMYFormat
      tags: ["unused"]
    corruption:
      description: |-
        Adds corruption to pc and applies corruption effects

        `<<corruption change skipSubmissive?>>`
        - **change**: `number` - +/- change to apply
        - **skipSubmissive** _optional_: `bool` - do not add `$submissive` to pc even if they qualify (truthy)
          - Defaults to false
      parameters:
        - "number |+ bool"
    CosmeticsGenericDepartment:
      name: CosmeticsGenericDepartment
    cottage_bailey_options:
      name: cottage_bailey_options
    courtyard:
      name: courtyard
    cover_end:
      name: cover_end
    covered:
      description: |-
        Prints text description of player attempting to cover their lewdness
      tags: ["text"]
    cow:
      description: |-
        Prints `| Cow`
      tags: ["text"]
    cowTransform:
      name: cowTransform
    cream_arousal:
      name: cream_arousal
    cream_audience:
      name: cream_audience
    cream_damage:
      name: cream_damage
    cream_description:
      name: cream_description
    cream_end:
      name: cream_end
    cream_events:
      name: cream_events
    cream_fail:
      name: cream_fail
    cream_finish:
      name: cream_finish
    cream_init:
      name: cream_init
    cream_walk:
      name: cream_walk
    creampie:
      name: creampie
    creatureActivity:
      name: creatureActivity
    creatureContainersProgressDay:
      name: creatureContainersProgressDay
    creatureTooltip:
      name: creatureTooltip
    creatureVisit:
      name: creatureVisit
    crime:
      description: |-
        Prints `Crime X` where X is type of crime

        `<<crime type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "%crimeTypes%"
      tags: ["text"]
    crimeClear:
      name: crimeClear
    crimeClearEvent:
      name: crimeClearEvent
    crimeDown:
      name: crimeDown
    crimeParade:
      name: crimeParade
    crimes:
      description: |-
        Prints list of crimes

        `<<crimes ...type>>`
        - ...**type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "...%crimeTypes%"
      tags: ["text"]
    crimeType:
      description: |-
        Prints type of crime

        `<<crimeType type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "%crimeTypes%"
      tags: ["text"]
    crimeUp:
      name: crimeUp
    crimeUpFlat:
      name: crimeUpFlat
    crossdressing_check:
      name: crossdressing_check
    crotch:
      description: |-
        Prints outermost non-naked lower clothing layer
      tags: ["text"]
    cumspeech:
      name: cumspeech
    cumswallow:
      name: cumswallow
    cunnilingusejacstat:
      name: cunnilingusejacstat
    cunnilingusstat:
      name: cunnilingusstat
    cursedtext:
      description: |-
        Prints hint on getting cursed item off (ie, `| Perhaps the X can help.`)

        Does not allow multiple items despite partial implementation. Consider refactoring

        `<<cursedtext ...cursedItemNames>>`
        - ...**cursedItemNames**: `string` - name of cursed items to print hint for
          - `"collar"`: `| Perhaps the police can help.`
          - `"chastity belt"`: `| Perhaps the temple can help.`
      parameters:
        - '...("collar"|"chastity belt")'
      tags: ["text"]
    cute:
      description: |-
        Prints random gender-appropriate synonym for cute

        Could use more synonyms. Consider refactoring
      tags: ["text", "refactor"]
    dailySellProduce:
      name: dailySellProduce
      tags: ["unused"]
    damage_farm:
      name: damage_farm
    damageClothing:
      name: damageClothing
      tags: ["unused"]
    damageFaceCover:
      name: damageFaceCover
    dance_crossdress_reveal:
      name: dance_crossdress_reveal
    dance_job_end:
      name: dance_job_end
    dance_job_init:
      name: dance_job_init
    dance_job_interest:
      name: dance_job_interest
    dance_job_text:
      name: dance_job_text
    dance_npc_masturbation:
      name: dance_npc_masturbation
    dance_npc_masturbation_chance:
      name: dance_npc_masturbation_chance
    dance_private_init:
      name: dance_private_init
    dance_stage_cum:
      name: dance_stage_cum
    danceactions:
      name: danceactions
    danceaudience:
      name: danceaudience
    dancebriar:
      name: dancebriar
    dancebrothelrobin:
      name: dancebrothelrobin
    danceCorruption:
      name: danceCorruption
    dancedarryl:
      name: dancedarryl
    dancedifficulty:
      name: dancedifficulty
    dancedrink:
      name: dancedrink
    dancedrunktrip:
      name: dancedrunktrip
    danceeffects:
      name: danceeffects
    dancefall:
      name: dancefall
    dancefinish:
      name: dancefinish
    danceinit:
      name: danceinit
    danceleighton:
      name: danceleighton
    dancelight:
      name: dancelight
    dancelonging:
      name: dancelonging
    dancemolest:
      name: dancemolest
    dancenote:
      name: dancenote
    danceprivate:
      name: danceprivate
    dancepull:
      name: dancepull
    dancerape:
      name: dancerape
    dancesalivate:
      name: dancesalivate
    dancesamfinish:
      name: dancesamfinish
    danceskill:
      name: danceskill
    danceskilluse:
      name: danceskilluse
    dancespeech:
      name: dancespeech
    dancestat:
      name: dancestat
    dancestrip:
      name: dancestrip
    danceStripActionObject:
      name: danceStripActionObject
    dancestripactions:
      name: dancestripactions
    dancestripeffects:
      name: dancestripeffects
    dancestrippertrouble:
      name: dancestrippertrouble
    danceStudioIntro:
      name: danceStudioIntro
    dancetext:
      description: |-
        Prints color-coded adjective of active dance skill usage
      tags: ["text"]
    dancetripfinish:
      name: dancetripfinish
    dancetriprape:
      name: dancetriprape
    dancevip:
      name: dancevip
    danceWraith:
      name: danceWraith
    dancingclothes:
      name: dancingclothes
    dangerousText:
      description: |-
        Prints `| Dangerous`
      tags: ["text"]
    danube:
      name: danube
    danubeeventend:
      name: danubeeventend
    danubeexposed:
      name: danubeexposed
      tags: ["unused"]
    danubemeal:
      name: danubemeal
    danubePettyTheft:
      description: |-
        Pool of events for short, one-liner inlineevents when robbing Danube Street houses. The most common events you'll get while breaking in.
      tags: ["text"]
    danubequick:
      name: danubequick
    daughter:
      description: |-
        Prints `son` or `daughter` depending on npc pronouns
      tags: ["text"]
    daylight:
      description: |-
        Prints amount ambient light based on time of day
      tags: ["text"]
    deactivateNPC:
      name: deactivateNPC
      tags: ["unused"]
    def:
      description: |-
        Adds defiant quality to pc's state and applies effects

        See `<<sub>>`

        `<<def change>>`
        - **change**: `number` - + change to apply
      parameters:
        - "number"
    defeatnpc:
      name: defeatnpc
    defer:
      name: defer
      tags: ["unused"]
    defiance:
      name: defiance
    defianttext:
      description: |-
        Prints `| Defiant`
      tags: ["text"]
    defileSacredGround:
      name: defileSacredGround
    deleteConfirm:
      name: deleteConfirm
    deleteoutfit:
      name: deleteoutfit
    deleteWarning:
      name: deleteWarning
    delinquency:
      description: |-
        Adds delinquency to pc's state

        `$delinquency` is a historic measurement of how much trouble the pc is considered by the school where 0 is innocent (0-1,000).
        `change` is multiplied by 4 here and in `<<detention>>`

        See `<<detention>>` to adjust detention at the same time

        `<<delinquency change modifier?>>`
        - **change**: `number` - +/- change to apply
        - **modifier** _optional_: `string` - type of modifier to apply
          - `"bonus"`: additional reduction if pc attends with optional school trait clothes
      parameters:
        - 'number |+ "bonus"'
    demon:
      description: |-
        Prints `| Demon`
      tags: ["text"]
    demonTransform:
      name: demonTransform
    deskText:
      name: deskText
    destination:
      name: destination
    destination_catacombs:
      name: destination_catacombs
    destination_farm:
      name: destination_farm
    destination_farm_ride:
      name: destination_farm_ride
    destination_lake_ice:
      name: destination_lake_ice
    destination_pool:
      name: destination_pool
    destination_prison:
      name: destination_prison
    destination_prison_walkway:
      name: destination_prison_walkway
    destination_tentacle_forest:
      name: destination_tentacle_forest
    destination5:
      name: destination5
    destinationbondage:
      name: destinationbondage
    destinationdrain:
      name: destinationdrain
    destinationeventend:
      name: destinationeventend
    destinationexposed:
      name: destinationexposed
      tags: ["unused"]
    destinationfarmroad:
      name: destinationfarmroad
    destinationlake:
      name: destinationlake
    destinationlakeruin:
      name: destinationlakeruin
    destinationsewers:
      name: destinationsewers
    destinationsewersrandom:
      name: destinationsewersrandom
    destinationsmuggler:
      name: destinationsmuggler
    destinationstormdrain:
      name: destinationstormdrain
    destinationwolfcave:
      name: destinationwolfcave
    detach_leash:
      description: |-
        Dettaches leash from pc's collar

        Can be used to gain infinite collars and keepCursed isn't universal. Consider refactoring

        `<<detach_leash pcCanRemove? noRebuy?>>`
        - **keepCursed** _optional_: `bool` - collar will not be cursed unless original collar was already (truthy)
          - Defaults to `false`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool |+ bool"
      tags: ["refactor"]
    detention:
      description: |-
        Adds detention and delinquency to pc's state

        `$detention` is a measurement of how much trouble the pc is in per day where 0 is innocent (0-100).
        `change` is multiplied by 10

        See `<<delinquency>>` to adjust only delinquency

        `<<detention change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    deviancy1:
      name: deviancy1
    deviancy2:
      name: deviancy2
    deviancy3:
      name: deviancy3
    deviancy4:
      name: deviancy4
    deviancy5:
      name: deviancy5
    deviancy6:
      name: deviancy6
      tags: ["unused"]
    deviancyN:
      name: deviancyN
    deviant:
      description: |-
        Prints `Deviancy X` with appropriate color for level

        `<<deviant level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["unused", "text"]
    deviant1:
      description: |-
        Prints `Deviancy 1` with appropriate color for level
      tags: ["text"]
    deviant2:
      description: |-
        Prints `Deviancy 2` with appropriate color for level
      tags: ["text"]
    deviant3:
      description: |-
        Prints `Deviancy 3` with appropriate color for level
      tags: ["text"]
    deviant4:
      description: |-
        Prints `Deviancy 4` with appropriate color for level
      tags: ["text"]
    deviant5:
      description: |-
        Prints `Deviancy 5` with appropriate color for level
      tags: ["text"]
    deviant6:
      description: |-
        Prints `Deviancy 6` with appropriate color for level
      tags: ["unused", "text"]
    difficulty:
      name: difficulty
    dildoSelfAnusEntrance:
      name: dildoSelfAnusEntrance
    dildoSelfPussyEntrance:
      name: dildoSelfPussyEntrance
    disable:
      name: disable
    disablearms:
      name: disablearms
    disableleftarm:
      name: disableleftarm
    disablerightarm:
      name: disablerightarm
    dismissAvery:
      name: dismissAvery
    dismissKylar:
      name: dismissKylar
    dismissWhitney:
      name: dismissWhitney
    display_plot:
      name: display_plot
    display_quality:
      name: display_quality
    displayFeat:
      name: displayFeat
    displayFeatFake:
      name: displayFeatFake
    displayLinks:
      name: displayLinks
    displayMonthday:
      name: displayMonthday
      tags: ["unused"]
    displaySettings:
      name: displaySettings
    displaySubsection:
      name: displaySubsection
    distinction_stat:
      name: distinction_stat
    dock_security:
      name: dock_security
    dock_security_text:
      name: dock_security_text
    dockclotheson:
      name: dockclotheson
    dockdogfucked:
        name: dockdogfucked
    dockeffects:
      name: dockeffects
    dockoptions:
      name: dockoptions
    dockpubdestination:
      name: dockpubdestination
    dockpuboptions:
      name: dockpuboptions
    dockpubquiz:
      name: dockpubquiz
    dockstatus:
      name: dockstatus
    dockstatustext:
      name: dockstatustext
    dockunbindoffer:
      name: dockunbindoffer
    dockwork:
      name: dockwork
    doggyimg:
      name: doggyimg
    domus:
      name: domus
    domuseventend:
      name: domuseventend
    domusexposed:
      name: domusexposed
    domusquick:
      name: domusquick
    dontHideForNow:
      name: dontHideForNow
    dontHideRevert:
      name: dontHideRevert
    doubleslider:
      name: doubleslider
      tags: ["unused"]
    doVersionCheck:
      name: doVersionCheck
    draindescription:
      name: draindescription
    drainexit:
      name: drainexit
    drainexiteventend:
      name: drainexiteventend
    drainexitlinks:
      name: drainexitlinks
    drainexitquick:
      name: drainexitquick
    drainladderdownlink:
      name: drainladderdownlink
    drainlinks:
      name: drainlinks
    drench:
      name: drench
    drenchfromgroup:
      name: drenchfromgroup
    dress:
      description: |-
        Prints descriptor of active NPC's upper clothing

        See `<<skirt>>` for lower clothing or `<<bra>>` for inner_upper clothing

        See `<<npcClothesText>>` for full name of clothes
      tags: ["text"]
    droptowel:
      name: droptowel
    druggedcaption:
      name: druggedcaption
    drugs:
      description: |-
        Adds drugs to pc's system

        `$drugged` is a measure of non-hallucinogenic drugs in pc's system where 0 is none (0-1,000)

        `<<drugs change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    drunkcaption:
      name: drunkcaption
    dry:
      name: dry
    dry_full:
      name: dry_full
    dry_towel:
      name: dry_towel
    dungeonescape:
      name: dungeonescape
    dyeSwatch:
      name: dyeSwatch
    dynamic:
      description: |-
        Prints and registers a widget which will be re-rendered dynamically

        [High-Level Dynamic API Overview](%workspaceDir%/game/base-system/tools/dynamicRendering.js#L2)

        `<<dynamic widgetName htmlId? ...widgetArgs?>>`
        - **widgetName**: `string` - name of widget
        - **htmlId** _optional_: `string` - optional DOM id for css selectors
        - ...**widgetArgs** _optional_: `any` - space separated args to pass to widget as if called directly
      parameters:
        - "text |+ text |+ ...(var|bareword)"
    dynamicblock:
      container: true
      description: |-
        Prints and registers a block which will be re-rendered dynamically

        [High-Level Dynamic API Overview](%workspaceDir%/game/base-system/tools/dynamicRendering.js#L2)

        `<<dynamicblock ...properties>>`
        - ...**properties**: `string` - additional properties to attach to block
          - `"delay": only evaluate after `Dynamic.render()` has been called
          - `"id=X"`: id of the div element where X is the DOM id (auto-generated by default)
          - `"class=X"`: class of the div element where X is the DOM classlist
      parameters:
        - "|+ ...text"
    earnAllFeats:
      name: earnAllFeats
    earnFeat:
      name: earnFeat
    earSlimeCafeLinks:
      description: |-
        Prints eating at cafe links as modified by earslime's command over pc

        `<<earSlimeCafeLinks linkName?>>`
        - **linkName** _optional_: `string` - example kind to output
          - `"Obey"`: An option to obey or defy is given to pc
          - `"Next"`: pc must comply with order. Default state
      parameters:
        - '|+ "Next"|"Obey"'
      tags: ["links", "text"]
    earSlimeDaily:
      description: |-
        Applies and updates effects of pc's earslime

        `<<earSlimeDaily passageEffects?>>`
        - **passageEffects** _optional_: `bool` - apply effects of ear slime passage as well (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    earSlimeFocusChoice:
      name: earSlimeFocusChoice
    earSlimePoundLinks:
      name: earSlimePoundLinks
    earSlimePregnancy:
      name: earSlimePregnancy
    earSlimeSeenActions:
      name: earSlimeSeenActions
    earSlimeShoppingExhibitionism:
      name: earSlimeShoppingExhibitionism
    eatLurker:
      description: |-
        Consumes a lurker and prints descriptive result

        See `<<feedLurker>>` to feed a lurker to GH
      tags: ["text"]
    edenCagedCoopSave:
      name: edenCagedCoopSave
    edenCagedSave:
      name: edenCagedSave
    edenFluidsCheck:
      name: edenFluidsCheck
    edenlust:
      name: edenlust
    edenpreystart:
      name: edenpreystart
    effects:
      name: effects
    effects_prison:
      name: effects_prison
    effectsabomination:
      name: effectsabomination
    effectsanuspenisdoublefuck:
      name: effectsanuspenisdoublefuck
    effectsanuspenisfuck:
      name: effectsanuspenisfuck
    effectsanustopenis:
      name: effectsanustopenis
    effectsanustopenisdouble:
      name: effectsanustopenisdouble
    effectsarousalsoak:
      name: effectsarousalsoak
    effectsCoverAnus:
      name: effectsCoverAnus
    effectsCoverPenis:
      name: effectsCoverPenis
    effectsCoverVagina:
      name: effectsCoverVagina
    effectsdildowhack:
      name: effectsdildowhack
    effectsdissociation:
      name: effectsdissociation
    effectsDropSexToy:
      name: effectsDropSexToy
    effectshandpull:
      name: effectshandpull
    effectshandsclothes:
      name: effectshandsclothes
    effectshandsfreeface:
      name: effectshandsfreeface
    effectshypnosiswhack:
      name: effectshypnosiswhack
    effectsinsertions:
      name: effectsinsertions
    effectsmakeup:
      name: effectsmakeup
    effectsman:
      name: effectsman
    effectsorgasm:
      name: effectsorgasm
    effectspain:
      name: effectspain
    effectspenisanusfuck:
      name: effectspenisanusfuck
    effectspenistoanus:
      name: effectspenistoanus
    effectspenistopenis:
      name: effectspenistopenis
    effectspenistopenisfuck:
      name: effectspenistopenisfuck
    effectspenistovagina:
      name: effectspenistovagina
    effectspenisvaginafuck:
      name: effectspenisvaginafuck
    effectspenwhack:
      name: effectspenwhack
    effectsPickupSexToy:
      name: effectsPickupSexToy
    effectspossessed:
      name: effectspossessed
    effectsremovebuttplug:
      name: effectsremovebuttplug
    effectsshacklewhack:
      name: effectsshacklewhack
    effectsspray:
      name: effectsspray
    effectssteal:
      name: effectssteal
    effectstentacleadv:
      name: effectstentacleadv
    effectstentacles:
      name: effectstentacles
    effectsvaginapenisdoublefuck:
      name: effectsvaginapenisdoublefuck
    effectsvaginapenisfuck:
      name: effectsvaginapenisfuck
    effectsvaginatopenis:
      name: effectsvaginatopenis
    effectsvaginatopenisdouble:
      name: effectsvaginatopenisdouble
    effectsvaginatovagina:
      name: effectsvaginatovagina
    effectsvaginatovaginafuck:
      name: effectsvaginatovaginafuck
    effectswater:
      name: effectswater
    effectsWraith:
      name: effectsWraith
    ejacstat:
      name: ejacstat
    ejacTrait:
      description: |-
        Prints `| Cumoisseur` or `| Cum Dump` depending on pc's `$submissive`
      tags: ["text"]
    ejaculate:
      name: ejaculate
    ejaculation:
      description: |-
        Prints end of combat ejaculation description for all combat NPCs

        All NPCs, including named, should go through here to get pre and post ejac descriptions

        Alex, Avery, and Whitney descriptions are contained here until they have dedicated widgets

        `<<ejaculation ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation to perform
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-alex:
      description: |-
        Prints end of combat ejaculation description for Alex

        `<<ejaculation-alex ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-eden:
      description: |-
        Prints end of combat ejaculation description for Eden

        `<<ejaculation-eden ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-gloryhole:
      description: |-
        Prints end of combat ejaculation description for player at a gloryhole

        Gloryhole encounter assumes NPC cannot reach or see PC and vice versa

        Assumes NPCs believe PC may have following combat

        Assumes all other forms of finishing in place and encounters can be either consensual or non-con

        Non-con encounters assume PC is restrained to hole with no arms available, though genital encounters were left in place in case of future use

        Currently non-con gloryhole is oral-only and so focus is on these cases; the rear-body non-con is captured by $position="wall".
        As game changes this can be reviewed

        Consensual gloryhole has all combat options available currently

        `<<ejaculation-gloryhole ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-kylar:
      description: |-
        Prints end of combat ejaculation description for Kylar

        `<<ejaculation-kylar ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-leighton:
      description: |-
        Prints end of combat ejaculation description for Leighton

        `<<ejaculation-leighton ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-pillory:
      description: |-
        Prints end of combat ejaculation description for player in a pillory

        `<<ejaculation-pillory ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-plant:
      description: |-
        Prints end of combat ejaculation description for plant people

        `<<ejaculation-plant ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-robin:
      description: |-
        Prints end of combat ejaculation description for Robin

        `<<ejaculation-robin ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-sydney:
      description: |-
        Prints end of combat ejaculation description for Sydney

        `<<ejaculation-sydney ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-urinate:
      description: |-
        Prints description of angry post-combat golden shower humiliation
      tags: ["text"]
    ejaculation-wall:
      description: |-
        Prints end of combat ejaculation description for NPCs that are only able to access front or back of player (player stuck in wall)

        Wall encounter assumes NPC at back of PC cannot reach around to front, and vice versa, and that PC cannot see what's happening behind them

        Assumes NPCs believe PC may have following combat due to being stuck in wall unaided

        Gloryhole removed as of v2.6 and front facing combat only left in place in case of future work

        `<<ejaculation-wall ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejaculation-wraith:
      description: |-
        Prints end of combat ejaculation description for Ivory Wraith

        `<<ejaculation-wraith ejacType?>>`
        - **ejacType** _optional_: `string` - type of ejaculation
          - `"short"`: Quick ejac that prevents angry post-sex actions
      parameters:
        - '|+ "short"'
      tags: ["text"]
    ejacW:
      name: ejacW
    elk:
      name: elk
    elkeventend:
      name: elkeventend
    elkexposed:
      name: elkexposed
      tags: ["unused"]
    elkquick:
      name: elkquick
    embarrassment:
      description: |-
        Prints sentence describing pc's arousal level as if it was embarrassment
      tags: ["text"]
    emptyClassroomCaughtOrgasm:
      name: emptyClassroomCaughtOrgasm
    emptyClassroomMasturbationDescription:
      name: emptyClassroomMasturbationDescription
    emptyClassroomMasturbationIntro:
      name: emptyClassroomMasturbationIntro
    enable_rescue:
      name: enable_rescue
    enableSchoolRescue:
      name: enableSchoolRescue
    encountersteal:
      name: encountersteal
    end_moor_captive:
      name: end_moor_captive
    end_npc_pillory:
      name: end_npc_pillory
    endBirdEggLaying:
      name: endBirdEggLaying
    endcombat:
      description: |-
        Ends combat by applying pc effects, displaying necessary descriptions of them, and resetting combat variables back to defaults

        `<<endcombat eventType?>>`
        - **eventType** _optional_: `string` - type of event to end when calling `<<endevent>>`
          - `"phaseless"`: phase variables will not be reset
      parameters:
        - '|+ "phaseless"'
      tags: ["text"]
    endconfession:
      name: endconfession
    endconfessionself:
      name: endconfessionself
    endevent:
      description: |-
        Ends ongoing event by resetting all event variables to default

        Superceded by `<<endcombat>>`

        `<<endevent type?>>`
        - **type** _optional_: `string` - type of event to end
          - `"phaseless"`: phase variables will not be reset
      parameters:
        - '|+ "phaseless"'
    endmasturbation:
      name: endmasturbation
    endnpc:
      name: endnpc
    endNpcPregnancy:
      name: endNpcPregnancy
    endPlayerPregnancy:
      name: endPlayerPregnancy
    endRainWraith:
      name: endRainWraith
    endstall:
      name: endstall
    endWraith:
      name: endWraith
    enemyarousal:
      name: enemyarousal
    english_skill_up_text:
      name: english_skill_up_text
    englishdifficulty:
      name: englishdifficulty
    englishNudeReactions:
      description: |-
        Prints classmate reactions for pc's nude state

        Should check if npcs are already generated before generating. Consider refactoring
      tags: ["text", "refactor"]
    englishplayfinish:
      name: englishplayfinish
    englishplaystart:
      name: englishplaystart
    englishskill:
      name: englishskill
    englishstart:
      name: englishstart
    enterChangingRoomLink:
      name: enterChangingRoomLink
      tags: ["unused"]
    enumeratedGroup:
      description: |-
        Prints summarised gender makeup of currently active npcs with numbers (ie, `2 men and 3 women`)

        See `<<group>>` for no numbers, `<<EnumeratedGroup>> for capitalised, or `<<fullGroup>>` for a list
      tags: ["text"]
    EnumeratedGroup:
      description: |-
        Prints capitalised and summarised gender makeup of currently active npcs with numbers (ie, `2 Men and 3 Women`)

        See `<<group>>` for no numbers, `<<enumeratedGroup>> for uncapitalised, or `<<fullGroup>>` for a list
      tags: ["unused", "text"]
    equipClothesItemFromDefault:
      description: |-
        Applies clothing item to pc's slot based on setup object

        Does NOT respect cursed items

        `<<equipClothesItemFromDefault slot itemIndex colour? accessoryColour?>>`
        - **slot**: `string` - slot to put clothing on
          - %clothesTypesDesc%
        - **itemIndex**: `number` - index of clothing item from setup to copy from
        - **colour** _optional_: `string` - primary colour
          - `"custom"`: pulls values from `$customColors` object
          - `text`: valid colour in any format
        - **accessoryColour** _optional_: `object` - secondary colour
          - `"custom"`: pulls values from `$customColors` object
          - `text`: valid colour in any format
      parameters:
        - '%clothesTypes% &+ number |+ "custom"|text |+ "custom"|text'
    equipNPCCondom:
      name: equipNPCCondom
    equipPlayerCondom:
      name: equipPlayerCondom
    error:
      name: error
    errorp:
      name: errorp
    estate_betting_start:
      name: estate_betting_start
    estate_cards_bet:
      name: estate_cards_bet
    estate_cards_finish:
      name: estate_cards_finish
    estate_chaos:
      name: estate_chaos
    estate_chaos_bar:
      name: estate_chaos_bar
    estate_end:
      name: estate_end
    estate_init:
      name: estate_init
    estate_security:
      name: estate_security
    estate_stone_links:
      name: estate_stone_links
    event_trigger:
      name: event_trigger
    eventAmbient:
      name: eventAmbient
    eventbog:
      name: eventbog
    eventbogsafe:
      name: eventbogsafe
    eventforest:
      name: eventforest
    eventforestdeep:
      name: eventforestdeep
    eventforestitem:
      name: eventforestitem
    eventforestoutskirts:
      name: eventforestoutskirts
    eventforestsafe:
      name: eventforestsafe
    eventlake:
      name: eventlake
    eventlakeice:
      name: eventlakeice
    eventlakesafe:
      name: eventlakesafe
    eventlakewater:
      name: eventlakewater
    eventParkStreakEnd:
      name: eventParkStreakEnd
    events_farm_exhibitionism:
      name: events_farm_exhibitionism
    events_prison:
      name: events_prison
    events_prison_attention:
      name: events_prison_attention
    events_prison_triggered:
      name: events_prison_triggered
    events_skul_dock:
      name: events_skul_dock
    events_stalk:
      name: events_stalk
    events_stalk_nnpc:
      name: events_stalk_nnpc
    eventsbartending:
      name: eventsbartending
    eventsbartendinglisten:
      name: eventsbartendinglisten
    eventsbeach:
      name: eventsbeach
    eventsbondage:
      name: eventsbondage
    eventsbondageeast:
      name: eventsbondageeast
    eventsbondagenorth:
      name: eventsbondagenorth
    eventsbondagesouth:
      name: eventsbondagesouth
    eventsbondagewest:
      name: eventsbondagewest
    eventscave:
      name: eventscave
    eventscavesafe:
      name: eventscavesafe
    eventscavetreasure:
      name: eventscavetreasure
    eventschalets:
      name: eventschalets
    eventschef:
      name: eventschef
    eventschoolhallwaysexposed:
      name: eventschoolhallwaysexposed
    eventscourtyard:
      name: eventscourtyard
    eventsdance:
      name: eventsdance
    eventsdeepsea:
      name: eventsdeepsea
    eventsdrain:
      name: eventsdrain
    eventsenglish:
      name: eventsenglish
    eventsenglishsafe:
      name: eventsenglishsafe
    eventsfarm:
      name: eventsfarm
    eventshistory:
      name: eventshistory
    eventshistorysafe:
      name: eventshistorysafe
    eventsmaths:
      name: eventsmaths
    eventsmathssafe:
      name: eventsmathssafe
    eventsmoorhigh:
      name: eventsmoorhigh
    eventsmoorlow:
      name: eventsmoorlow
    eventsmoormid:
      name: eventsmoormid
    eventsSchoolChangingRoomsBoys:
      name: eventsSchoolChangingRoomsBoys
    eventsschoolhallways:
      name: eventsschoolhallways
    eventsschoolstump:
      name: eventsschoolstump
    eventsschooltoilets:
      name: eventsschooltoilets
    eventsscience:
      name: eventsscience
    eventssciencesafe:
      name: eventssciencesafe
    eventssea:
      name: eventssea
    eventsseabeach:
      name: eventsseabeach
    eventssewers:
      name: eventssewers
    eventsstall:
      name: eventsstall
    eventsstreet:
      name: eventsstreet
    eventsstreetday:
      name: eventsstreetday
    eventsstreetnight:
      name: eventsstreetnight
    eventsswimming:
      name: eventsswimming
    eventsswimmingsafe:
      name: eventsswimmingsafe
    eventstemple:
      name: eventstemple
    eventstoilets:
      name: eventstoilets
    eventstoiletssafe:
      name: eventstoiletssafe
      tags: ["unused"]
    eventstrash:
      name: eventstrash
    eventsWhitneyStreet:
      name: eventsWhitneyStreet
    eventwolfcave:
      name: eventwolfcave
    ex_effects:
      name: ex_effects
      tags: ["unused"]
    ex_end:
      name: ex_end
      tags: ["unused"]
    ex_init:
      name: ex_init
      tags: ["unused"]
    exam:
      name: exam
    exam_cheat:
      name: exam_cheat
    exam_difficulty:
      name: exam_difficulty
    exam_result:
      name: exam_result
    execremovebottom:
      name: execremovebottom
    execremovedress:
      name: execremovedress
    execremoveshoes:
      name: execremoveshoes
    execremovetop:
      name: execremovetop
    execremoveunderbottom:
      name: execremoveunderbottom
    execremoveundertop:
      name: execremoveundertop
    execstriporder:
      name: execstriporder
    execstripperform:
      name: execstripperform
    exhibitionclassroom:
      name: exhibitionclassroom
    exhibitionism:
      name: exhibitionism
    exhibitionism1:
      name: exhibitionism1
    exhibitionism2:
      name: exhibitionism2
    exhibitionism3:
      name: exhibitionism3
    exhibitionism4:
      name: exhibitionism4
    exhibitionism5:
      name: exhibitionism5
    exhibitionism6:
      name: exhibitionism6
      tags: ["unused"]
    exhibitionismbuilding:
      name: exhibitionismbuilding
    exhibitionismgarden:
      name: exhibitionismgarden
    exhibitionismN:
      name: exhibitionismN
    exhibitionismoutputlinecapitalise:
      name: exhibitionismoutputlinecapitalise
    exhibitionismoutputlinecomma:
      name: exhibitionismoutputlinecomma
    exhibitionismoutputlinestop:
      name: exhibitionismoutputlinestop
    exhibitionismroof:
      name: exhibitionismroof
    exhibitionismsetdata:
      name: exhibitionismsetdata
    exhibitionist:
      description: |-
        Prints `Exhibitionism X` with appropriate color for level

        `<<exhibitionist level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["text"]
    exhibitionist1:
      description: |-
        Prints `Exhibitionism 1` with appropriate color for level
      tags: ["text"]
    exhibitionist2:
      description: |-
        Prints `Exhibitionism 2` with appropriate color for level
      tags: ["text"]
    exhibitionist3:
      description: |-
        Prints `Exhibitionism 3` with appropriate color for level
      tags: ["text"]
    exhibitionist4:
      description: |-
        Prints `Exhibitionism 4` with appropriate color for level
      tags: ["text"]
    exhibitionist5:
      description: |-
        Prints `Exhibitionism 5` with appropriate color for level
      tags: ["text"]
    exhibitionist6:
      description: |-
        Prints `!Exhibitionism 6!` with appropriate color for level
      tags: ["unused", "text"]
    exhibitorgasm:
      name: exhibitorgasm
    exit:
      description: |-
        Stops processing of remaining Passage or Widget

        This doesn't propagate through the stack.
        Calling this from inside a Widget will exit the Widget and return to next location from where it was called from

        See `<<exitAll>>`
    exitAll:
      description: |-
        Stops processing of all remaining Widgets and Passages

        This propagates through the stack.
        All Widgets that would have been called after this Widget will be ignored

        The equivalent of calling `<<exit>>` on every Widget and Passage currently being processed
    exitclothingshop:
      name: exitclothingshop
    exitWraith:
      name: exitWraith
    exportsettings:
      name: exportsettings
    exposedcheck:
      name: exposedcheck
    exposedlower:
      description: |-
        Prints outermost unexposed lower layer
      tags: ["text"]
    exposedupper:
      description: |-
        Prints outermost unexposed upper layer
      tags: ["text"]
    exposure:
      description: |-
        Updates player exposure values based on location and state of dress
    extraStatistics:
      name: extraStatistics
    extraStatisticsPregnancyType:
      name: extraStatisticsPregnancyType
    extraStatisticsWarning:
      name: extraStatisticsWarning
    EZbig:
      name: EZbig
    EZdisgusting:
      name: EZdisgusting
    EZpenis:
      name: EZpenis
    EZsmall:
      name: EZsmall
    fa-icon:
      description: |-
        Prints a fa-icon

        `<<fa-icon iconName>>`
        - **iconName**: `string` - fa-icon css classname
      parameters:
        - text
      tags: ["img", "unused"]
    faceejacstat:
      name: faceejacstat
    faceimg:
      name: faceimg
    faceintegrity:
      name: faceintegrity
    faceon:
      name: faceon
      tags: ["unused"]
    faceruined:
      description: |-
        Destroys pc's face slot clothing, whether worn or carried

        `<<faceruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    facesend:
      name: facesend
    FaceShop:
      name: FaceShop
    facesitFlavorText:
      name: facesitFlavorText
    facesteal:
      name: facesteal
      tags: ["unused"]
    facestrip:
      name: facestrip
    faceundress:
      name: faceundress
    facewear:
      name: facewear
    fallenangel:
      description: |-
        Prints `| Fallen Angel`
      tags: ["text"]
    fallenButNotOut:
      name: fallenButNotOut
    fallenDescend:
      name: fallenDescend
    fallenTransform:
      name: fallenTransform
    fame:
      description: |-
        Changes fame values without any checks or safeguards

        `<<fame changeValue ...type >>`
        - **changeValue**: `number` - value to change fame by
        - ...**type**: `string` - type(s) of fame to change
          - %fameTypesDesc%
      parameters:
        - "number &+ %fameTypes% |+ ...%fameTypes%"
      tags: ["unused"]
    famebestiality:
      description: |-
        Changes pc's fame for bestiality

        `<<famebestiality value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famebusiness:
      description: |-
        Changes pc's fame for business

        `<<famebusiness value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    fameclamp:
      name: fameclamp
    famedance:
      description: |-
        Increments pc's fame for dancing based on audience size
    fameexhibitionism:
      description: |-
        Changes pc's fame for exhibitionism

        `<<fameexhibitionism value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famegood:
      description: |-
        Changes pc's fame for being good

        `<<famegood value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    fameimpreg:
      description: |-
        Changes pc's fame for impregnating others (fathering children)

        `<<fameimpreg value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famemodel:
      description: |-
        Changes pc's fame for modelling

        `<<famemodel value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"` | `"art"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid"|"art" |+ bool'
    famepimp:
      description: |-
        Changes pc's fame for being pimped out

        Currently unused

        `<<famepimp value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famepregnancy:
      description: |-
        Changes pc's fame for being pregnant (mothering children)

        `<<famepregnancy value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    fameProse:
      description: |-
        Prints full description of provided fame key

        `<<fameProse type>>`
        - **type**: `string` - type of fame
          - `%fameTypesDesc%`
      parameters:
        - "%fameTypes%"
      tags: ["text"]
    fameprostitution:
      description: |-
        Changes pc's fame for prostitution

        `<<fameprostitution value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famerape:
      description: |-
        Changes pc's fame for being raped

        `<<famerape value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famesalute:
      name: famesalute
    fameschoolex:
      description: |-
        Changes pc's fame for exhibitionism amongst students

        Consider using `<<fameexhibitionsim>>` instead as this behavior is not implemented and lightly deprecated

        `<<fameschoolex value>>`
        - **changeValue**: `number` - value to change fame by
      parameters:
        - "number"
      tags: ["refactor"]
    famescrap:
      description: |-
        Changes pc's fame for fighting

        `<<famescrap value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famesex:
      description: |-
        Changes pc's having sex fame

        `<<famesex value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    famesocial:
      description: |-
        Changes pc's fame for social status

        `<<famesocial value type? forceChange?>>`
        - **changeValue**: `number` - value to change fame by
        - **type** _optional_: `string` - type of event giving fame
          - `"none"` | `"pic"` | `"vid"`
        - **forceChange** _optional_: `bool` - skip checks that would normally prevent this type of fame gain
      parameters:
        - 'number |+ "none"|"pic"|"vid" |+ bool'
    farm_actions:
      name: farm_actions
    farm_aggro:
      name: farm_aggro
    farm_alex:
      name: farm_alex
    farm_assault_actions:
      name: farm_assault_actions
    farm_assault_alex:
      name: farm_assault_alex
    farm_assault_attack_options:
      name: farm_assault_attack_options
    farm_assault_end:
      name: farm_assault_end
    farm_assault_flight:
      name: farm_assault_flight
    farm_assault_info:
      name: farm_assault_info
    farm_assault_init:
      name: farm_assault_init
    farm_assault_intro:
      name: farm_assault_intro
    farm_assault_intruders:
      name: farm_assault_intruders
    farm_assault_location:
      name: farm_assault_location
    farm_assault_no:
      name: farm_assault_no
    farm_assault_options:
      name: farm_assault_options
    farm_assault_progress:
      name: farm_assault_progress
    farm_assault_thugs:
      name: farm_assault_thugs
    farm_assault_unbind:
      name: farm_assault_unbind
    farm_attack_auto:
      name: farm_attack_auto
    farm_brush:
      name: farm_brush
    farm_build_day:
      name: farm_build_day
    farm_cattle:
      name: farm_cattle
    farm_cottage_options:
      name: farm_cottage_options
    farm_cottage_tv_options:
      name: farm_cottage_tv_options
    farm_count:
      name: farm_count
    farm_damage_report:
      name: farm_damage_report
    farm_dogs:
      name: farm_dogs
    farm_fence:
      name: farm_fence
    farm_fence_damage:
      name: farm_fence_damage
    farm_fight_alex:
      name: farm_fight_alex
    farm_fight_door:
      name: farm_fight_door
    farm_fight_end:
      name: farm_fight_end
      tags: ["unused"]
    farm_fight_init:
      name: farm_fight_init
    farm_fight_options:
      name: farm_fight_options
    farm_forest_event:
      name: farm_forest_event
    farm_gen:
      name: farm_gen
    farm_gen_all:
      name: farm_gen_all
    farm_guard_paid:
      name: farm_guard_paid
    farm_guard_pay:
      name: farm_guard_pay
    farm_guard_wage:
      name: farm_guard_wage
    farm_he:
      description: |-
        Prints singular pronoun (he/she) for beast on farm, modified by hallucinations

        `<<farm_he type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_He:
      description: |-
        Prints capitalised singular pronoun (He/She) for beast on farm, modified by hallucinations

        `<<farm_He type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_him:
      description: |-
        Prints objective singular pronoun (him/her) for beast on farm, modified by hallucinations

        `<<farm_him type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_his:
      description: |-
        Prints possessive pronoun (his/her) for beast on farm, modified by hallucinations

        `<<farm_his type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_His:
      description: |-
        Prints capitalised possessive pronoun (His/Her) for beast on farm, modified by hallucinations

        `<<farm_His type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_horses:
      name: farm_horses
    farm_init:
      name: farm_init
    farm_knotted:
      name: farm_knotted
    farm_milk_actions:
      name: farm_milk_actions
    farm_milk_check:
      name: farm_milk_check
    farm_pigs:
      name: farm_pigs
    farm_relax_chat:
      name: farm_relax_chat
    farm_relax_end:
      name: farm_relax_end
    farm_ride_events:
      name: farm_ride_events
    farm_sleep_options:
      name: farm_sleep_options
    farm_status:
      name: farm_status
    farm_stock:
      name: farm_stock
    farm_stock_init:
      name: farm_stock_init
    farm_tell_alex:
      name: farm_tell_alex
    farm_tending_alex_events:
      name: farm_tending_alex_events
    farm_tending_events:
      name: farm_tending_events
    farm_text:
      description: |-
        Prints singular type of beast on farm, modified by hallucinations

        `<<farm_text type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_text_many:
      description: |-
        Prints plural type of beasts on farm, modified by hallucinations

        `<<farm_text type>>`
        - **type**: `string` - type of `$farmwork` being performed
          - `"dog"` | `"pig"` | `"horse"` | `"cattle"`
      parameters:
        - '"dog"|"pig"|"horse"|"cattle"'
      tags: ["text"]
    farm_trust:
      name: farm_trust
    farm_update:
      name: farm_update
    farm_upgrades_current:
      name: farm_upgrades_current
    farm_upgrades_status:
      name: farm_upgrades_status
    farm_var_set:
      description: |-
        Resets farm vars if appropriate
    farm_work:
      name: farm_work
    farm_work_time:
      name: farm_work_time
    farm_work_update:
      name: farm_work_update
    farm_yield:
      description: |-
        Adds tier to daily farm_yield gain

        `$farm_yield` is the daily buildup of extra farm productivity where 0 is none (0+)

        `$farm_yield_alex` is the total built-up extra farm productivity Alex will award pc as money where 0 is none (0+)

        `<<farm_yield change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    farmCatchChance:
      name: farmCatchChance
    farmStage4:
      name: farmStage4
    farmStage5:
      name: farmStage5
    farmStage6:
      name: farmStage6
    farmVisitor:
      name: farmVisitor
    father:
      name: father
    Father:
      name: Father
    featExplanation:
      name: featExplanation
    featName:
      name: featName
    feats:
      name: feats
    featSettings:
      name: featSettings
    featsList:
      name: featsList
    featsMenu:
      name: featsMenu
    featsMerge:
      name: featsMerge
    featsMergePre:
      name: featsMergePre
    featsPointsMenu:
      name: featsPointsMenu
    featsPointsMenuButtons:
      name: featsPointsMenuButtons
    featsPointsMenuReset:
      name: featsPointsMenuReset
    featsTattooOptions:
      name: featsTattooOptions
    feedLurker:
      description: |-
        Feeds a lurker to GH

        See `<<eatLurker>>` for pc
    feet_confront:
      name: feet_confront
    feet_hide:
      name: feet_hide
    feet_hobble:
      name: feet_hobble
    feet_run:
      name: feet_run
    feet_stand:
      name: feet_stand
    feet_strut:
      name: feet_strut
    feet_walk:
      name: feet_walk
    feetactionDifficulty:
      name: feetactionDifficulty
    feetactionDifficultyMachine:
      name: feetactionDifficultyMachine
      tags: ["unused"]
    feetactionDifficultySelf:
      name: feetactionDifficultySelf
      tags: ["unused"]
    feetactionDifficultyStruggle:
      name: feetactionDifficultyStruggle
      tags: ["unused"]
    feetactionDifficultySwarm:
      name: feetactionDifficultySwarm
      tags: ["unused"]
    feetactionDifficultyTentacle:
      name: feetactionDifficultyTentacle
    feetActionInit:
      name: feetActionInit
    feetActionInitMachine:
      name: feetActionInitMachine
    feetActionInitSelf:
      name: feetActionInitSelf
    feetActionInitStruggle:
      name: feetActionInitStruggle
    feetActionInitSwarm:
      name: feetActionInitSwarm
    feetActionInitTentacle:
      name: feetActionInitTentacle
    feetActions:
      name: feetActions
    feetactionSetupTentacle:
      name: feetactionSetupTentacle
    feetActionsMachine:
      name: feetActionsMachine
    feetActionsSelf:
      name: feetActionsSelf
    feetActionsStruggle:
      name: feetActionsStruggle
    feetActionsSwarm:
      name: feetActionsSwarm
    feetActionsTentacle:
      name: feetActionsTentacle
    feetdifficulty:
      description: |-
        Prints color-coded adjective of feet action difficulty in current combat
      tags: ["text"]
    feetejacstat:
      name: feetejacstat
    feetgrabnew:
      name: feetgrabnew
    feetGrabRub:
      name: feetGrabRub
    feetit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"feet"` slot
      tags: ["text"]
    feetKick:
      name: feetKick
    feeton:
      name: feeton
      tags: ["unused"]
    feetOthervagina:
      name: feetOthervagina
    feetruined:
      description: |-
        Destroys pc's feet slot clothing, whether worn or carried

        `<<feetruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    feetRunClothed:
      name: feetRunClothed
      tags: ["unused"]
    feetsend:
      name: feetsend
      tags: ["unused"]
    feetshoes:
      name: feetshoes
    FeetShop:
      name: FeetShop
    feetskill:
      description: |-
        Adds feet skill to pc's state

        `$feetskill` is a measure of pc's proficiency using their feet where 0 is awkward (0-1,000)

        `<<feetskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    feetskilluse:
      name: feetskilluse
    feetsocks:
      name: feetsocks
    feetstat:
      name: feetstat
    feetsteal:
      name: feetsteal
    feetstrip:
      name: feetstrip
    feettentacledisable:
      name: feettentacledisable
    feettext:
      description: |-
        Prints color-coded adjective of active feet skill usage
      tags: ["text"]
    feetthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"feet"` slot
      tags: ["unused", "text"]
    feetundress:
      name: feetundress
    feetwear:
      name: feetwear
    fertilisefromgroup:
      name: fertilisefromgroup
      tags: ["unused"]
    fertiliseParasites:
      name: fertiliseParasites
    fertilityCycles:
      name: fertilityCycles
    fetishPregnancyImg:
      name: fetishPregnancyImg
    fetishSettings:
      name: fetishSettings
    fields_init:
      name: fields_init
    filterreveal:
      name: filterreveal
    firepitActions:
      name: firepitActions
    firepitTime:
      name: firepitTime
    flashbackbeach:
      name: flashbackbeach
    flashbackhome:
      name: flashbackhome
    flashbackschool:
      name: flashbackschool
    flashbacktown:
      name: flashbacktown
    flashbackunderground:
      name: flashbackunderground
    flashcrotchunderskirt:
      name: flashcrotchunderskirt
    flats_alarm_end:
      name: flats_alarm_end
    flats_alarm_links:
      name: flats_alarm_links
    flats_alarm_time:
      name: flats_alarm_time
    flats_auction_end:
      name: flats_auction_end
    flats_canal:
      name: flats_canal
    flats_canal_defeat:
      name: flats_canal_defeat
    flats_canal_run:
      name: flats_canal_run
    flats_vents_end:
      name: flats_vents_end
      tags: ["unused"]
    flats_vents_init:
      name: flats_vents_init
      tags: ["unused"]
    flats_vents_links:
      name: flats_vents_links
      tags: ["unused"]
    flaunting:
      description: |-
        Prints player opinion of their state based on trauma, stress, and arousal

        Description is without subject and capitalised

        Example:
        ```
        <<flaunting>> you make an example of yourself.
        ```
      tags: ["text"]
    flight_distance_check:
      name: flight_time_check
    flight_effects:
      name: flight_effects
    flight_hunt_chance:
      name: flight_hunt_chance
    flight_hunt_end:
      name: flight_hunt_end
    flight_hunt_get:
      name: flight_hunt_get
    flight_hunt_get_ambush:
      name: flight_hunt_get_ambush
    flight_hunt_get_random:
      name: flight_hunt_get_random
    flight_hunt_loot:
      name: flight_hunt_loot
    flight_hunt_options:
      name: flight_hunt_options
    flight_hunt_remove:
      name: flight_hunt_remove
    flight_hunt_return:
      name: flight_hunt_return
    flight_text:
      description: |-
        Prints `| Wings` or `| Strong wings` depending on pc's wing strength
      tags: ["text"]
    flight_time_check:
      description: |-
        Sets the amount of time the player can fly with the harpy transformation, modified by weather and the player's Athletics skill. Optionally prints a line of text describing how the modifiers are affecting flight time

        `<<flight_time_check returnTime silent?>>`
        - **returnTime**: `number`
        - **silent** _optional_: `string` - does not print modifier description
      parameters:
        - '|+ number |+ "silent"'
      tags: ["text"]
    foldout:
      container: true
      name: foldout
    forestBullyLeaves:
      name: forestBullyLeaves
    forestCabinReturnLinks:
      name: forestCabinReturnLinks
    forestdeeper:
      name: forestdeeper
    foresthunt:
      name: foresthunt
    forestlessdeep:
      name: forestlessdeep
    forestmove:
      name: forestmove
    forestRescueFail:
      name: forestRescueFail
    forestRescueSetup:
      name: forestRescueSetup
    forestsearch:
      name: forestsearch
    forestShop-intro:
      name: forestShop-intro
    forestShop-leave:
      name: forestShop-leave
    forestShop-main:
      name: forestShop-main
    forestShop-text:
      name: forestShop-text
    forestspider:
      name: forestspider
      tags: ["unused"]
    formatList:
      name: formatList
      tags: ["unused"]
    formatmoney:
      description: |-
        Converts amount in pennies to formatted string of currency

        Sets `_printmoney` as output

        `<<formatmoney amountInPennies>>`
        - **amountInPennies**: `number` - amount in pennies, positive or negative
      parameters:
        - "number"
      tags: ["temp"]
    fox:
      description: |-
        Prints `| Foxboy` or `| Vixen` depending on pc's appearance
      tags: ["text"]
    fox_gen:
      name: fox_gen
    fox_text:
      name: fox_text
    foxnickname:
      name: foxnickname
    foxTransform:
      name: foxTransform
    friend:
      description: |-
        Prints Robin's maximum friendship status with the pc (girlfriend/best friend/friend)

        `<<friend modifier?>>`
        - **modifier** _optional_: `string` - allowed alternative
          - `"bff"`: Robin can call pc their best friend
      parameters:
        - '|+ "bff"'
      tags: ["text"]
    fringecheck:
      name: fringecheck
      tags: ["unused"]
    fringedescription:
      name: fringedescription
      tags: ["unused"]
    fullGroup:
      description: |-
        Prints gender makeup of currently active npcs as a list (ie, `Robin, man, and woman`)

        See `<<enumeratedGroup>>` for numbers as well or `<<group>>` for a summary

        `<<fullGroup formatting?>>`
        - **formatting** _optional_: `string` - formatting to apply
          - `"cap"`: capitalise output
      parameters:
        - '|+ "cap"'
      tags: ["text"]
    furnitureCatalogue:
      name: furnitureCatalogue
    furnitureDowngrade:
      name: furnitureDowngrade
    furnitureLinks:
      name: furnitureLinks
    furnitureList:
      name: furnitureList
    furnitureUpdate:
      name: furnitureUpdate
    furnitureWarning:
      description: |-
        Prints `| This will replace your X`

        `<<furnitureWarning type>>`
        - **type**: `string` - type of furniture being replaced
          - `"decoration"` | `"windowsill"` | `"wallpaper"` | `"poster"`
      parameters:
        - '"decoration"|"windowsill"|"wallpaper"|"poster"'
      tags: ["unused", "text"]
    gacceptance:
      description: |-
        Prints `| + Acceptance`
      tags: ["text"]
    gadeviancy:
      description: |-
        Prints `| + Alex's Deviancy`
      tags: ["unused", "text"]
    gagged_speech:
      name: gagged_speech
    gaggro:
      description: |-
        Prints `| + Remy's Encroachment`
      tags: ["text"]
    galcohol:
      description: |-
        Prints `| + Alcohol`
      tags: ["text"]
    gallerySettings:
      name: gallerySettings
    gameMode:
      name: gameMode
    gameSettings:
      name: gameSettings
    gameStartOnly:
      name: gameStartOnly
    ganalskill:
      description: |-
        Prints `| Anal skill`
      tags: ["text"]
    ganginit:
      name: ganginit
    gapproval:
      name: gapproval
      tags: ["text"]
    garage:
      description: |-
        Prints `| + Rage`
      tags: ["text"]
    garousal:
      description: |-
        Prints `| + Arousal`
      tags: ["text"]
    gaspair:
      name: gaspair
    gathletics:
      description: |-
        Prints `| + Athletics`
      tags: ["text"]
    gattention:
      description: |-
        Prints `| + Attention` if more prison attention can be gained today

        `<<gattention type>>`
        - **type**: `string` - type of attention to check if should be visible
          - `"prison"`
      parameters:
        - '|+ "prison"'
      tags: ["text"]
    gawareness:
      description: |-
        Prints `| + Awareness` or `| - Innocence`
      tags: ["text"]
    gbaton:
      description: |-
        Prints `| + Baton proficiency`
      tags: ["text"]
    gbeauty:
      description: |-
        Prints `| + Beauty`
      tags: ["unused", "text"]
    gbirdstockholm:
      description: |-
        Prints `| + + Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    gbodywriting:
      description: |-
        Prints `| + Bodywriting`
      tags: ["text"]
    gbottomskill:
      description: |-
        Prints `| + Ass skill`
      tags: ["text"]
    gcamp_concealment:
      name: gcamp_concealment
      tags: ["unused", "text"]
    gchaos:
      description: |-
        Prints `| + Chaos`
      tags: ["text"]
    gchestskill:
      description: |-
        Prints `| + Chest skill`
      tags: ["text"]
    gcombatcontrol:
      description: |-
        Prints `| + Control`
      tags: ["text"]
    gcomprehension:
      description: |-
        Prints `| + Comprehension`
      tags: ["text"]
    gcondoms:
      description: |-
        Gives player and Prints `| + X Condoms`

        `<<gcondoms numberGained?>>`
        - **numberGained** _optional_: `number` - number of condoms to give player
          - Defaults to 1
      parameters:
        - "|+ number"
      tags: ["text"]
    gcontrol:
      description: |-
        Prints `| + Control`
      tags: ["text"]
    gcool:
      description: |-
        Prints `| + Status`
      tags: ["text"]
    gcorruption:
      description: |-
        Prints `| + Corruption`
      tags: ["text"]
    gcrime:
      description: |-
        Prints `| + Crime X` where X is type of crime

        `<<gcrime type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "|+ %crimeTypes%"
      tags: ["text"]
    gdanceskill:
      description: |-
        Prints `| + Dance skill`
      tags: ["text"]
    gdaring:
      description: |-
        Prints `| + Daring`
      tags: ["text"]
    gdef:
      description: |-
        Prints `| + Defiance`
      tags: ["unused", "text"]
    gdelinquency:
      description: |-
        Prints `| + Delinquency`
      tags: ["text"]
    gdom:
      description: |-
        Prints `| + Dominance` or `| + NPCName's Dominance` if provided

        `<<gdom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    gdrugged:
      description: |-
        Prints `| + Drugged`
      tags: ["text"]
    gencolourpicker:
      name: gencolourpicker
    gencolourselector:
      name: gencolourselector
    gencoloursquares:
      name: gencoloursquares
    gendear:
      description: |-
        Prints `| + Endearment`
      tags: ["text"]
    gender:
      name: gender
    gender_posture:
      name: gender_posture
    gendercheck:
      description: |-
        Prints error if pc's gender appearance is not `m` or `f`
      tags: ["text"]
    genderswap:
      name: genderswap
    genderswapPlayer:
      name: genderswapPlayer
      tags: ["unused"]
    generalOn:
      name: generalOn
    generalRuined:
      description: |-
        Destroy and delete clothing in specified slot

        Relies on `_noRebuy` already being set to determine whether to call `<<generalRuinedRebuy>>`

        `<<generalRuined slot ruinAll?>>`
        - **slot**: `string` - clothing slot to target
          - %clothesTypesDesc%
        - **ruinAll** _optional_: `bool` - ruin all other parts when provided an outfit (truthy)
          - defaults to `false`
      parameters:
        - "%clothesTypes% |+ bool|text|number"
      tags: ["temp"]
    generalRuinedRebuy:
      description: |-
        Rebuys provided clothing item

        This should be called in the middle of `<<generalRuined>>` before the item has been completely destroyed as it relies on the item still existing

        Part of the larger [Example API hyperlink]

        `<<generalRuinedRebuy slot structure>>`
        - **slot**: `string` - clothing slot to target
          - %clothesTypesDesc%
        - **structure**: `object` - state structure where clothing item is currently located
          - `$worn` | `$carried`
      parameters:
        - "%clothesTypes% &+ var|bareword"
    generalSend:
      name: generalSend
    generalSteal:
      name: generalSteal
    generalStoreon:
      name: generalStoreon
    generalStrip:
      name: generalStrip
    generalUndress:
      name: generalUndress
    generalWear:
      description: |-
        Applies clothing item to pc's slot

        Does nothing if blocked by cursed items

        `<<generalWear slot itemIndex colour? accessoryColour?>>`
        - **slot**: `string` - slot to put clothing on
          - %clothesTypesDesc%
        - **itemIndex**: `number` - index of clothing item from setup to copy from
        - **colour** _optional_: `string` - primary colour
          - `"custom"`: pulls values from `$customColors` object
          - `text`: valid colour in any format
        - **accessoryColour** _optional_: `object` - secondary colour
          - `"custom"`: pulls values from `$customColors` object
          - `text`: valid colour in any format
      parameters:
        - '%clothesTypes% &+ number |+ "custom"|text |+ "custom"|text'
    generalWearFromWardrobe:
      name: generalWearFromWardrobe
    generate_anxious_guard:
      name: generate_anxious_guard
    generate_beast_traits:
      name: generate_beast_traits
    generate_methodical_guard:
      name: generate_methodical_guard
    generate_npc_skills:
      name: generate_npc_skills
    generate_npc_traits:
      name: generate_npc_traits
    generate_relaxed_guard:
      name: generate_relaxed_guard
    generate_scarred_inmate:
      name: generate_scarred_inmate
    generate_struggle_creature:
      name: generate_struggle_creature
    generate_tattooed_inmate:
      name: generate_tattooed_inmate
    generate_veteran_guard:
      name: generate_veteran_guard
    generate1:
      name: generate1
    generate2:
      name: generate2
    generate3:
      name: generate3
    generate4:
      name: generate4
    generate5:
      name: generate5
    generate6:
      name: generate6
    generateActionsAbomination:
      name: generateActionsAbomination
    generateActionsMachine:
      name: generateActionsMachine
    generateActionsMan:
      name: generateActionsMan
    generateActionsOmni:
      name: generateActionsOmni
    generateActionsStruggle:
      name: generateActionsStruggle
    generateActionsSwarm:
      name: generateActionsSwarm
    generateActionsTentacle:
      name: generateActionsTentacle
    generateActionsVore:
      name: generateActionsVore
    generateActionsVorentacles:
      name: generateActionsVorentacles
    generateAdultShopCustomer:
      name: generateAdultShopCustomer
    generatebear1:
      name: generatebear1
      tags: ["unused"]
    generatebear2:
      name: generatebear2
      tags: ["unused"]
    generatebear3:
      name: generatebear3
      tags: ["unused"]
    generatebear4:
      name: generatebear4
      tags: ["unused"]
    generatebear5:
      name: generatebear5
      tags: ["unused"]
    generatebear6:
      name: generatebear6
      tags: ["unused"]
    generateBEAST:
      name: generateBEAST
    generateboar1:
      name: generateboar1
      tags: ["unused"]
    generateboar2:
      name: generateboar2
      tags: ["unused"]
    generateboar3:
      name: generateboar3
      tags: ["unused"]
    generateboar4:
      name: generateboar4
      tags: ["unused"]
    generateboar5:
      name: generateboar5
      tags: ["unused"]
    generateboar6:
      name: generateboar6
      tags: ["unused"]
    generatec1:
      name: generatec1
    generatec2:
      name: generatec2
    generatec3:
      name: generatec3
    generatec4:
      name: generatec4
      tags: ["unused"]
    generatec5:
      name: generatec5
      tags: ["unused"]
    generatec6:
      name: generatec6
      tags: ["unused"]
    generatecat1:
      name: generatecat1
      tags: ["unused"]
    generatecat2:
      name: generatecat2
      tags: ["unused"]
    generatecat3:
      name: generatecat3
      tags: ["unused"]
    generatecat4:
      name: generatecat4
      tags: ["unused"]
    generatecat5:
      name: generatecat5
      tags: ["unused"]
    generatecat6:
      name: generatecat6
      tags: ["unused"]
    generatecf1:
      name: generatecf1
      tags: ["unused"]
    generatecf2:
      name: generatecf2
      tags: ["unused"]
    generatecf3:
      name: generatecf3
      tags: ["unused"]
    generatecf4:
      name: generatecf4
      tags: ["unused"]
    generatecf5:
      name: generatecf5
      tags: ["unused"]
    generatecf6:
      name: generatecf6
      tags: ["unused"]
    generatecm1:
      name: generatecm1
      tags: ["unused"]
    generatecm2:
      name: generatecm2
      tags: ["unused"]
    generatecm3:
      name: generatecm3
      tags: ["unused"]
    generatecm4:
      name: generatecm4
      tags: ["unused"]
    generatecm5:
      name: generatecm5
      tags: ["unused"]
    generatecm6:
      name: generatecm6
      tags: ["unused"]
    generateCombatAction:
      name: generateCombatAction
    generateCombatActionList:
      name: generateCombatActionList
    generateCombatActionOthers:
      name: generateCombatActionOthers
    generateCombatActionOthersList:
      name: generateCombatActionOthersList
    generateCombatActionOthersRadio:
      name: generateCombatActionOthersRadio
    generateCombatActionRadio:
      name: generateCombatActionRadio
    generateCombatActionTentacle:
      name: generateCombatActionTentacle
    generateCombatActionTentacleList:
      name: generateCombatActionTentacleList
    generateCombatActionTentacleRadio:
      name: generateCombatActionTentacleRadio
    generateConfessor:
      name: generateConfessor
    generatecreature1:
      name: generatecreature1
      tags: ["unused"]
    generatecreature2:
      name: generatecreature2
      tags: ["unused"]
    generatecreature3:
      name: generatecreature3
      tags: ["unused"]
    generatecreature4:
      name: generatecreature4
      tags: ["unused"]
    generatecreature5:
      name: generatecreature5
      tags: ["unused"]
    generatecreature6:
      name: generatecreature6
      tags: ["unused"]
    generateCultist:
      name: generateCultist
    generateDemon:
      name: generateDemon
    generateDoctor:
      name: generateDoctor
    generatedog1:
      name: generatedog1
      tags: ["unused"]
    generatedog2:
      name: generatedog2
      tags: ["unused"]
    generatedog3:
      name: generatedog3
      tags: ["unused"]
    generatedog4:
      name: generatedog4
      tags: ["unused"]
    generatedog5:
      name: generatedog5
      tags: ["unused"]
    generatedog6:
      name: generatedog6
      tags: ["unused"]
    generatedolphin1:
      name: generatedolphin1
      tags: ["unused"]
    generatedolphin2:
      name: generatedolphin2
      tags: ["unused"]
    generatedolphin3:
      name: generatedolphin3
      tags: ["unused"]
    generatedolphin4:
      name: generatedolphin4
      tags: ["unused"]
    generatedolphin5:
      name: generatedolphin5
      tags: ["unused"]
    generatedolphin6:
      name: generatedolphin6
      tags: ["unused"]
    generatef1:
      name: generatef1
    generatef2:
      name: generatef2
    generatef3:
      name: generatef3
    generatef4:
      name: generatef4
    generatef5:
      name: generatef5
    generatef6:
      name: generatef6
    generatefox1:
      name: generatefox1
      tags: ["unused"]
    generatefox2:
      name: generatefox2
      tags: ["unused"]
    generatefox3:
      name: generatefox3
      tags: ["unused"]
    generatefox4:
      name: generatefox4
      tags: ["unused"]
    generatefox5:
      name: generatefox5
      tags: ["unused"]
    generatefox6:
      name: generatefox6
      tags: ["unused"]
    generateFurnitureShopStock:
      name: generateFurnitureShopStock
    generatel:
      name: generatel
    generatelizard1:
      name: generatelizard1
      tags: ["unused"]
    generatelizard2:
      name: generatelizard2
      tags: ["unused"]
    generatelizard3:
      name: generatelizard3
      tags: ["unused"]
    generatelizard4:
      name: generatelizard4
      tags: ["unused"]
    generatelizard5:
      name: generatelizard5
      tags: ["unused"]
    generatelizard6:
      name: generatelizard6
      tags: ["unused"]
    generatem1:
      name: generatem1
    generatem2:
      name: generatem2
    generatem3:
      name: generatem3
    generatem4:
      name: generatem4
    generatem5:
      name: generatem5
    generatem6:
      name: generatem6
    generateManager:
      name: generateManager
    generateMickey:
      name: generateMickey
    generateNewStrapon:
      name: generateNewStrapon
    generateNPC:
      name: generateNPC
    generateNPCClothes:
      name: generateNPCClothes
    generateNPCNameHairAndEyeColors:
      description: |-
        Applies canonical hair and eye colour to all unset named NPCs

        If not present, generates random values
    generateNPCvirginity:
      name: generateNPCvirginity
    generatep2:
      name: generatep2
    generatep3:
      name: generatep3
    generatep4:
      name: generatep4
      tags: ["unused"]
    generatep5:
      name: generatep5
      tags: ["unused"]
    generatep6:
      name: generatep6
      tags: ["unused"]
    generatepenisremark:
      name: generatepenisremark
    generatepig1:
      name: generatepig1
      tags: ["unused"]
    generatepig2:
      name: generatepig2
      tags: ["unused"]
    generatepig3:
      name: generatepig3
      tags: ["unused"]
    generatepig4:
      name: generatepig4
      tags: ["unused"]
    generatepig5:
      name: generatepig5
      tags: ["unused"]
    generatepig6:
      name: generatepig6
      tags: ["unused"]
    generatePlant:
      name: generatePlant
      tags: ["unused"]
    generatePlant1:
      name: generatePlant1
    generatePlant2:
      name: generatePlant2
      tags: ["unused"]
    generatePlant3:
      name: generatePlant3
      tags: ["unused"]
    generatePlant4:
      name: generatePlant4
      tags: ["unused"]
    generatePlant5:
      name: generatePlant5
      tags: ["unused"]
    generatePlant6:
      name: generatePlant6
      tags: ["unused"]
    generatePolice:
      name: generatePolice
    generatePronouns:
      description: |-
        Fills NPC object's `pronouns` property based on `pronoun` property

        `<<generatePronouns npcObject>>`
        - **npcObject**: `object` - NPC to fill
        - `pronoun` property can be:
          - `"m"` : he/him...
          - `"f"` : she/her...
          - `"i"` : it/it...
          - `"n"` : one/them...
          - `"t"` : they/them...
      parameters:
        - "var"
    generateRole:
      name: generateRole
    generates1:
      name: generates1
    generates2:
      name: generates2
    generates3:
      name: generates3
    generates4:
      name: generates4
    generates5:
      name: generates5
    generates6:
      name: generates6
    generateSailor:
      name: generateSailor
    generateSecurity:
      name: generateSecurity
    generatesf1:
      name: generatesf1
    generatesf2:
      name: generatesf2
    generatesf3:
      name: generatesf3
    generatesf4:
      name: generatesf4
    generatesf5:
      name: generatesf5
    generatesf6:
      name: generatesf6
    generateshoppage:
      name: generateshoppage
    generateSleepLinks:
      name: generateSleepLinks
    generatesm1:
      name: generatesm1
    generatesm2:
      name: generatesm2
    generatesm3:
      name: generatesm3
    generatesm4:
      name: generatesm4
    generatesm5:
      name: generatesm5
    generatesm6:
      name: generatesm6
    generatespider1:
      name: generatespider1
      tags: ["unused"]
    generatespider2:
      name: generatespider2
      tags: ["unused"]
    generatespider3:
      name: generatespider3
      tags: ["unused"]
    generatespider4:
      name: generatespider4
      tags: ["unused"]
    generatespider5:
      name: generatespider5
      tags: ["unused"]
    generatespider6:
      name: generatespider6
      tags: ["unused"]
    generateSweaterWearer:
      name: generateSweaterWearer
    generateTemple:
      name: generateTemple
    generateTipsList:
      name: generateTipsList
    generatev1:
      name: generatev1
    generatev2:
      name: generatev2
    generatev3:
      name: generatev3
    generatev4:
      name: generatev4
    generatev5:
      name: generatev5
      tags: ["unused"]
    generatev6:
      name: generatev6
      tags: ["unused"]
    generatewolf1:
      name: generatewolf1
      tags: ["unused"]
    generatewolf2:
      name: generatewolf2
      tags: ["unused"]
    generatewolf3:
      name: generatewolf3
      tags: ["unused"]
    generatewolf4:
      name: generatewolf4
      tags: ["unused"]
    generatewolf5:
      name: generatewolf5
      tags: ["unused"]
    generatewolf6:
      name: generatewolf6
      tags: ["unused"]
    generateWraith:
      name: generateWraith
    generatey1:
      name: generatey1
    generatey2:
      name: generatey2
    generatey3:
      name: generatey3
    generatey4:
      name: generatey4
    generatey5:
      name: generatey5
    generatey6:
      name: generatey6
    generateyf1:
      name: generateyf1
    generateyf2:
      name: generateyf2
    generateyf3:
      name: generateyf3
    generateyf4:
      name: generateyf4
    generateyf5:
      name: generateyf5
    generateyf6:
      name: generateyf6
    generateym1:
      name: generateym1
    generateym2:
      name: generateym2
    generateym3:
      name: generateym3
    generateym4:
      name: generateym4
    generateym5:
      name: generateym5
    generateym6:
      name: generateym6
    generateyp2:
      name: generateyp2
    generateyp3:
      name: generateyp3
    generateyp4:
      name: generateyp4
      tags: ["unused"]
    generateyp5:
      name: generateyp5
      tags: ["unused"]
    generateyp6:
      name: generateyp6
      tags: ["unused"]
    generateyTemple:
      name: generateyTemple
    generateyv1:
      name: generateyv1
    generateyv2:
      name: generateyv2
    generateyv3:
      name: generateyv3
    generateyv4:
      name: generateyv4
    generateyv5:
      name: generateyv5
    generateyv6:
      name: generateyv6
    genericCondomEjaculation:
      name: genericCondomEjaculation
    genericGenders:
      name: genericGenders
    genglish:
      description: |-
        Prints `| + English`
      tags: ["text"]
    genital_sensitivity:
      description: |-
        Changes sensitivity of genitals by provided amount

        `<<genital_sensitivity amount>>`
        - **amount**: `number` - change to sensitivity
      parameters:
        - "number"
    genitalarousal:
      deprecatedSuggestions:
        - <<arousal X "genitals">>
      description: |-
        Adds genitals-focused arousal to pc with appropriate modifiers

        `<<genitalarousal change>>`
        - **change**: `number` - +/- change to apply
      tags: ["unused"]
    genitals:
      name: genitals
    genitals_are:
      name: genitals_are
    genitalsandbreasts:
      name: genitalsandbreasts
    genitalsensitivity:
      name: genitalsensitivity
    GenitalShop:
      name: GenitalShop
      tags: ["unused"]
    genitalsimg:
      name: genitalsimg
    genitalsintegrity:
      name: genitalsintegrity
      tags: ["unused"]
    genitalsplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"genitals"` slot
      tags: ["unused"]
    genitalsruined:
      description: |-
        Destroys pc's genitals slot clothing, whether worn or carried

        `<<genitalsruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    genitalssend:
      name: genitalssend
      tags: ["unused"]
    genitalstate:
      name: genitalstate
    genitalsthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"genitals"` slot
      tags: ["unused", "text"]
    genitalsundress:
      name: genitalsundress
      tags: ["unused"]
    genitalswear:
      name: genitalswear
    genitalsword:
      description: |-
        Prints an indefinite article (a/an) if needed for worn genitals
      tags: ["unused", "text"]
    gentleman:
      description: |-
        Prints `man` or `lady` depending on pc's appearance

        See `<<lady>>`
      tags: ["text"]
    get_pillory_npc:
      name: get_pillory_npc
    getadultshopstate:
      name: getadultshopstate
    getCChildBirthDate:
      name: getCChildBirthDate
      tags: ["unused"]
    getCChildConceptionDate:
      name: getCChildConceptionDate
      tags: ["unused"]
    getCChildId:
      name: getCChildId
      tags: ["unused"]
    getChildrenIds:
      name: getChildrenIds
    getCNPCEventTimer:
      name: getCNPCEventTimer
      tags: ["unused"]
    getCNPCPregnancyAvoidance:
      name: getCNPCPregnancyAvoidance
      tags: ["unused"]
    getCNPCPregnancyTimer:
      name: getCNPCPregnancyTimer
      tags: ["unused"]
    getCombatDefaultsType:
      name: getCombatDefaultsType
    getCombatDefaultsTypeClear:
      name: getCombatDefaultsTypeClear
    getDoubleTargetList:
      name: getDoubleTargetList
    getDressedList:
      description: Provides a list of the clothes the player is currently carrying in link form, so they can choose specific articles of clothing to put back on.
    getfluidsfromgroup:
      name: getfluidsfromgroup
    getNNPCClothes:
      name: getNNPCClothes
    getPussyTargetList:
      name: getPussyTargetList
      tags: ["unused"]
    getSameBirthChildrenIds:
      name: getSameBirthChildrenIds
    getTarget:
      name: getTarget
    getTargetList:
      name: getTargetList
    getTentacleColour:
      name: getTentacleColour
    getUsedChildrenNames:
      name: getUsedChildrenNames
      tags: ["unused"]
    gfabric:
      description: |-
        Prints `| + Fabric`
      tags: ["text"]
    gfarm:
      description: |-
        Prints `| + Farm yield`
      tags: ["text"]
    gfeetskill:
      description: |-
        Prints `| + Feet skill`
      tags: ["text"]
    gferocity:
      description: |-
        Adds 1 to wolfpack's ferocity and prints `| + Ferocity`

        `$wolfpackferocity` is a measure of how fearce the wolfpack is where 0 is not at all (0-20)

        See `<<lferocity>>`
      tags: ["text"]
    ggadeviancy:
      description: |-
        Prints `| + + Alex's Deviancy`
      tags: ["unused", "text"]
    ggaggro:
      description: |-
        Prints `| + + Remy's Encroachment`
      tags: ["text"]
    ggalcohol:
      description: |-
        Prints `| + + Alcohol`
      tags: ["text"]
    ggapproval:
      name: ggapproval
      tags: ["text"]
    ggarage:
      description: |-
        Prints `| + + Rage`
      tags: ["text"]
    ggarousal:
      description: |-
        Prints `| + + Arousal`
      tags: ["text"]
    ggathletics:
      description: |-
        Prints `| + + Athletics`
      tags: ["text"]
    ggattention:
      description: |-
        Prints `| + + Attention` if more prison attention can be gained today

        `<<ggattention type>>`
        - **type**: `string` - type of attention to check if should be visible
          - `"prison"`
      parameters:
        - '|+ "prison"'
      tags: ["text"]
    ggawareness:
      description: |-
        Prints `| + + Awareness` or `| - - Innocence`
      tags: ["text"]
    ggbaton:
      description: |-
        Prints `| + + Baton proficiency`
      tags: ["unused", "text"]
    ggbeauty:
      description: |-
        Prints `| + + Beauty`
      tags: ["unused", "text"]
    ggbirdstockholm:
      description: |-
        Prints `| + + Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    ggbodywriting:
      description: |-
        Prints `| + + Bodywriting`
      tags: ["unused", "text"]
    ggchaos:
      description: |-
        Prints `| + + Chaos`
      tags: ["text"]
    ggcombatcontrol:
      description: |-
        Prints `| + + Control`
      tags: ["unused", "text"]
    ggcomprehension:
      name: ggcomprehension
      tags: ["text"]
    ggcontrol:
      description: |-
        Prints `| + + Control`
      tags: ["text"]
    ggcool:
      description: |-
        Prints `| + + Status`
      tags: ["text"]
    ggcorruption:
      description: |-
        Prints `| + + Corruption`
      tags: ["text"]
    ggcrime:
      description: |-
        Prints `| + + Crime X` where X is type of crime

        `<<ggcrime type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "|+ %crimeTypes%"
      tags: ["text"]
    ggdanceskill:
      description: |-
        Prints `| + + Dance skill`
      tags: ["unused", "text"]
    ggdaring:
      description: |-
        Prints `| + + Daring`
      tags: ["text"]
    ggdef:
      description: |-
        Prints `| + + Defiance`
      tags: ["unused", "text"]
    ggdelinquency:
      description: |-
        Prints `| + + Delinquency`
      tags: ["text"]
    ggdom:
      description: |-
        Prints `| + + Dominance` or `| + + NPCName's Dominance` if provided

        `<<ggdom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    ggdrugged:
      description: |-
        Prints `| + + Drugged`
      tags: ["unused", "text"]
    ggendear:
      description: |-
        Prints `| + + Endearment`
      tags: ["text"]
    ggenglish:
      description: |-
        Prints `| + + English`
      tags: ["text"]
    ggfarm:
      description: |-
        Prints `| + + Farm yield`
      tags: ["text"]
    gggadeviancy:
      description: |-
        Prints `| + + + Alex's Deviancy`
      tags: ["unused", "text"]
    gggaggro:
      description: |-
        Prints `| + + + Remy's Encroachment`
      tags: ["unused", "text"]
    gggalcohol:
      description: |-
        Prints `| + + + Alcohol`
      tags: ["unused", "text"]
    gggapproval:
      name: gggapproval
      tags: ["text"]
    gggarage:
      description: |-
        Prints `| + + + Rage`
      tags: ["text"]
    gggarousal:
      description: |-
        Prints `| + + Arousal`
      tags: ["text"]
    gggathletics:
      description: |-
        Prints `| + + + Athletics`
      tags: ["unused", "text"]
    gggattention:
      description: |-
        Prints `| + + + Attention` if more prison attention can be gained today

        `<<gggattention type>>`
        - **type**: `string` - type of attention to check if should be visible
          - `"prison"`
      parameters:
        - '|+ "prison"'
      tags: ["text"]
    gggawareness:
      description: |-
        Prints `| + + + Awareness` or `| - - - Innocence`
      tags: ["text"]
    gggbaton:
      description: |-
        Prints `| + + + Baton proficiency`
      tags: ["unused", "text"]
    gggbeauty:
      description: |-
        Prints `| + + + Beauty`
      tags: ["unused", "text"]
    gggbirdstockholm:
      description: |-
        Prints `| + + Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    gggbodywriting:
      description: |-
        Prints `| + + + Bodywriting`
      tags: ["text"]
    gggchaos:
      description: |-
        Prints `| + + + Chaos`
      tags: ["text"]
    gggcombatcontrol:
      description: |-
        Prints `| + + + Control`
      tags: ["unused", "text"]
    gggcomprehension:
      name: gggcomprehension
      tags: ["text"]
    gggcontrol:
      description: |-
        Prints `| + + + Control`
      tags: ["text"]
    gggcool:
      description: |-
        Prints `| + + + Status`
      tags: ["text"]
    gggcorruption:
      description: |-
        Prints `| + + + Corruption`
      tags: ["unused", "text"]
    gggcrime:
      description: |-
        Prints `| + + + Crime X X` where X is type of crime

        `<<gggcrime type>>`
        - **type**: `string` - type in setup.crimeNames
          - %crimeTypesDesc%
      parameters:
        - "|+ %crimeTypes%"
      tags: ["text"]
    gggdanceskill:
      description: |-
        Prints `| + + + Dance skill`
      tags: ["unused", "text"]
    gggdaring:
      description: |-
        Prints `| + + + Daring`
      tags: ["unused", "text"]
    gggdef:
      description: |-
        Prints `| + + + Defiance`
      tags: ["unused", "text"]
    gggdelinquency:
      description: |-
        Prints `| + + + Delinquency`
      tags: ["text"]
    gggdom:
      description: |-
        Prints `| + + + Dominance` or `| + + + NPCName's Dominance` if provided

        `<<gggdom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    gggdrugged:
      description: |-
        Prints `| + + + Drugged`
      tags: ["text"]
    gggendear:
      description: |-
        Prints `| + + + Endearment`
      tags: ["text"]
    gggenglish:
      description: |-
        Prints `| + + + English`
      tags: ["text"]
    gggfarm:
      description: |-
        Prints `| + + + Farm yield`
      tags: ["text"]
    ggggrace:
      description: |-
        Prints `| + + + Grace` if proper tier is met

        `<<ggggrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    ggghallucinogens:
      description: |-
        Prints `| + + + Hallucinogens`
      tags: ["text"]
    ggghistory:
      description: |-
        Prints `| + + + History`
      tags: ["unused", "text"]
    ggghope:
      description: |-
        Prints `| + + + Hope`
      tags: ["text"]
    ggghousekeeping:
      description: |-
        Prints `| + + + Housekeeping` if below limit, and `You're too skilled for this to improve your housekeeping` if above limit

        `<<ggghousekeeping limit? silent?>>`
        - **limit** _optional_: `number` - maximum housekeeping this task can raise to
        - **silent** _optional_: `string` - does not print `You're too skilled for this to improve your housekeeping`
      parameters:
        - '|+ number |+ "silent"'
      tags: ["unused", "text"]
    ggghunger:
      description: |-
        Prints `| + + + Hunger`
      tags: ["unused", "text"]
    gggimpatience:
      description: |-
        Prints `| + + + Impatience`
      tags: ["text"]
    ggginterest:
      description: |-
        Prints `| + + + Interest`
      tags: ["text"]
    gggksuspicion:
      description: |-
        Prints `| + + + Jealousy`
      tags: ["text"]
    ggglewdity:
      description: |-
        Prints `| + + + Lewdity`
      tags: ["unused", "text"]
    ggglove:
      description: |-
        Prints `| + + + Love` or `| + + + NPCName's Love` if provided

        `<<ggglove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    ggglust:
      description: |-
        Prints `| + + + Lust` or `| + + + NPCName's Lust` if provided

        `<<ggglust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    gggmaths:
      description: |-
        Prints `| + + + Maths`
      tags: ["text"]
    gggobey:
      description: |-
        Prints `| + + + Obedience`
      tags: ["text"]
    gggpain:
      description: |-
        Prints `| + + + Pain`
      tags: ["text"]
    gggphysique:
      description: |-
        Prints `| + + + Physique`
      tags: ["unused", "text"]
    gggpound_status:
      name: gggpound_status
      tags: ["unused", "text"]
    gggpurity:
      description: |-
        Prints `| + + + Purity`
      tags: ["text"]
    gggrace:
      description: |-
        Prints `| + + Grace` if proper tier is met

        `<<gggrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    gggreadiness:
      name: gggreadiness
      tags: ["text"]
    gggreb:
      description: |-
        Prints `| + + + Rebelliousness`
      tags: ["text"]
    gggrespect:
      description: |-
        Prints `| + + + Respect` if proper tier is met

        `<<gggrace tier?>>`
        - **tier**: `string` - tier below which respect is changed
          - `"scum"` | `"mate"`
      tags: ["text"]
    gggrtrauma:
      description: |-
        Prints `| + + + Robin's Trauma`, unless at max value

        `<<gggrtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 20
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    gggsaltiness:
      description: |-
        Prints `| + + + Saltiness`
      tags: ["unused", "text"]
    gggsarousal:
      name: gggsarousal
      tags: ["unused"]
    gggscience:
      description: |-
        Prints `| + + + Science`
      tags: ["text"]
    gggsecurity:
      description: |-
        Prints `| + + + Security`
      tags: ["unused", "text"]
    gggseduction:
      description: |-
        Prints `| + + + Seduction`
      tags: ["unused", "text"]
    gggshame:
      description: |-
        Prints `| + + + Shame`
      tags: ["unused", "text"]
    gggskulduggery:
      description: |-
        Prints `| + + + Skulduggery`
      tags: ["unused", "text"]
    gggslust:
      description: |-
        Prints `| + + + Sydney's Lust`
      tags: ["unused", "text"]
    gggspain:
      name: gggspain
      tags: ["unused"]
    gggspurity:
      description: |-
        Prints `| + + + Sydney's Purity` or `| - - - Sydney's Purity`
      tags: ["unused", "text"]
    gggstockholm:
      description: |-
        Prints `| + + + Stockholm Syndrome`
      tags: ["text"]
    gggstress:
      description: |-
        Prints `| + + + Stress`
      tags: ["text"]
    gggsuspicion:
      description: |-
        Prints `| + + + Suspicion`
      tags: ["text"]
    gggswimming:
      description: |-
        Prints `| + + + Swimming`
      tags: ["unused", "text"]
    gggtanned:
      description: |-
        Prints `| + + + Tan`
      tags: ["text"]
    gggtending:
      description: |-
        Prints `| + + + Tending`
      tags: ["unused", "text"]
    gggtiredness:
      description: |-
        Prints `| + + + Fatigue`
      tags: ["text"]
    gggtrauma:
      description: |-
        Prints `| + + + Trauma`
      tags: ["text"]
    gggtrust:
      description: |-
        Prints `| + + + Trust`
      tags: ["text"]
    gggwhip:
      description: |-
        Prints `| + + + Whip proficiency`
      tags: ["unused", "text"]
    gggwillpower:
      description: |-
        Prints `| + + + Willpower`
      tags: ["text"]
    gghallucinogens:
      description: |-
        Prints `| + + Hallucinogens`
      tags: ["text"]
    gghistory:
      description: |-
        Prints `| + + History`
      tags: ["text"]
    gghope:
      description: |-
        Prints `| + + Hope`
      tags: ["text"]
    gghousekeeping:
      description: |-
        Prints `| + + Housekeeping` if below limit, and `You're too skilled for this to improve your housekeeping` if above limit

        `<<gghousekeeping limit? silent?>>`
        - **limit** _optional_: `number` - maximum housekeeping this task can raise to
        - **silent** _optional_: `string` - does not print `You're too skilled for this to improve your housekeeping`
      parameters:
        - '|+ number |+ "silent"'
      tags: ["unused", "text"]
    gghunger:
      description: |-
        Prints `| + + Hunger`
      tags: ["unused", "text"]
    ggimpatience:
      description: |-
        Prints `| + + Impatience`
      tags: ["text"]
    gginterest:
      description: |-
        Prints `| + + Interest`
      tags: ["text"]
    ggksuspicion:
      description: |-
        Prints `| + + Jealousy`
      tags: ["text"]
    gglewdity:
      description: |-
        Prints `| + + Lewdity`
      tags: ["unused", "text"]
    gglove:
      description: |-
        Prints `| + + Love` or `| + + NPCName's Love` if provided

        `<<gglove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    gglust:
      description: |-
        Prints `| + + Lust` or `| + + NPCName's Lust` if provided

        `<<gglust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    ggmaths:
      description: |-
        Prints `| + + Maths`
      tags: ["text"]
    ggobey:
      description: |-
        Prints `| + + Obedience`
      tags: ["text"]
    ggpain:
      description: |-
        Prints `| + + Pain`
      tags: ["text"]
    ggphysique:
      description: |-
        Prints `| + + Physique`
      tags: ["text"]
    ggpound_status:
      name: ggpound_status
    ggpurity:
      description: |-
        Prints `| + + Purity`
      tags: ["text"]
    ggrace:
      description: |-
        Prints `| + Grace` if proper tier is met

        `<<ggrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    ggreadiness:
      name: ggreadiness
    ggreb:
      description: |-
        Prints `| + + Rebelliousness`
      tags: ["text"]
    ggrespect:
      description: |-
        Prints `| + + Respect` if proper tier is met

        `<<gggrace tier?>>`
        - **tier**: `string` - tier below which respect is changed
          - `"scum"` | `"mate"`
      tags: ["text"]
    ggrtrauma:
      description: |-
        Prints `| + + Robin's Trauma`, unless at max value

        `<<ggrtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 20
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    ggsaltiness:
      description: |-
        Prints `| + + Saltiness`
      tags: ["unused", "text"]
    ggsarousal:
      name: ggsarousal
      tags: ["unused"]
    ggscience:
      description: |-
        Prints `| + + Science`
      tags: ["text"]
    ggsecurity:
      description: |-
        Prints `| + + Security`
      tags: ["text"]
    ggseduction:
      description: |-
        Prints `| + + Seduction`
      tags: ["unused", "text"]
    ggshame:
      description: |-
        Prints `| + + Shame`
      tags: ["unused", "text"]
    ggskulduggery:
      description: |-
        Prints `| + + Skulduggery`
      tags: ["unused", "text"]
    ggslust:
      description: |-
        Prints `| + + Sydney's Lust`
      tags: ["text"]
    ggspain:
      name: ggspain
    ggspurity:
      description: |-
        Prints `| + + Sydney's Purity` or `| - - Sydney's Purity`
      tags: ["text"]
    ggstockholm:
      description: |-
        Prints `| + + Stockholm Syndrome`
      tags: ["text"]
    ggstress:
      description: |-
        Prints `| + + Stress`
      tags: ["text"]
    ggsuspicion:
      description: |-
        Prints `| + + Suspicion`
      tags: ["text"]
    ggswimming:
      description: |-
        Prints `| + + Swimming`
      tags: ["unused", "text"]
    ggtanned:
      description: |-
        Prints `| + + Tan`
      tags: ["text"]
    ggtending:
      description: |-
        Prints `| + + Tending`
      tags: ["text"]
    ggtiredness:
      description: |-
        Prints `| + + Fatigue`
      tags: ["text"]
    ggtrauma:
      description: |-
        Prints `| + + Trauma`
      tags: ["text"]
    ggtrust:
      description: |-
        Prints `| + + Trust`
      tags: ["unused", "text"]
    ggwalnut:
      name: ggwalnut
    ggwhip:
      description: |-
        Prints `| + + Whip proficiency`
      tags: ["unused", "text"]
    ggwillpower:
      description: |-
        Prints `| + + Willpower`
      tags: ["text"]
    ghallucinogens:
      description: |-
        Prints `| + Hallucinogens`
      tags: ["text"]
    ghandskill:
      description: |-
        Prints `| + Hand skill`
    gharass:
      description: |-
        Prints `| Increases chance of harassment`
      tags: ["text"]
    gharmony:
      description: |-
        Adds 1 to wolfpack's harmony and prints `| + Harmony`

        `$wolfpackharmony` is a measure of how harmonious the wolfpack is where 0 is not at all (0-20)

        See `<<lharmony>>`
      tags: ["text"]
    ghistory:
      description: |-
        Prints `| + History`
      tags: ["text"]
    ghope:
      description: |-
        Prints `| + Hope`
      tags: ["text"]
    ghousekeeping:
      description: |-
        Prints `| + Housekeeping` if below limit, and `You're too skilled for this to improve your housekeeping` if above limit

        `<<ghousekeeping limit? silent?>>`
        - **limit** _optional_: `number` - maximum housekeeping this task can raise to
        - **silent** _optional_: `string` - does not print `You're too skilled for this to improve your housekeeping`
      parameters:
        - '|+ number |+ "silent"'
      tags: ["text"]
    ghunger:
      description: |-
        Prints `| + Hunger`
      tags: ["unused", "text"]
    giftSexToys:
      name: giftSexToys
    gimpatience:
      description: |-
        Prints `| + Impatience`
      tags: ["text"]
    ginsecurity:
      description: |-
        Prints `| + Insecurity` if acceptance hasn't been reached for specified part

        `<<ginsecurity part>>`
        - **paramNumber1**: `string` - part to gain insecurity in
          - %insecurityTypesDesc%
      parameters:
        - "%insecurityTypes%"
      tags: ["text"]
    ginterest:
      description: |-
        Prints `| + Interest`
      tags: ["text"]
    girl:
      name: girl
    girlfriend:
      name: girlfriend
    girls:
      name: girls
    gisland_tide:
      name: gisland_tide
    giveHarpyEggs:
      description: |-
        Sets the amount of eggs a harpy player will produce as part of their menstrual cycle and, if unfertilised, the number of days until they will be laid
    giveNNPCnewstrapon:
      name: giveNNPCnewstrapon
    giveNPCCondom:
      name: giveNPCCondom
    giveNPCsextoy:
      name: giveNPCsextoy
    givestartclothing:
      name: givestartclothing
    gknowledge:
      description: |-
        Prints `| + Knowledge`
      tags: ["text"]
    gksuspicion:
      description: |-
        Prints `| + Jealousy`
      tags: ["text"]
    glans:
      description: |-
        Prints noun describing part of pc's penis depending on if in use
      tags: ["text"]
    glewdity:
      description: |-
        Prints `| + Lewdity`
      tags: ["text"]
    glove:
      description: |-
        Prints `| + Love` or `| + NPCName's Love` if provided

        `<<glove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    glust:
      description: |-
        Prints `| + Lust` or `| + NPCName's Lust` if provided

        `<<glust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    gmaths:
      description: |-
        Prints `| + Maths`
      tags: ["text"]
    gmystery:
      description: |-
        Prints `| + ????`
      tags: ["text"]
    gnet:
      description: |-
        Prints `| + Net proficiency`
      tags: ["text"]
    gobey:
      description: |-
        Prints `| + Obedience`
      tags: ["text"]
    gobsession:
      name: gobsession
    goo:
      name: goo
    goocount:
      name: goocount
    goralskill:
      description: |-
        Prints `| + Oral skill`
      tags: ["text"]
    goxygen:
      description: |-
        Prints `| + Air`
      tags: ["unused", "text"]
    gpain:
      description: |-
        Prints `| + Pain`
      tags: ["text"]
    gpenileskill:
      description: |-
        Prints `| + Penile skill`
      tags: ["unused", "text"]
    gpenisacceptance:
      description: |-
        Adds acceptance to pc's state for appropriate penis size

        `<<gpenisacceptance change>>`
        - **change**: `number` - + change to apply
      parameters:
        - "number"
    gphysique:
      description: |-
        Prints `| + Physique`
      tags: ["text"]
    gpound_status:
      name: gpound_status
    gpurity:
      description: |-
        Prints `| + Purity`
      tags: ["text"]
    gpursuit:
      name: gpursuit
    grace:
      description: |-
        Adds grace to pc's state

        `$grace` is a measure of the church's endorsement of pc where -100 is against, and 0 is neutral (-100-100)

        `<<grace change tier?>>`
        - **change**: `number` - +/- change to apply
        - **tier** _optional_: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
          - Defaults to any rank
      parameters:
        - 'number |+ "monk"|"priest"|"bishop"'
    greadiness:
      name: greadiness
    greb:
      description: |-
        Prints `| + Rebelliousness`
      tags: ["text"]
    grespect:
      description: |-
        Prints `| + Respect` if proper tier is met

        `<<gggrace tier?>>`
        - **tier**: `string` - tier below which respect is changed
          - `"scum"` | `"mate"`
      tags: ["text"]
    groin:
      description: |-
        Prints genitals description through physically accessible clothing layers
      tags: ["text"]
    group:
      description: |-
        Prints summarised gender makeup of currently active npcs (ie, `men and women`)

        See `<<enumeratedGroup>>` for numbers as well or `<<fullGroup>>` for a list
      tags: ["text"]
    grtrauma:
      description: |-
        Prints `| + Robin's Trauma`, unless at max value

        `<<grtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 20
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    gsaltiness:
      description: |-
        Prints `| + Saltiness`
      tags: ["unused", "text"]
    gsarousal:
      name: gsarousal
    gschool:
      description: |-
        Prints `| + School`
      tags: ["text"]
    gscience:
      description: |-
        Prints `| + Science`
      tags: ["text"]
    gsecurity:
      description: |-
        Prints `| + Security`
      tags: ["text"]
    gseduction:
      description: |-
        Prints `| + Seduction`
      tags: ["unused", "text"]
    gshame:
      description: |-
        Prints `| + Shame`
      tags: ["unused", "text"]
    gskulduggery:
      description: |-
        Prints `| + Skulduggery`
      tags: ["text"]
    gslust:
      description: |-
        Prints `| + Sydney's Lust`
      tags: ["text"]
    gspain:
      name: gspain
    gspray:
      description: |-
        Prints `| + 1 pepper spray`
      tags: ["text"]
    gspraymax:
      description: |-
        Prints `| + 1 pepper spray capacity`
      tags: ["text"]
    gspurity:
      description: |-
        Prints `| + Sydney's Purity` or `| - Sydney's Purity`
      tags: ["text"]
    gstockholm:
      description: |-
        Prints `| + Stockholm Syndrome`
      tags: ["text"]
    gstray_happiness:
      name: gstray_happiness
    gstress:
      description: |-
        Prints `| + Stress`
      tags: ["text"]
    gsuspicion:
      description: |-
        Prints `| + Suspicion`
      tags: ["text"]
    gswimming:
      description: |-
        Prints `| + Swimming`
      tags: ["text"]
    gsydneytoy:
      description: |-
        This widget examples all over the place

        `<<gsydneytoy toyName>>`
        - **toyName**: `string` - complete toy name
          - `"dildo"` | `"length of anal beads"` | `"riding crop"` | `"flog"`
      parameters:
        - '"dildo"|"length of anal beads"|"riding crop"|"flog"'
    gtanned:
      description: |-
        Prints `| + Tan`
      tags: ["text"]
    gtending:
      description: |-
        Prints `| + Tending`
      tags: ["text"]
    gthighskill:
      description: |-
        Prints `| + Thigh skill`
      tags: ["text"]
    gtiredness:
      description: |-
        Prints `| + Fatigue`
      tags: ["text"]
    gtorch:
      name: gtorch
    gtrauma:
      description: |-
        Prints `| + Trauma`
      tags: ["text"]
    gtreasure:
      description: |-
        Prints `| Increases chance of finding treasure`
      tags: ["text"]
    gtrust:
      description: |-
        Prints `| + Trust`
      tags: ["text"]
    guard_skill_text:
      name: guard_skill_text
    guard_terms:
      name: guard_terms
    gvaginalskill:
      description: |-
        Prints `| + Vaginal skill`
      tags: ["unused", "text"]
    gwalnut:
      name: gwalnut
    gwhip:
      description: |-
        Prints `| + Whip proficiency`
      tags: ["text"]
    gwillpower:
      description: |-
        Prints `| + Willpower`
      tags: ["text"]
    gwood:
      name: gwood
    gwylanForestRescue:
      name: gwylanForestRescue
    gwylanitem:
      name: gwylanitem
      tags: ["unused"]
    gwylanRescueApology:
      name: gwylanRescueApology
    gwylanRescueApologyShop:
      name: gwylanRescueApologyShop
    gwylanRescueApologySpeech:
      name: gwylanRescueApologySpeech
    gwylanRescueFail:
      name: gwylanRescueFail
    hair_data:
      name: hair_data
    haircheck:
      name: haircheck
      tags: ["unused"]
    haircolourtext:
      description: |-
        Prints colour of `$haircolour` or `two-toned`
    hairDescription:
      name: hairDescription
    hairDressersOptions:
      name: hairDressersOptions
    hairDressersOptionsSydney:
      name: hairDressersOptionsSydney
    hairdressersPricelist:
      name: hairdressersPricelist
    hairdressersReset:
      name: hairdressersReset
    hairdressersResetAlt:
      name: hairdressersResetAlt
    hairdressersSession:
      name: hairdressersSession
    hairejacstat:
      name: hairejacstat
    hairfringecolourtext:
      description: |-
        Prints colour of `$hairfringecolour` or `two-toned`
    hairgelApply:
      name: hairgelApply
    hairgelDesc:
      name: hairgelDesc
    hairgelLinks:
      name: hairgelLinks
    hairmapcolourtext:
      description: |-
        Prints colour corresponding to `setup.colours.hair_map`

        Fallback behaviour changes if `_colour` is not set

        `<<hairmapcolourtext colour>>`
        - **colour**: `string` - colour to print
          - `valid key` : name of colour in hair_map
          - `text` : parameter is now fallback if `_colour` is not set
      parameters:
        - "text"
      tags: ["temp"]
    hairToFeatherColour:
      name: hairToFeatherColour
    halloweenkylar:
      name: halloweenkylar
    halloweenwhitney:
      name: halloweenwhitney
    hallucinogen:
      description: |-
        Adds hallucinogenic drugs to pc's system

        `$hallucinogen` is a measure of hallucinogenic drugs in pc's system where 0 is none (0-1,000)

        `<<hallucinogen change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    hallucinogencaption:
      name: hallucinogencaption
    hand_gag:
      name: hand_gag
    hand_section:
      name: hand_section
    hand_section_two:
      name: hand_section_two
    handdifficulty:
      description: |-
        Prints color-coded adjective of hand action difficulty in current combat
      tags: ["text"]
    handejacstat:
      name: handejacstat
    handheldon:
      name: handheldon
    handheldruined:
      name: handheldruined
    HandheldShop:
      name: HandheldShop
    handheldstrip:
      name: handheldstrip
    handheldundress:
      name: handheldundress
    handheldwear:
      name: handheldwear
    handholdingvirginitywarning:
      description: |-
        Prints `This action will take your handholding virginity.` if handholding virginity can still be lost

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    handsActionsStruggleColumnRadio:
      name: handsActionsStruggleColumnRadio
    handsActionsStruggleRadio:
      name: handsActionsStruggleRadio
    handsActionsStruggleRadiobkp:
      name: handsActionsStruggleRadiobkp
      tags: ["unused"]
    handsimg:
      name: handsimg
    handsit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"hand"` slot
    handskill:
      description: |-
        Adds hand skill to pc's state

        `$handskill` is a measure of pc's proficiency using their hands where 0 is awkward (0-1,000)

        `<<handskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    handskilluse:
      name: handskilluse
    handson:
      name: handson
      tags: ["unused"]
    handsruined:
      description: |-
        Destroys pc's hands slot clothing, whether worn or carried

        `<<handsruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    handssend:
      name: handssend
      tags: ["unused"]
    HandsShop:
      name: HandsShop
    handssteal:
      name: handssteal
      tags: ["unused"]
    handsstrip:
      name: handsstrip
    handsstrugglefreebodypart:
      name: handsstrugglefreebodypart
    handstat:
      name: handstat
    handsthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"hands"` slot
      tags: ["unused"]
    handsundress:
      name: handsundress
    handswear:
      name: handswear
    handtext:
      description: |-
        Prints colour-coded adjective of active hand skill usage
      tags: ["text"]
    harper_intro:
      name: harper_intro
    harpy:
      description: |-
        Prints `| Harpy` or `| Bird` based on pc's hallucination state and bestiality toggle
      tags: ["text"]
    harpyTransform:
      name: harpyTransform
    harvest:
      name: harvest
    harvesteventend:
      name: harvesteventend
    harvestexposed:
      name: harvestexposed
      tags: ["unused"]
    harvestquick:
      name: harvestquick
    has:
      description: |-
        Prints plural/singular prose of has (have/has) for provided clothing slot

        `<<has slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
    hatchUi:
      name: hatchUi
    hawkCaughtYouSpeech:
      description: |-
        Prints a variation on "Caught you." To be used when running from, and getting captured by, the Great Hawk`
      tags: ["text"]
    hawkChildActivity:
      name: hawkChildActivity
    hawkRescueApproachSentence:
      description: |-
        Prints a variation on "Salvation/terror descends," depending on `$syndromebird`
      tags: ["text"]
    hawkRescueSetup:
      description: |-
        Enables chance of rescue from the Great Hawk
    hawkScreechDesc:
      description: |-
        Prints `A welcome/familiar, terrifying/terrifying screech`, dependent on `$syndromebird` and  `C.npc["Great Hawk"].init` status
      tags: ["text"]
    hawkspeech:
      description: |-
        Prints unique combat lines for the Great Hawk
      tags: ["text"]
    hawkText:
      description: |-
        Prints `harpy` or `hawk`, depending on the player's beast settings
      tags: ["text"]
    he:
      description: |-
        Prints singular pronoun of current npc (he/she/they)

        See `<<He>>` for start of sentence introduction or `<<He_Short>>` for exact equivalent, just capitalised

        Does not `<<personselect>>` to provided npc or behave like `<<He>>` for unnamed npcs. Consider refactoring to not personselect but allow unnamed

        `<<he namedNPC?>>`
        - **namedNPC** _optional_: `string` - name of npc to override pronoun for
          - %namedNPCDesc%
      parameters:
        - "|+ %namedNPC%"
      tags: ["text", "refactor"]
    He:
      description: |-
        Prints capitalised singular pronoun of current npc (He/She/They), with full npc introduction if it is appropriate

        See `<<he>>` for un-capitalised version or `<<He_Short>>` for no risk of full npc introduction

        Does not `<<personselect>>` to provided unnamed npc. Consider refactoring to not personselect but allow unnamed

        `<<He npcOverride?>>`
        - **npcOverride** _optional_: `string|number` - npc to override pronoun for
          - %namedNPCDesc%: Sets pronoun and outputs
          - `number`: Switches selected npc to zero-based index and outputs
      parameters:
        - "|+ %namedNPC%|number"
      tags: ["text", "refactor"]
    He_Short:
      description: |-
        Prints capitalised singular pronoun of current npc (He/She/They)

        See `<<he>>` for un-capitalised version or `<<He>>` for full npc introduction

        Does not use arguments like `<<He>>` or `<<he>>`. Consider refactoring to match
      parameters:
        - ""
      tags: ["text"]
    head_down:
      name: head_down
    head_turn:
      name: head_turn
    head_up:
      name: head_up
    headbind:
      name: headbind
    headon:
      name: headon
      tags: ["unused"]
    headruined:
      description: |-
        Destroys pc's head slot clothing, whether worn or carried

        `<<headruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    headsend:
      name: headsend
      tags: ["unused"]
    HeadShop:
      name: HeadShop
    headsteal:
      name: headsteal
      tags: ["unused"]
    headstrip:
      name: headstrip
    headundress:
      name: headundress
    headwear:
      name: headwear
    heat:
      description: |-
        Prints `| Heat`
      tags: ["text"]
    heatRutDisplay:
      name: heatRutDisplay
    heelsUpdate:
      name: heelsUpdate
    heldSexToy:
      name: heldSexToy
    hers:
      name: hers
    Hers:
      name: Hers
      tags: ["unused"]
    hes:
      name: hes
    Hes:
      name: Hes
    hideDisplay:
      name: hideDisplay
    hidelayer:
      description: |-
        Hide layer

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<hidelayer layerName>>`
        - **layerName**: `string` - layer name corresponding to #CanvasModel.layer
      parameters:
        - text
      tags: ["unused"]
    hideTransformations:
      description: |-
        Use to temporarily hide all transformation parts

        Stores the hidden transformation data into `$saveTransformations`

        Use `<<showTransformations>>` to restore the parts this widget hid
      tags: ["unused"]
    high:
      name: high
    higheventend:
      name: higheventend
    highexposed:
      name: highexposed
      tags: ["unused"]
    highLowCalculate:
      name: highLowCalculate
      tags: ["unused"]
    highLowControls:
      name: highLowControls
      tags: ["unused"]
    highLowEnd:
      name: highLowEnd
      tags: ["unused"]
    highLowStart:
      name: highLowStart
      tags: ["unused"]
    highquick:
      name: highquick
    him:
      name: him
    Him:
      name: Him
    himself:
      description: |-
        Prints singular reflexive pronoun for active npc

        See `<<nnpc_himself>>` for alternative use or `<<bhimself>>` for beasts

        Does not `<<personselect>>` to provided npc or behave like `<<He>>` for unnamed npcs. Consider refactoring to not personselect but allow unnamed

        `<<himself namedNPC?>>`
        - **namedNPC** _optional_: `string` - name of npc to override pronoun for
          - %namedNPCDesc%
      parameters:
        - "|+ %namedNPC%"
      tags: ["text", "refactor"]
    hirsuteHideCheck:
      name: hirsuteHideCheck
    his:
      description: |-
        Prints singular possessive pronoun of current npc (his/her/their)

        See `<<His>>` for capitalised prose

        Does not `<<personselect>>` to provided npc or behave like `<<He>>` for unnamed npcs. Consider refactoring to not personselect but allow unnamed

        `<<His namedNPC?>>`
        - **namedNPC** _optional_: `string` - name of npc to override pronoun for
          - %namedNPCDesc%
      parameters:
        - "|+ %namedNPC%"
      tags: ["text", "refactor"]
    His:
      description: |-
        Prints capitalised singular possessive pronoun of current npc (His/Her/Their)

        See `<<his>>` for un-capitalised prose

        Does not `<<personselect>>` to provided npc or behave like `<<He>>` for unnamed npcs. Consider refactoring to not personselect but allow unnamed

        `<<His namedNPC?>>`
        - **namedNPC** _optional_: `string` - name of npc to override pronoun for
          - %namedNPCDesc%
      parameters:
        - "|+ %namedNPC%"
      tags: ["text", "refactor"]
    his1:
      description: |-
        Prints singular possessive pronoun after switching active npc to first npc (`NPCList[0]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    his2:
      description: |-
        Prints singular possessive pronoun after switching active npc to second npc (`NPCList[1]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    his3:
      description: |-
        Prints singular possessive pronoun after switching active npc to third npc (`NPCList[2]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    his4:
      description: |-
        Prints singular possessive pronoun after switching active npc to fourth npc (`NPCList[3]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    his5:
      description: |-
        Prints singular possessive pronoun after switching active npc to fifth npc (`NPCList[4]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    his6:
      description: |-
        Prints singular possessive pronoun after switching active npc to sixth npc (`NPCList[5]`)

        One-indexed for legacy support. Eligible for deprecation.
      tags: ["unused", "text"]
    hisselect:
      description: |-
        Prints singular possessive pronoun after switching active npc (his/her/their)

        `<<hisselect npcIndex>>`
        - **npcIndex**: `number` - zero-based index of active npcs
      parameters:
        - "number"
      tags: ["text"]
    history_skill_up_text:
      name: history_skill_up_text
    historyrequired:
      name: historyrequired
      tags: ["unused"]
    historyskill:
      name: historyskill
    hitchhike:
      name: hitchhike
    hitchhike_journey:
      name: hitchhike_journey
    hitchhike_journey_nude:
      name: hitchhike_journey_nude
    hitstat:
      name: hitstat
    home_effects:
      name: home_effects
    home_outside:
      name: home_outside
    homeBabyIntro:
      name: homeBabyIntro
    homeevent:
      name: homeevent
    homeeventalex:
      name: homeeventalex
    homeeventchef:
      name: homeeventchef
    homeeventhopehi:
      name: homeeventhopehi
    homeeventhopelo:
      name: homeeventhopelo
    homeeventkylar:
      name: homeeventkylar
    homeeventnorm:
      name: homeeventnorm
    homeeventpond:
      name: homeeventpond
    homeeventrebhi:
      name: homeeventrebhi
    homeeventreblo:
      name: homeeventreblo
    homeeventriver:
      name: homeeventriver
    homeeventwhitney:
      name: homeeventwhitney
    homeStudyOptions:
      name: homeStudyOptions
    hookah_init:
      name: hookah_init
    hookah_juice:
      name: hookah_juice
    hookah_master:
      name: hookah_master
    hope:
      description: |-
        Adds hope to orphanage

        `$orphan_hope` is measure of hope levels in orphanage where negative is no hope and 0 is neutral (-50-50)

        `<<hope change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    horsegenitalsdesc:
      description: |-
        Prints adjective describing active horse's genital state

        `<<horsegenitalsdesc size?>>`
        - **size** _optional_: `bool` - print size adjective instead of state (truthy)
      parameters:
        - "|+ bool|var|bareword"
    hospitalparasite:
      name: hospitalparasite
    housekeeping:
      name: housekeeping
    housekeeping_text:
      description: |-
        Prints colour-coded description of how good the player is at housekeeping
      tags: ["unused", "text"]
    housekeepingdifficulty:
      name: housekeepingdifficulty
    housekeepingtext:
      description: |-
        Prints colour-coded adjective of active housekeeping skill usage
      tags: ["unused", "text"]
    humanChildActivity:
      name: humanChildActivity
    humanChildActivityNoToy:
      name: humanChildActivityNoToy
    humanSettings:
      name: humanSettings
    humanSplitBy:
      name: humanSplitBy
    humanSplitByFull:
      name: humanSplitByFull
    hunger:
      name: hunger
    hunger_description:
      name: hunger_description
    hygiene:
      name: hygiene
      tags: ["unused"]
    hypnotised:
      name: hypnotised
    hypothermiaClothes:
      description: |-
       Gives players up to two pieces of warm clothing after passing out of hypothermia: a top and bottom if exposed, potentially a hat or scarf otherwise. Sets temporary variables that can be referenced in the text.
        - `_warmClothes`:  prints a description (`any clothes`, `dry clothes`, `any bottoms`, `a jacket`, `a shirt`, `a scarf`, `a hat`, `something warmer`) of what the player's attire is lacking. Intended to be used in dialogue such as `You shouldn't be walking around without _warmClothes.`
        - `_clothes`: array of clothes the player is given. Print `_clothes.join(" and ")` to print what the player is given.
          - **Example:** `You're wearing <<= _clothes.join(" and ")` may print `You're wearing a winter jacket and jeans` or `You're wearing a scarf`
        - `_wet`: if the player had wet clothes at the time of rescue
    icon:
      description: |-
        Prints icon image from icon folder

        `<<icon imagePath ...additionalClass?>>`
        - **imagePath**: `string` - path to image file including extension relative to icon folder
        - ...**whitespaceOption** _optional_: `string` - trim whitespace character at end of output
          - `"nowhitespace"`: no trailing whitespace for formatting
          - `"infront"`: layer icon in front of next icon
      parameters:
        - text |+ ...("nowhitespace"|"infront")
      tags: ["img"]
    imgOpacity:
      name: imgOpacity
    importConfirmDetails:
      name: importConfirmDetails
    importDetailsDisplay:
      description: |-
        Validate and imports preset object into state

        `<<importDetailsDisplay presetObject>>`
        - **presetObject**: `object` - object to be imported
      parameters:
        - bareword|var
    impregnateParasite:
      name: impregnateParasite
    imprison_leighton:
      name: imprison_leighton
    imprison_npc:
      name: imprison_npc
      tags: ["unused"]
    imprison_whitney:
      name: imprison_whitney
    incggpenisinsecurity:
      description: |-
        Adds double amount of default penis insecurity to the player and prints stat change
      tags: ["text"]
    incgpenisinsecurity:
      description: |-
        Adds penis insecurity to the player and prints stat change

        `<<incgpenisinsecurity change?>>`
        - **change** _optional_: `number` - + change to apply
          - Defaults to `10`
      parameters:
        - "|+ number"
      tags: ["text"]
    incompletePregnancy:
      name: incompletePregnancy
    incrementautosave:
      name: incrementautosave
      tags: ["unused"]
    industrial:
      name: industrial
    industrialdrain:
      name: industrialdrain
    industrialdraineventend:
      name: industrialdraineventend
    industrialdrainlinks:
      name: industrialdrainlinks
    industrialdrainquick:
      name: industrialdrainquick
    industrialeventend:
      name: industrialeventend
    industrialex1:
      name: industrialex1
    industrialex2:
      name: industrialex2
    industrialex3:
      name: industrialex3
    industrialexposed:
      name: industrialexposed
      tags: ["unused"]
    industrialquick:
      name: industrialquick
    infirmary_excused:
      name: infirmary_excused
    init_bodywriting_objects:
      name: init_bodywriting_objects
    init_hairfringe:
      name: init_hairfringe
    init_hairsides:
      name: init_hairsides
    init_locations:
      name: init_locations
    init_names:
      name: init_names
    init_npc_clothes:
      name: init_npc_clothes
    init_plant_objects:
      name: init_plant_objects
    init_tips:
      name: init_tips
    initAllNNPCVirginities:
      description: |-
        Sets all named NPC to canonical starting virginities
    initEstatePersistent:
      name: initEstatePersistent
    initNNPCClothes:
      name: initNNPCClothes
    initNNPCstrapon:
      name: initNNPCstrapon
    initNNPCVirginity:
      description: |-
        Sets named NPC to canonical starting virginity

        `<<initNNPCVirginity namedNPCIndex>>`
        - **namedNPCIndex**: `number` - zero-based index of named NPC to be init'd
      parameters:
        - number
    initnpc:
      name: initnpc
    initnpcgender:
      name: initnpcgender
    initnpcgendersingle:
      name: initnpcgendersingle
    initnpcskin:
      name: initnpcskin
    initnpcskinsingle:
      name: initnpcskinsingle
    initsettings:
      name: initsettings
    inittemple:
      name: inittemple
    initWraith:
      name: initWraith
    innocencecaption:
      name: innocencecaption
    insecurity:
      description: |-
        Adds insecurity to pc's state concerning specific part and applies effects

        `$insecurity_X` are measures of insecure pc is towards specific traumas where 0 is not insecure (0-1,000)

        `<<insecurity part change>>`
        - **part**: `string` - part to gain insecurity in
          - %insecurityTypesDesc%
        - **change**: `number` - +/- change to apply
      parameters:
        - "%insecurityTypes% &+ number"
    inspectionexpect:
      name: inspectionexpect
    integrity:
      name: integrity
    integritycheck:
      description: |-
        To be used after damaging an item. Checks the current integrity level of all clothes and destroys the item if integrity is lte 0. Optionally prints `Your [clothing item has] ripped into scraps.`

        `<<integritycheck text?>>`
        - **text** _optional_: `string` - if text displays or not
          - `"no_text"`: Doesn't print `Your [clothing item has] ripped into scraps.`
      parameters:
        - "|+ text"
      tags: ["text"]
    integrityWord:
      description: |-
        Use `integrityWord()` instead
      name: integrityWord
      tags: ["unused"]
    internalejac:
      name: internalejac
    internet_photo:
      description: |-
        Adds a photo type to the list of ones circulating the internet

        `<<internet_photo key>>`
        - **key**: `string` - key to add to list
          - `"whitney_roof_cute"` | `"whitney_roof_erotic"` | `"whitney_roof_erotic_pantiless"` | `"whitney_roof_erotic_panties"`
      parameters:
        - '"whitney_roof_cute"|"whitney_roof_erotic"|"whitney_roof_erotic_pantiless"|"whitney_roof_erotic_panties"'
    internet_video:
      description: |-
        Adds a video type to the list of ones circulating the internet

        `<<internet_video key>>`
        - **key**: `string` - key to add to list
          - `"whitney_roof_cute"` | `"whitney_roof_erotic"` | `"whitney_roof_erotic_pantiless"` | `"whitney_roof_erotic_panties"`
      parameters:
        - '"whitney_roof_cute"|"whitney_roof_erotic"|"whitney_roof_erotic_pantiless"|"whitney_roof_erotic_panties"'
    is:
      description: |-
        Prints a present indicative (are/is) for the given clothing layer

        Examples:
        `Your _bottom.name <<is _bottom>> ripped into scraps.`
        `Your $worn.upper.name <<is $worn.upper>> destroyed.` (presented for example's sake, please avoid hardcoded clothing references like this where possible. Refer to `<<outfitChecks>>.`)

        `<<is clothingObject>>`
        - **clothingObject**: `object` - Clothes object to be checked for integrity
      parameters:
        - "var|bareword |+ %clothesTypes%"
      tags: ["text"]
    island_end:
      name: island_end
    island_explore_end:
      name: island_explore_end
    island_init:
      name: island_init
    island_pass:
      name: island_pass
    island_rope_bow:
      name: island_rope_bow
    island_rope_end:
      name: island_rope_end
    island_rope_options:
      name: island_rope_options
    island_rope_shout:
      name: island_rope_shout
    island_tattoo:
      name: island_tattoo
    island_tattoo_check:
      name: island_tattoo_check
    island_tide:
      name: island_tide
    island_tide_options:
      name: island_tide_options
    island_tide_text:
      name: island_tide_text
    island_var_list:
      name: island_var_list
      tags: ["unused"]
    islandBuildOption:
      name: islandBuildOption
    islander_language:
      name: islander_language
    it:
      description: |-
        Prints an objective case pronoun (them/it) for provided clothing slot

        `<<it slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
    itis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing provided clothing slot

        Pronoun is subjective case for usability

        `<<itis slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
    journal:
      name: journal
    journalNotes:
      name: journalNotes
    journalNotesTextarea:
      name: journalNotesTextarea
    journalNotesTextareaSave:
      name: journalNotesTextareaSave
    kennel_intro:
      name: kennel_intro
    kennel_play_options:
      name: kennel_play_options
    kennel_treat_options:
      name: kennel_treat_options
    kennel_treats:
      name: kennel_treats
    kissvirginitywarning:
      description: |-
        Prints `This action will take your first kiss.` if your first kiss can still be lost

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    kissWraith:
      name: kissWraith
    knot_stat:
      name: knot_stat
    kylar_abduction_end:
      name: kylar_abduction_end
    kylar_abduction_init:
      name: kylar_abduction_init
    kylar_abduction_rage:
      name: kylar_abduction_rage
    kylar_abduction_return:
      name: kylar_abduction_return
    kylar_parents_trust:
      name: kylar_parents_trust
    kylar_pet_name:
      name: kylar_pet_name
    kylar_stockholm_start:
      name: kylar_stockholm_start
    kylarangry:
      name: kylarangry
    kylarFinish:
      name: kylarFinish
    kylargag:
      name: kylargag
    kylarhallways:
      name: kylarhallways
    kylarLibrary:
      description: |-
        Prints partial passage of Kylar in the library
      tags: ["text", "links"]
    kylarLibraryStalkChat1:
      description: |-
        Prints paragraph chatting with Kylar in the library
      tags: ["text"]
    kylaroptions:
      name: kylaroptions
    kylaroptionsleave:
      name: kylaroptionsleave
    kylaroptionstext:
      name: kylaroptionstext
    kylarRandomUnderwear:
      name: kylarRandomUnderwear
    kylarStockholmDefaultRape:
      name: kylarStockholmDefaultRape
    kylarwatched:
      name: kylarwatched
    lactation_pressure:
      description: |-
        Adds pressure to pc's lactation pressure

        `$lactation_pressure` is counter for when pc starts lactating from daily effects (0-100, no change above 30)

        `<<lactation_pressure change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    ladeviancy:
      description: |-
        Prints `| - Alex's Deviancy`
      tags: ["unused", "text"]
    lady:
      description: |-
        Prints `man` or `lady` depending on pc's appearance

        See `<<gentleman>>`
      tags: ["text"]
    laggro:
      description: |-
        Prints `| - Remy's Encroachment`
      tags: ["text"]
    lake:
      name: lake
    lakeclothes:
      name: lakeclothes
    lakeeffects:
      name: lakeeffects
    lakeeventend:
      name: lakeeventend
    lakejourney:
      name: lakejourney
    lakequick:
      name: lakequick
    lakereturnjourney:
      name: lakereturnjourney
    landryoptions:
      name: landryoptions
    lapproval:
      name: lapproval
    larage:
      description: |-
        Prints `| - Rage`
      tags: ["text"]
    large_text:
      description: |-
        Prints appropriate `| Large body` descriptor that allowed this text option
      tags: ["text"]
    larousal:
      description: |-
        Prints `| - Arousal`
      tags: ["text"]
    lass:
      name: lass
    lattention:
      description: |-
        Prints `| - Attention`
      tags: ["unused", "text"]
    laughs:
      description: |-
        Prints random appropriate laugh verb for active NPC
      tags: ["text"]
    lawareness:
      description: |-
        Prints `| - Awareness` or `| + Innocence`
      tags: ["text"]
    lbirdstockholm:
      description: |-
        Prints `| - Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    lcamp_concealment:
      name: lcamp_concealment
    lchaos:
      description: |-
        Prints `| - Chaos`
      tags: ["unused", "text"]
    lcombatcontrol:
      description: |-
        Prints `| - Control`
      tags: ["unused", "text"]
    lcontrol:
      description: |-
        Prints `| - Control`
      tags: ["text"]
    lcool:
      description: |-
        Prints `| - Status`
      tags: ["text"]
    lcorruption:
      description: |-
        Prints `| - Corruption`
    ldaring:
      description: |-
        Prints `| - Daring`
      tags: ["text"]
    ldef:
      description: |-
        Prints `| - Defiance`
      tags: ["unused", "text"]
    ldelinquency:
      description: |-
        Prints `| - Delinquency`
      tags: ["text"]
    ldom:
      description: |-
        Prints `| - Dominance` or `| - NPCName's Dominance` if provided

        `<<ldom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    leash:
      name: leash
    left_pursuit_grab:
      name: left_pursuit_grab
    leftactionBoundBanish:
      name: leftactionBoundBanish
    leftactionDifficulty:
      name: leftactionDifficulty
    leftactionDifficultyMachine:
      name: leftactionDifficultyMachine
      tags: ["unused"]
    leftactionDifficultySelf:
      name: leftactionDifficultySelf
    leftactionDifficultyStruggle:
      name: leftactionDifficultyStruggle
      tags: ["unused"]
    leftactionDifficultySwarm:
      name: leftactionDifficultySwarm
      tags: ["unused"]
    leftactionDifficultyTentacle:
      name: leftactionDifficultyTentacle
    leftactionDifficultyVore:
      name: leftactionDifficultyVore
      tags: ["unused"]
    leftActionInit:
      name: leftActionInit
    leftActionInitMachine:
      name: leftActionInitMachine
    leftActionInitSelf:
      name: leftActionInitSelf
    leftActionInitStruggle:
      name: leftActionInitStruggle
    leftActionInitSwarm:
      name: leftActionInitSwarm
    leftActionInitTentacle:
      name: leftActionInitTentacle
    leftActionInitVore:
      name: leftActionInitVore
    leftActions:
      name: leftActions
    leftactionSetupTentacle:
      name: leftactionSetupTentacle
    leftActionsMachine:
      name: leftActionsMachine
    leftActionsSelf:
      name: leftActionsSelf
    leftActionsStruggle:
      name: leftActionsStruggle
    leftActionsSwarm:
      name: leftActionsSwarm
    leftActionsTentacle:
      name: leftActionsTentacle
    leftActionsVore:
      name: leftActionsVore
    leftarmtentacledisable:
      name: leftarmtentacledisable
    leftcamerapose:
      name: leftcamerapose
    leftchoke:
      name: leftchoke
    leftclothesnew:
      name: leftclothesnew
    leftCondom:
      name: leftCondom
    leftcoverface:
      name: leftcoverface
    leftdefault:
      name: leftdefault
    leftdildowhack:
      name: leftdildowhack
    leftFixAndCoverActions:
      name: leftFixAndCoverActions
    leftgrabnew:
      name: leftgrabnew
    lefthandinit:
      name: lefthandinit
      tags: ["unused"]
    lefthandpull:
      name: lefthandpull
    lefthypnosiswhack:
      name: lefthypnosiswhack
    leftNPCCondom:
      name: leftNPCCondom
    leftpenwhacknew:
      name: leftpenwhacknew
    leftplaynew:
      name: leftplaynew
    leftshacklewhack:
      name: leftshacklewhack
    leftspraynew:
      name: leftspraynew
    leftstealnew:
      name: leftstealnew
    leftUndressOther:
      name: leftUndressOther
    leg_position:
      name: leg_position
    leg_unbind:
      name: leg_unbind
    legbind:
      name: legbind
    legLock:
      name: legLock
    legLocked:
      name: legLocked
    legsit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"legs"` slot
    legson:
      name: legson
      tags: ["unused"]
    legsruined:
      description: |-
        Destroys pc's legs slot clothing, whether worn or carried

        `<<legsruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    legssend:
      name: legssend
      tags: ["unused"]
    LegsShop:
      name: LegsShop
    legssteal:
      name: legssteal
      tags: ["unused"]
    legsstrip:
      name: legsstrip
    legsthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"legs"` slot
    legsundress:
      name: legsundress
    legswear:
      name: legswear
    lemonade_stand_options:
      name: lemonade_stand_options
    lendear:
      description: |-
        Prints `| - Endearment`
      tags: ["text"]
    lenglish:
      description: |-
        Prints `| - English`
      tags: ["text"]
    lessonEnd:
      description: |-
        Prints end of lesson text for specified classes

        `class` seems overly specific. Consider refactoring

        `<<lessonEnd class pcAction?>>`
        - **class**: `string` - class to end and update state on
          - `"englishClassroom"` | `"historyClassroom"` | `"mathsClassroom"` | `"scienceClassroom"`
        - **pcAction** _optional_: `string` - action pc should react from
          - `"sleep"`: pc is woken up by end of class
      parameters:
        - '"englishClassroom"|"historyClassroom"|"mathsClassroom"|"scienceClassroom" |+ "sleep"'
      tags: ["text", "refactor"]
    lessonEvents:
      description: |-
        Pulls from appropriate event pool for class based on danger

        `<<lessonEvents class dangerModifier?>>`
        - **class**: `string` - class to pull events from
          - `"english"` | `"history"` | `"maths"` | `"science"`
        - **dangerModifier** _optional_: `number` - modifier to apply to danger calculations
          - Defaults to `1`
      parameters:
        - '"english"|"history"|"maths"|"science" |+ number'
    lewdcatcall:
      description: |-
        Prints random lewd catcall
    lewditycaption:
      name: lewditycaption
    lewdness:
      description: |-
        Prints exposed player clothing or just `lewdness`
      tags: ["text"]
    lfarm:
      description: |-
        Prints `| - Farm yield`
    lferocity:
      description: |-
        Adds 1 to wolfpack's ferocity and prints `| - Ferocity`

        See `<<gferocity>>`
      tags: ["text"]
    lgrace:
      description: |-
        Prints `| - Grace` if proper tier is met

        `<<lgrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    lharass:
      description: |-
        Prints `| Decreases chance of harassment`
      tags: ["text"]
    lharmony:
      description: |-
        Subtracts 1 from wolfpack's harmony and prints `| - Harmony`

        See `<<gharmony>>`
      tags: ["text"]
    lhistory:
      description: |-
        Prints `| - History`
      tags: ["text"]
    lhope:
      description: |-
        Prints `| - Hope`
      tags: ["text"]
    lhunger:
      description: |-
        Prints `| - Hunger`
      tags: ["text"]
    limpatience:
      description: |-
        Prints `| - Impatience`
      tags: ["unused", "text"]
    linkradiogroup:
      name: linkradiogroup
    linterest:
      description: |-
        Prints `| - Interest`
      tags: ["text"]
    lisland_tide:
      name: lisland_tide
    listCrimeCheats:
      name: listCrimeCheats
    listdancingclothes:
      name: listdancingclothes
    listoutfits:
      name: listoutfits
    listoutfitsPassage:
      name: listoutfitsPassage
    listsleepoutfits:
      name: listsleepoutfits
    listswimoutfits:
      name: listswimoutfits
    livestock_bodywriting:
      name: livestock_bodywriting
    livestock_cows:
      name: livestock_cows
    livestock_end:
      name: livestock_end
      tags: ["unused"]
    livestock_horse:
      name: livestock_horse
    livestock_horses:
      name: livestock_horses
    livestock_init:
      name: livestock_init
    livestock_lock_cleanup:
      description: |-
        Unsets farm lock variables
    livestock_lock_desc:
      description: |-
        Prints description of farm lock strength

        `$farmLockStr` is a measure of how damaged the farm lock is where 100 is undamaged (0-100)
      tags: ["text"]
    livestock_obey:
      description: |-
        Adds obedience in being cattle to pc's state

        `$livestock_obey` is a measure of how compliant the pc is being Remy's cattle where 0 is uncompliant (0-100)

        `<<livestock_obey change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    livestock_obey_description:
      name: livestock_obey_description
    livestock_overhear:
      name: livestock_overhear
    livestock_patrol:
      description: |-
        Prints description of farm guard location and how effective your attempt to break the lock is

        Decreases `$farmLockStr` based on physique

        `$farmPatrol` is a measure of how far the farmhand is where 0 is near (0-100)
      tags: ["text", "stat"]
    livestock_sleep:
      name: livestock_sleep
    livestockescape:
      name: livestockescape
    livestockFieldGrassEvents:
      name: livestockFieldGrassEvents
    lksuspicion:
      description: |-
        Prints `| - Jealousy`
      tags: ["text"]
    lladeviancy:
      description: |-
        Prints `| - - Alex's Deviancy`
      tags: ["unused", "text"]
    llaggro:
      description: |-
        Prints `| - - Remy's Encroachment`
      tags: ["text"]
    llapproval:
      name: llapproval
      tags: ["unused"]
    llarage:
      description: |-
        Prints `| - - Rage`
      tags: ["unused", "text"]
    llarousal:
      description: |-
        Prints `| - - Arousal`
      tags: ["text"]
    llattention:
      description: |-
        Prints `| - - Attention`
      tags: ["unused", "text"]
    llawareness:
      description: |-
        Prints `| - - Awareness` or `| + + Innocence`
      tags: ["text"]
    llbirdstockholm:
      description: |-
        Prints `| - - Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    llchaos:
      description: |-
        Prints `| - - Chaos`
      tags: ["unused", "text"]
    llcombatcontrol:
      description: |-
        Prints `| - - Control`
      tags: ["unused", "text"]
    llcontrol:
      description: |-
        Prints `| - - Control`
      tags: ["text"]
    llcool:
      description: |-
        Prints `| - - Status`
      tags: ["text"]
    llcorruption:
      description: |-
        Prints `| - - Corruption`
    lldaring:
      description: |-
        Prints `| - - Daring`
      tags: ["unused", "text"]
    lldef:
      description: |-
        Prints `| - - Defiance`
      tags: ["unused", "text"]
    lldelinquency:
      description: |-
        Prints `| - - Delinquency`
      tags: ["text"]
    lldom:
      description: |-
        Prints `| - - Dominance` or `| - - NPCName's Dominance` if provided

        `<<lldom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    llendear:
      description: |-
        Prints `| - - Endearment`
      tags: ["text"]
    llewdity:
      description: |-
        Prints `| - Lewdity`
      tags: ["unused", "text"]
    llfarm:
      description: |-
        Prints `| - - Farm yield`
    llgrace:
      description: |-
        Prints `| - - Grace` if proper tier is met

        `<<llgrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    llhope:
      description: |-
        Prints `| - - Hope`
      tags: ["text"]
    llhunger:
      description: |-
        Prints `| - - Hunger`
      tags: ["text"]
    llimpatience:
      description: |-
        Prints `| - - Impatience`
      tags: ["unused", "text"]
    llinterest:
      description: |-
        Prints `| - - Interest`
      tags: ["text"]
    llksuspicion:
      description: |-
        Prints `| - - Jealousy`
      tags: ["text"]
    llladeviancy:
      description: |-
        Prints `| - - - Alex's Deviancy`
      tags: ["unused", "text"]
    lllaggro:
      description: |-
        Prints `| - - - Remy's Encroachment`
      tags: ["text"]
    lllapproval:
      name: lllapproval
      tags: ["unused"]
    lllarage:
      description: |-
        Prints `| - - - Rage`
      tags: ["text"]
    lllarousal:
      description: |-
        Prints `| - - - Arousal`
      tags: ["text"]
    lllattention:
      description: |-
        Prints `| - - - Attention`
      tags: ["unused", "text"]
    lllawareness:
      description: |-
        Prints `| - - - Awareness` or `| + + + Innocence`
      tags: ["text"]
    lllbirdstockholm:
      description: |-
        Prints `| - - - Stockholm Syndrome` if `$syndromebird` is not 1
      tags: ["text"]
    lllchaos:
      description: |-
        Prints `| - - - Chaos`
      tags: ["unused", "text"]
    lllcombatcontrol:
      description: |-
        Prints `| - - - Control`
      tags: ["unused", "text"]
    lllcontrol:
      description: |-
        Prints `| - - - Control`
      tags: ["text"]
    lllcool:
      description: |-
        Prints `| - - - Status`
      tags: ["text"]
    lllcorruption:
      description: |-
        Prints `| - - - Corruption`
    llldaring:
      description: |-
        Prints `| - - - Daring`
      tags: ["unused", "text"]
    llldef:
      description: |-
        Prints `| - - - Defiance`
      tags: ["unused", "text"]
    llldelinquency:
      description: |-
        Prints `| - - - Delinquency`
      tags: ["text"]
    llldom:
      description: |-
        Prints `| - - - Dominance` or `| - - - NPCName's Dominance` if provided

        `<<llldom NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
          - `"Robin"`: Displays "Confidence" instead
      parameters:
        - "|+ text"
      tags: ["text"]
    lllendear:
      description: |-
        Prints `| - - - Endearment`
      tags: ["unused", "text"]
    lllewdity:
      description: |-
        Prints `| - - Lewdity`
      tags: ["unused", "text"]
    lllfarm:
      description: |-
        Prints `| - - - Farm yield`
      tags: ["unused"]
    lllgrace:
      description: |-
        Prints `| - - - Grace` if proper tier is met

        `<<lllgrace tier?>>`
        - **tier**: `string` - rank source, pc ranks equal or above this will not change grace
          - `"monk"` | `"priest"` | `"bishop"`
      parameters:
        - '|+ "monk"|"priest"|"bishop"'
      tags: ["text"]
    lllhope:
      description: |-
        Prints `| - - - Hope`
      tags: ["text"]
    lllhunger:
      description: |-
        Prints `| - - - Hunger`
      tags: ["text"]
    lllimpatience:
      description: |-
        Prints `| - - - Impatience`
      tags: ["unused", "text"]
    lllinterest:
      description: |-
        Prints `| - - - Interest`
      tags: ["unused", "text"]
    lllksuspicion:
      description: |-
        Prints `| - - - Jealousy`
      tags: ["text"]
    llllewdity:
      description: |-
        Prints `| - - - Lewdity`
      tags: ["unused", "text"]
    llllove:
      description: |-
        Prints `| - - - Love` or `| - - - NPCName's Love` if provided

        `<<llllove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    llllust:
      description: |-
        Prints `| - - - Lust` or `| - - - NPCName's Lust` if provided

        `<<llllust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    lllobey:
      description: |-
        Prints `| - - - Obedience`
      tags: ["text"]
    lllove:
      description: |-
        Prints `| - - Love` or `| - - NPCName's Love` if provided

        `<<lllove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    lllpain:
      description: |-
        Prints `| - - - Pain`
      tags: ["text"]
    lllphysique:
      description: |-
        Prints `| - - - Physique`
      tags: ["unused", "text"]
    lllpound_status:
      name: lllpound_status
    lllpurity:
      description: |-
        Prints `| - - - Purity`
      tags: ["text"]
    lllreb:
      description: |-
        Prints `| - - - Rebelliousness`
      tags: ["unused", "text"]
    lllrespect:
      description: |-
        Prints `| - - - Respect`
      tags: ["unused", "text"]
    lllrtrauma:
      description: |-
        Prints `| - - - Robin's Trauma`, unless at min value

        `<<lllrtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 0
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    lllsaltiness:
      description: |-
        Prints `| - - - Saltiness`
      tags: ["unused", "text"]
    lllsarousal:
      name: lllsarousal
      tags: ["unused"]
    lllsecurity:
      description: |-
        Prints `| - - - Security`
      tags: ["unused", "text"]
    lllshame:
      description: |-
        Prints `| - - - Shame`
      tags: ["unused", "text"]
    lllslust:
      description: |-
        Prints `| - - - Sydney's Lust`
      tags: ["text"]
    lllspain:
      name: lllspain
    lllspurity:
      description: |-
        Prints `| - - - Sydney's Purity` or `| + + + Sydney's Purity`
      tags: ["unused", "text"]
    lllstockholm:
      description: |-
        Prints `| - - - Stockholm Syndrome`
      tags: ["text"]
    lllstress:
      description: |-
        Prints `| - - - Stress`
      tags: ["text"]
    lllsuspicion:
      description: |-
        Prints `| - - - Suspicion`
      tags: ["text"]
    llltiredness:
      description: |-
        Prints `| - - - Fatigue`
      tags: ["unused", "text"]
    llltrauma:
      description: |-
        Prints `| - - - Trauma`
      tags: ["text"]
    llltrust:
      description: |-
        Prints `| - - - Trust`
      tags: ["text"]
    lllust:
      description: |-
        Prints `| - - Lust` or `| - - NPCName's Lust` if provided

        `<<lllust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    llobey:
      description: |-
        Prints `| - - Obedience`
      tags: ["text"]
    llove:
      description: |-
        Prints `| - Love` or `| - NPCName's Love` if provided

        `<<llove NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their love
      parameters:
        - "|+ text"
      tags: ["text"]
    llpain:
      description: |-
        Prints `| - - Pain`
      tags: ["text"]
    llphysique:
      description: |-
        Prints `| - - Physique`
      tags: ["unused", "text"]
    llpound_status:
      name: llpound_status
    llpurity:
      description: |-
        Prints `| - - Purity`
      tags: ["text"]
    llreb:
      description: |-
        Prints `| - - Rebelliousness`
      tags: ["unused", "text"]
    llrespect:
      description: |-
        Prints `| - - Respect`
      tags: ["text"]
    llrtrauma:
      description: |-
        Prints `| - - Robin's Trauma`, unless at min value

        `<<llrtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 0
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    llsaltiness:
      description: |-
        Prints `| - - Saltiness`
      tags: ["unused", "text"]
    llsarousal:
      name: llsarousal
    llsecurity:
      description: |-
        Prints `| - - Security`
      tags: ["unused", "text"]
    llshame:
      description: |-
        Prints `| - - Shame`
      tags: ["unused", "text"]
    llslust:
      description: |-
        Prints `| - - Sydney's Lust`
      tags: ["unused", "text"]
    llspain:
      name: llspain
      tags: ["unused"]
    llspurity:
      description: |-
        Prints `| - - Sydney's Purity` or `| + + Sydney's Purity`
      tags: ["text"]
    llstockholm:
      description: |-
        Prints `| - - Stockholm Syndrome`
      tags: ["unused", "text"]
    llstress:
      description: |-
        Prints `| - - Stress`
      tags: ["text"]
    llsuspicion:
      description: |-
        Prints `| - - Suspicion`
      tags: ["text"]
    lltiredness:
      description: |-
        Prints `| - - Fatigue`
      tags: ["unused", "text"]
    lltrauma:
      description: |-
        Prints `| - - Trauma`
      tags: ["text"]
    lltrust:
      description: |-
        Prints `| - - Trust`
      tags: ["text"]
    llust:
      description: |-
        Prints `| - Lust` or `| - NPCName's Lust` if provided

        `<<llust NPCName?>>`
        - **NPCName** _optional_: `string` - name to display as their lust
      parameters:
        - "|+ text"
      tags: ["text"]
    lmaths:
      description: |-
        Prints `| - Maths`
      tags: ["text"]
    loadAllFeats:
      name: loadAllFeats
    loadBoxIronmanCheater:
      name: loadBoxIronmanCheater
    loadBoxIronmanSafetyCancel:
      name: loadBoxIronmanSafetyCancel
    loadConfirm:
      name: loadConfirm
    loadconfirmcompat:
      name: loadconfirmcompat
      tags: ["unused"]
    loadFiltersMenu:
      name: loadFiltersMenu
    loadingAllFeats:
      name: loadingAllFeats
    loadIronmanCheater:
      name: loadIronmanCheater
    loadIronmanSafetyCancel:
      name: loadIronmanSafetyCancel
    loadNPC:
      description: |-
        Loads persistent npc from named slot

        See `<<saveNPC>>`, `<<updateNPC>>`, & `<<clearNPC>>`

        `<<loadNPC slot name>>`
        - **slot**: `number` - slot number to put npc data at (zero-based)
        - **name**: `string` - key to load npc's data from
          - spaces should be avoided if possible
      parameters:
        - "number &+ string|text"
    loadShopOptions:
      name: loadShopOptions
    loadTempHairStyle:
      name: loadTempHairStyle
    loadWarning:
      name: loadWarning
    loadwarningcompat:
      name: loadwarningcompat
    lobey:
      description: |-
        Prints `| - Obedience`
      tags: ["text"]
    lobsession:
      name: lobsession
    location:
      name: location
    location_text:
      description: |-
        Prints `$location` as noun

        Out of date and underutilised. Consider refactoring
      tags: ["text", "refactor"]
    locker_suspicion:
      description: |-
        Adds suspicion of being the panty thief to pc's state

        `$locker_suspicion` is a measure of how suspicious pc is in the eyes of the school where 0 is not (0-100)

        `<<locker_suspicion change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    lockerclothes:
      description: |-
        Manages storage of handheld items in `lockers` location

        See `<<lockers2>>` for second slot
    lockerclothes2:
      description: |-
        Manages storage of handheld items in `lockers2` location

        See `<<lockers>>` for first slot
    lockerevent:
      name: lockerevent
    lockereventnext:
      name: lockereventnext
    lockereventpassages:
      name: lockereventpassages
    log:
      name: log
      tags: ["unused"]
    loiter:
      name: loiter
    loveInterest:
      name: loveInterest
    loveInterestFunction:
      name: loveInterestFunction
    lowerhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"lower"` slot
    lowerimg:
      name: lowerimg
    lowerintegrity:
      name: lowerintegrity
      tags: ["unused"]
    lowerit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"lower"` slot
    loweritis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"lower"` slot
    loweron:
      name: loweron
    lowerplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"lower"` slot
    lowerruined:
      description: |-
        Destroys pc's lower slot clothing, whether worn or carried

        `<<lowerruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    lowersend:
      name: lowersend
    lowerslither:
      name: lowerslither
      tags: ["unused"]
    lowersteal:
      name: lowersteal
    lowerstrip:
      name: lowerstrip
    lowerthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"lower"` slot
      tags: ["unused"]
    lowerundress:
      name: lowerundress
    lowerwear:
      name: lowerwear
    lowerwet:
      description: |-
        Adds wetness to pc's lower clothing state

        `$lowerwet` is a measure of how wet pc's lower clothing is where 0 is dry (0-200)

        `$lowerwetstate` is a measure of effects due to wetness of pc's lower clothing where 0 is dry (0-3)

        Over clothes don't take into account wetness. Consider refactoring to expand

        `<<lowerwet change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["refactor"]
    loxygen:
      description: |-
        Prints `| + Air`
      tags: ["text"]
    lpain:
      description: |-
        Prints `| - Pain`
      tags: ["text"]
    lphysique:
      description: |-
        Prints `| - Physique`
      tags: ["unused", "text"]
    lpound_status:
      name: lpound_status
    lpurity:
      description: |-
        Prints `| - Purity`
      tags: ["text"]
    lpursuit:
      name: lpursuit
    lreb:
      description: |-
        Prints `| - Rebelliousness`
      tags: ["text"]
    lrespect:
      description: |-
        Prints `| - Respect`
      tags: ["text"]
    lrtrauma:
      description: |-
        Prints `| - Robin's Trauma`, unless at min value

        `<<lrtrauma force?>>`
        - **force** _optional_: `bool` - prints even if trauma is 0
      parameters:
        - "|+ bool"
      tags: ["unused", "text"]
    lsaltiness:
      description: |-
        Prints `| - Saltiness`
      tags: ["unused", "text"]
    lsarousal:
      name: lsarousal
    lscience:
      description: |-
        Prints `| - Science`
      tags: ["text"]
    lsecurity:
      description: |-
        Prints `| - Security`
      tags: ["text"]
    lshame:
      description: |-
        Prints `| - Shame`
      tags: ["unused", "text"]
    lslust:
      description: |-
        Prints `| - Sydney's Lust`
      tags: ["text"]
    lspain:
      name: lspain
    lspurity:
      description: |-
        Prints `| - Sydney's Purity` or `| + Sydney's Purity`
      tags: ["text"]
    lstockholm:
      description: |-
        Prints `| - Stockholm Syndrome`
      tags: ["unused", "text"]
    lstress:
      description: |-
        Prints `| - Stress`
      tags: ["text"]
    lsuspicion:
      description: |-
        Prints `| - Suspicion`
      tags: ["text"]
    ltiredness:
      description: |-
        Prints `| - Fatigue`
      tags: ["text"]
    ltorch:
      name: ltorch
    ltrauma:
      description: |-
        Prints `| - Trauma`
      tags: ["text"]
    ltreasure:
      description: |-
        Prints `| Increases chance of finding treasure`
      tags: ["unused", "text"]
    ltrust:
      description: |-
        Prints `| - Trust`
      tags: ["text"]
    lubePrice:
      name: lubePrice
    luxuryTooltip:
      name: luxuryTooltip
    lwalnut:
      name: lwalnut
    lwood:
      name: lwood
      tags: ["unused"]
    machine_actions:
      name: machine_actions
    machine_anal_disable:
      name: machine_anal_disable
    machine_arm_chains_disable:
      name: machine_arm_chains_disable
    machine_combat:
      name: machine_combat
    machine_damage:
      name: machine_damage
    machine_effects:
      name: machine_effects
    machine_end:
      name: machine_end
    machine_init:
      name: machine_init
    machine_leg_chains_disable:
      name: machine_leg_chains_disable
    machine_speed:
      name: machine_speed
    machine_state:
      name: machine_state
    machine_vaginal_disable:
      name: machine_vaginal_disable
    machine_violent_arms:
      name: machine_violent_arms
    machine_violent_legs:
      name: machine_violent_legs
    makeAbomination:
      name: makeAbomination
    makeAwareOfDetails:
      name: makeAwareOfDetails
    makeupPresets:
      name: makeupPresets
    makeupPresetsItem:
      name: makeupPresetsItem
    male:
      name: male
    maleChanceSplitControls:
      name: maleChanceSplitControls
    man:
      name: man
    man-combat:
      name: man-combat
    man-pursuit:
      name: man-pursuit
    man-stalk:
      name: man-stalk
    managePill:
      name: managePill
      tags: ["unused"]
    managerLove:
      name: managerLove
    mancombat_choke:
      name: mancombat_choke
    mancombat_strangle:
      name: mancombat_strangle
    manend:
      description: |-
        Clears speech variables related to man combat

        Superceded by `<<endcombat>>`
    maninit:
      name: maninit
    mannequin:
      name: mannequin
    mannequinHairdresser:
      name: mannequinHairdresser
    manspeech:
      name: manspeech
    map:
      name: map
    mapLocations:
      name: mapLocations
    masochism:
      description: |-
        Adds masochism to pc's state

        `$masochism` is a measure of pc's progression towards being masochistic where 0 is no progress (0-1,000)

        `<<masochism change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    mason_actions:
      name: mason_actions
    mason_greet:
      name: mason_greet
    mason_greet_lust:
      name: mason_greet_lust
    masopain:
      description: |-
        Adds pain and corresponding arousal to pc's state regardless of whether they're masochistic

        Balance is different than regular `<<pain>>` and cannot actually increase masochism. Consider refactoring

        `<<masopain change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["refactor"]
    master:
      description: |-
        Prints `master` or `mistress` depending on npc pronouns
      tags: ["text"]
    Master:
      description: |-
        Prints `Master` or `Mistress` depending on npc pronouns
      tags: ["text"]
    masturbationactions:
      name: masturbationactions
    masturbationAudienceIncrement:
      description: |-
        Generates new masturbation audience member if less than max

        `<<masturbationAudienceIncrement type?>>`
        - **type** _optional_: `string` - type of audience member to generate
          - `"student"`: audience member is a student
      parameters:
        - '|+ "student"'
    masturbationbowl:
      name: masturbationbowl
    masturbationbowlimage:
      name: masturbationbowlimage
    masturbationControls:
      name: masturbationControls
    masturbationeffects:
      name: masturbationeffects
    masturbationSlimeControl:
      name: masturbationSlimeControl
    masturbationstart:
      name: masturbationstart
    masturbationStopControls:
      name: masturbationStopControls
    maths_skill_up_text:
      name: maths_skill_up_text
    mathsLessonEnd:
      name: mathsLessonEnd
    mathsLessonEvent:
      name: mathsLessonEvent
    mathsphone:
      name: mathsphone
    mathsprojectfinish:
      name: mathsprojectfinish
    mathsprojectstart:
      name: mathsprojectstart
    mathsskill:
      name: mathsskill
    mathsWhitneyAttendChance:
      name: mathsWhitneyAttendChance
    mathsWhitneyGropeOrgasm:
      name: mathsWhitneyGropeOrgasm
    maxDefaultActionSetsclamp:
      name: maxDefaultActionSetsclamp
      tags: ["unused"]
    meditateoptions:
      name: meditateoptions
    meek:
      name: meek
    meetingattention:
      name: meetingattention
    meetingmolestactions:
      name: meetingmolestactions
    meetingpetactions:
      name: meetingpetactions
    menstruationCycle:
      name: menstruationCycle
    menstruationCycleState:
      name: menstruationCycleState
    mer:
      name: mer
    mereventend:
      name: mereventend
    merexposed:
      name: merexposed
      tags: ["unused"]
    mergeNPCData:
      name: mergeNPCData
      tags: ["unused"]
    merquick:
      name: merquick
    methodical_guard:
      name: methodical_guard
    middleruined:
      description: |-
        Destroys pc's upper and lower slot clothing, whether worn or carried
    milk_amount:
      description: |-
        Adds milk to pc's milk supply

        `$milk_amount` is the current pc milk amount remaining

        `change` is technically optional. Consider refactoring

        `<<milk_amount change?>>`
        - **change**: `number` - +/- change to apply
          - if not provided, just updates milk effects
      parameters:
        - "number"
    milking_img:
      name: milking_img
      tags: ["unused"]
    milkTrait:
      description: |-
        Prints `| Milk Enthusiast` or `| Milk Addict` depending on pc's `$submissive`
      tags: ["unused", "text"]
    milkvolume:
      description: |-
        Adds milk to pc's milk capacity with appropriate checks

        `$milkvolume` is the current maximum pc milk capacity (0-3,000)

        `<<milkvolume change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    mines_crystals:
      name: mines_crystals
    mines_end:
      name: mines_end
    mines_init:
      name: mines_init
    mines_suspicion:
      name: mines_suspicion
    mines_suspicion_text:
      name: mines_suspicion_text
    mirror:
      name: mirror
    mirrorAppearance:
      name: mirrorAppearance
    mirrorAppearancePregnancy:
      name: mirrorAppearancePregnancy
    mirrorDebug:
      name: mirrorDebug
    mirrorDisplay:
      name: mirrorDisplay
    mirrorHair:
      name: mirrorHair
    mirrorhairControls:
      name: mirrorhairControls
    mirrorhairdisplay:
      name: mirrorhairdisplay
    mirrorhairdisplayClick:
      name: mirrorhairdisplayClick
    mirrorhairdisplayElements:
      name: mirrorhairdisplayElements
    mirrorhairdisplayFilter:
      name: mirrorhairdisplayFilter
    mirrorhairdisplayLinks:
      name: mirrorhairdisplayLinks
    mirrorhairdisplaySave:
      name: mirrorhairdisplaySave
    mirrorhairOptions:
      name: mirrorhairOptions
    mirrorHairSave:
      name: mirrorHairSave
    mirrorHairSaveOptions:
      name: mirrorHairSaveOptions
    mirrorHairTraitList:
      name: mirrorHairTraitList
    mirrorhairTraits:
      name: mirrorhairTraits
    mirrorMakeup:
      name: mirrorMakeup
    mirrorMakeupPart:
      name: mirrorMakeupPart
    mirrorMenu:
      name: mirrorMenu
    mirrormodel:
      name: mirrormodel
    mirrorSkin:
      name: mirrorSkin
    mirrorTransformation:
      name: mirrorTransformation
    mirrorwet:
      name: mirrorwet
    missionaryimg:
      name: missionaryimg
    mobileStats:
      name: mobileStats
    mobileStatsColor:
      name: mobileStatsColor
    mobileStatsColorAllure:
      name: mobileStatsColorAllure
    mobileStatsColorSet:
      name: mobileStatsColorSet
    mobileStatsColorSetIverted:
      name: mobileStatsColorSetIverted
    mobileStatsTime:
      name: mobileStatsTime
    modelfilter:
      description: |-
        Set model filter object

        Will do a copy, so you can safely edit filter options

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<modelfilter filterName filter>>`
        - **filterName**: `string` - filter name corresponding to #CanvasModel.options.filters
        - **filter**: `object` - Filter object to set at filterName
      parameters:
        - text &+ bareword|var
    modelfilterset:
      description: |-
        Set model filter object property

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<modelfilterset filterName propertyName property>>`
        - **filterName**: `string` - filter name corresponding to #CanvasModel.options.filters
        - **propertyName**: `string` - property name of filter to set
        - **property**: `string|number` - property value
      parameters:
        - text &+ text &+ text|number
    modelprepare-player-body:
      name: modelprepare-player-body
    modelprepare-player-clothes:
      name: modelprepare-player-clothes
    molestbusinit:
      name: molestbusinit
    molested:
      name: molested
    moleststat:
      name: moleststat
    molestTrait:
      description: |-
        Prints `| Graceful` or `| Plaything` depending on pc's `$submissive`
      tags: ["unused", "text"]
    moneyGain:
      description: |-
        Prints and adds money to pc's state

        See `<<moneyGainDisplay>>` to print before actually gaining

        See `<<printmoney>>` and `<<formatmoney>>` to just print raw amounts

        Sets `_money_gain` to result of calculation

        `<<moneyGain amount notExactly? stolen?>>`
        - **amount**: `number` - £ to give to pc (decimals supported)
        - **notExactly** _optional_: `bool` - apply random +/- 20% to amount
          - Defaults to `false`
        - **stolen** _optional_: `bool` - stolen money scales with skulduggery and impacts crime
          - Defaults to `false`
      parameters:
        - "number |+ bool |+ bool"
      tags: ["text", "temp"]
    moneyGainDisplay:
      description: |-
        Prints a theoretically added amount of money but does not actually change pc's state

        See `<<moneyGain>>` to actually gain

        See `<<printmoney>>` and `<<formatmoney>>` to just print raw amounts

        Sets `_money_gain` to result of calculation

        Widget documentation and codebase regularly uses manual adjustments instead of `<<moneyGain>>`. Consider refactoring

        Example:
        ```
        This example shows you <<moneyGainDisplay 100 true true>> that you could steal.

        <<link [[Take it|Example Passage]]>><<moneyGain _money_gain false true>><</link>><<crime "petty">>
        <br>
        <<link [[Leave|Example Passage]]>><</link>>
        ```

        `<<moneyGainDisplay amount notExactly? stolen?>>`
        - **amount**: `number` - £ to give to pc (decimals supported)
        - **notExactly** _optional_: `bool` - apply random +/- 20% to amount
          - Defaults to `false`
        - **stolen** _optional_: `bool` - stolen money scales with skulduggery and impacts crime
          - Defaults to `false`
      parameters:
        - "number |+ bool |+ bool"
      tags: ["text", "temp", "refactor"]
    monk:
      description: |-
        Prints `monk` or `nun` depending on active NPC pronoun

        `<<monk modifier?>>`
        - **modifier** _optional_: `string` - additional information to include
          - `"desc"`: include full NPC description before noun
      parameters:
        - '|+ "desc"'
      tags: ["text"]
    monkapo:
      description: |-
        Prints `monk's` or `nun's` depending on active NPC pronoun
      tags: ["text"]
    monks:
      description: |-
        Prints `monks` or `nuns` depending on active NPC pronoun
      tags: ["text"]
    monks_and_nuns:
      description: |-
        Prints `monks and nuns` unless player has mono-gendered the world

        See `<<Monks_and_Nuns>>` and `<<brothers_and_sisters>>`
      tags: ["text"]
    Monks_and_Nuns:
      description: |-
        Prints `Monks and nuns` unless player has mono-gendered the world

        See `<<monks_and_nuns>>` and `<<brothers_and_sisters>>`
      tags: ["text"]
    monster_passage:
      description: |-
        Sets `_monster_passage` to random gender chance

        Doesn't do anything. Consider refactoring
      tags: ["unused", "temp", "refactor"]
    monsterSettings:
      name: monsterSettings
    monstrance_accost:
      name: monstrance_accost
    moor_binding_text:
      name: moor_binding_text
    moor_captive_actions:
      name: moor_captive_actions
    moor_captive_init:
      name: moor_captive_init
    moor_fox:
      name: moor_fox
    moor_hunt:
      name: moor_hunt
    moor_hunt_start:
      name: moor_hunt_start
    morgancaught:
      name: morgancaught
    morganhunt:
      name: morganhunt
    morganoptions:
      name: morganoptions
    morgantext:
      name: morgantext
    mouth:
      name: mouth
    mouth_sensitivity:
      description: |-
        Changes sensitivity of mouth by provided amount

        `<<mouth_sensitivity amount>>`
        - **amount**: `number` - change to sensitivity
      parameters:
        - "number"
    mouthactionDifficulty:
      name: mouthactionDifficulty
    mouthactionDifficultyStruggle:
      name: mouthactionDifficultyStruggle
      tags: ["unused"]
    mouthactionDifficultyTentacle:
      name: mouthactionDifficultyTentacle
    mouthActionInit:
      name: mouthActionInit
    mouthActionInitStruggle:
      name: mouthActionInitStruggle
    mouthActionInitTentacle:
      name: mouthActionInitTentacle
    mouthActions:
      name: mouthActions
    mouthActionsTentacle:
      name: mouthActionsTentacle
    mouthsensitivity:
      name: mouthsensitivity
    movealongdrainwater:
      name: movealongdrainwater
    moveChildren:
      name: moveChildren
      tags: ["unused"]
    moveCreature:
      name: moveCreature
    mummy:
      name: mummy
    Mummy:
      name: Mummy
    museumAntiqueStatus:
      name: museumAntiqueStatus
    museumAntiqueText:
      name: museumAntiqueText
    museumdonate:
      name: museumdonate
    museumtalk:
      name: museumtalk
    namedNpcComments:
      name: namedNpcComments
    namedNpcPregnancy:
      name: namedNpcPregnancy
    neckejacstat:
      name: neckejacstat
    neckimg:
      name: neckimg
    neckon:
      name: neckon
      tags: ["unused"]
    neckruined:
      description: |-
        Destroys pc's neck slot clothing, whether worn or carried

        `<<neckruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    necksend:
      name: necksend
      tags: ["unused"]
    NeckShop:
      name: NeckShop
    necksteal:
      name: necksteal
      tags: ["unused"]
    neckstrip:
      name: neckstrip
    neckundress:
      name: neckundress
    neckwear:
      name: neckwear
    nectarfed:
      name: nectarfed
    nervously:
      description: |-
        Prints adverb of pc's willingness to engage in exhibitionism
      tags: ["text"]
    neutral:
      name: neutral
    neutralbreast:
      name: neutralbreast
    neutralgenitals:
      name: neutralgenitals
    new_npc_pillory:
      name: new_npc_pillory
    newNamedNpc:
      description: |-
        Generates new NPC object to add to old saves

        Expects npc template object of the form
        ```js
        {
          nam: "Example", // Name of the New NPC
          title: "tester", // How the game should refer to them
          insecurity: "looks", // What the NPC is insecure about. skill, looks,
          adult: 1, // (optional) If the PC is an adult
          teen: 1, // (optional) If the PC is a teen
          <any>: <any>, // Additional properties to attach to NPC
        }
        ```
      parameters:
        - var|bareword &+ ...bareword
    nexttext:
      description: |-
        Doesn't do anything, sort of

        Next links have stopped receiving this widget for a while now. Consider refactoring
      tags: ["legacy", "refactor"]
    nightingale:
      name: nightingale
    nightingaleeventend:
      name: nightingaleeventend
    nightingaleexposed:
      name: nightingaleexposed
      tags: ["unused"]
    nightingalequick:
      name: nightingalequick
    nightmareCheck:
      name: nightmareCheck
    nightmareEnd:
      name: nightmareEnd
    nightmareStart:
      name: nightmareStart
    nightmareWakeDifficulty:
      name: nightmareWakeDifficulty
    nipple:
      name: nipple
    nippleFlavorText:
      name: nippleFlavorText
    nipples:
      name: nipples
    nnpc_brother:
      description: |-
        Prints `brother` or `sister` for named NPC

        `<<nnpc_Sister namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_Brother:
      description: |-
        Prints `Brother` or `Sister` for named NPC

        `<<nnpc_Brother namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_gender:
      description: |-
        Prints `man` or `woman` for named NPC

        See `<<nnpc_gender>>` for young version

        `<<nnpc_gender namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_gendery:
      description: |-
        Prints `boy` or `girl` for named NPC

        See `<<nnpc_gender>>` for old version

        `<<nnpc_gendery namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_genitals:
      description: |-
        Prints `penis` or `vagina` based on named NPC's pronoun

        Doesn't take into account herm or crossdressing NNPC. Consider refactoring

        `<<nnpc_genitals namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text", "refactor"]
    nnpc_girlfriend:
      description: |-
        Prints `boyfriend` or `girlfriend` for named NPC

        `<<nnpc_girlfriend namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_he:
      description: |-
        Prints singular pronoun (he/she) for named NPC

        `<<nnpc_he namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_He:
      description: |-
        Prints capitalised singular pronoun (He/She) for named NPC

        `<<nnpc_He namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_hers:
      description: |-
        Prints possessive plural pronoun (his/hers) for named NPC

        `<<nnpc_hers namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_hes:
      description: |-
        Prints contracted singular pronoun (he's/she's) for named NPC

        `<<nnpc_hes namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_Hes:
      description: |-
        Prints capitalised contracted singular pronoun (He's/She's) for named NPC

        `<<nnpc_Hes namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_him:
      description: |-
        Prints objective pronoun (him/her) for named NPC

        `<<nnpc_her namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_Him:
      description: |-
        Prints capitalised objective pronoun (he/she) for named NPC

        `<<nnpc_Him namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["unused", "text"]
    nnpc_himself:
      description: |-
        Prints reflexive pronoun (himself/herself) for named NPC

        `<<nnpc_himself namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_his:
      description: |-
        Prints possessive pronoun (his/her) for named NPC

        `<<nnpc_his namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_His:
      description: |-
        Prints capitalised possessive pronoun (His/Her) for named NPC

        `<<nnpc_His namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_lass:
      description: |-
        Prints `lad` or `lass` for named NPC

        `<<nnpc_lass namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_title:
      description: |-
        Prints title of named NPC

        `<<nnpc_title namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_Title:
      description: |-
        Prints capitalised title of named NPC

        `<<nnpc_Title namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    nnpc_wife:
      description: |-
        Prints `husband` or `wife` for named NPC

        `<<nnpc_wife namedNPCName>>`
        - **namedNPCName**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
      tags: ["text"]
    noClothingCheck:
      name: noClothingCheck
    noharass:
      description: |-
        Prints `| No chance of harassment`
      tags: ["text"]
    note:
      description: |-
        Prints `| Note` style note

        `<<note text class>>`
        - **text**: `string` - note to display
        - **class**: `string` - HTML class property to attach to note
      parameters:
        - "string |+ string"
      tags: ["text"]
    nounderwearcheck:
      description: |-
        Checks if the PC is pantiless, but otherwise decent

        Results in low level exhibitionism increases
    npc:
      name: npc
    npc_attempt_sex:
      name: npc_attempt_sex
    npc_pillory:
      name: npc_pillory
    npc_pillory_abuse:
      name: npc_pillory_abuse
    npc_pillory_appearance:
      name: npc_pillory_appearance
    npc_pillory_detail:
      name: npc_pillory_detail
    npc_pillory_release_schedule:
      name: npc_pillory_release_schedule
    npc_submissive:
      name: npc_submissive
    npcAnus:
      description: |-
        Prints descriptor of active NPC's anus

        `<<npcAnus npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["text"]
    npcAttractionSettings:
      name: npcAttractionSettings
    npcattribute:
      name: npcattribute
    npcChest:
      description: |-
        Prints descriptor of active NPC's chest

        `<<npcChest npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["text"]
    npcClothesName:
      name: npcClothesName
    npcClothesText:
      description: |-
        Prints name of npc's clothes

        `<<npcClothesText npcObject clothesSlot>>`
        - **npcObject**: `object` - NPC object to check
        - **clothesSlot**: `string` - slot on npc object to check
          - `"upper"` | `"lower"` | `"both"`
      parameters:
        - 'bareword|var &+ "upper"|"lower"|"both"'
      tags: ["text"]
    npcClothesType:
      name: npcClothesType
    npcCondomEquipImmediate:
      name: npcCondomEquipImmediate
    npcdamage:
      name: npcdamage
    npcexhibit:
      name: npcexhibit
    npcexpose:
      name: npcexpose
    npcexposetext:
      description: |-
        Prints description of active NPC undressing and revealing their genitals

        Currently describes genitals of first active NPC always. Consider refactoring
      tags: ["refactor"]
    npcfence:
      name: npcfence
    npcgangstrip:
      name: npcgangstrip
    npcGenitalReaction:
      description: |-
        Prints a random player reaction to the sight of a very large or very small NPC penis

        `<<npcGenitalReaction npcObject>>`
        - **npcObject**: `object` - npc object to be checked
      parameters:
        - "var|bareword"
    npcGenitals:
      description: |-
        Prints descriptor(s) of active NPC's full genitals

        `<<npcGenitals npcIndex? descType?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
        - **descType** _optional_: `string` - type of description to provide
          - `"simple"`: Uses `<<npcPenisSimple>>` instead of full description
      parameters:
        - '|+ number |+ "simple"'
      tags: ["text"]
    npcgloryhole:
      name: npcgloryhole
    npcgrapplestripall:
      name: npcgrapplestripall
    npcHairColour:
      description: |-
        Prints hair colour of a named NPC

        `<<npcHairColour namedNPCIndex>>`
        - **namedNPCIndex**: `string` - named NPC name
          - %namedNPCDesc%
      parameters:
        - "%namedNPC%"
    npchand:
      name: npchand
    npcHurt:
      name: npcHurt
      parameters:
        - '|+ "Robin"'
      tags: ["text", "refactor"]
    npcidlegenitals:
      name: npcidlegenitals
    npcincr:
      name: npcincr
    npckiss:
      name: npckiss
    npcList:
      name: npcList
    npcNamed:
      name: npcNamed
    npcNamedUpdate:
      description: |-
        Updates $npcNamedVersion and underlying data from previous versions if necessary

        Current version is 2
    npcoral:
      name: npcoral
    npcPenis:
      description: |-
        Prints descriptor of active NPC's penis with full description

        Does not handle strapons

        See `<<npcPenisSimple>>` for no description

        `<<npcPenis npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["text"]
    npcPenisColored:
      description: |-
        Prints colored-descriptor of active NPC's penis with full description

        See `<<npcPenisColored>>` for no description

        `<<npcPenis npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["unused", "text"]
    npcPenisSimple:
      description: |-
        Prints descriptor of active NPC's penis

        See `<<npcPenis>>` for full description

        `<<npcPenis npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["text"]
    npcPregnancyUpdater:
      name: npcPregnancyUpdater
    npcrelationship:
      name: npcrelationship
    npcRevealText:
      description: |-
        Prints description of npc's genitals being revealed

        Does not include ending punctuation

        Example:
        ```
        The <<person>> <<npcUndressText _npc "lower" "self">>, <<npcRevealText _npc "lower">>.
        ```

        `<<npcUndressText npcObject clothesSlot mod?>>`
        - **npcObject**: `object` - NPC object to check
        - **clothesSlot**: `string` - slot on npc object to undress
          - `"upper"` | `"lower"` | `"both"`
        - **mod**: `string` - how NPC should be referred to
          - `"name"`: NPC's Name or description if name is unknown
          - `"desc"`: NPC's description
          - `default`: `<<his>>`
      parameters:
        - 'bareword|var &+ "upper"|"lower"|"both" |+ "name"|"desc"'
      tags: ["text"]
    npcset:
      name: npcset
    npcSettings:
      name: npcSettings
    npcSettingsMenu:
      name: npcSettingsMenu
    NPCSettingsReset:
      name: NPCSettingsReset
    npcspank:
      name: npcspank
    npcspankgag:
      name: npcspankgag
    npcstrapon:
      name: npcstrapon
    npcstrip:
      name: npcstrip
    npcstripall:
      name: npcstripall
    npcUndressText:
      description: |-
        Prints description of npc undressing

        Does not actually change any state of their clothing

        Example:
        ```
        You try to <<npcUndressText _npc _clothesTarget>>, but this is just an example
        ```

        `<<npcUndressText npcObject clothesSlot selfUndress?>>`
        - **npcObject**: `object` - NPC object to check
        - **clothesSlot**: `string` - slot on npc object to undress
          - `"upper"` | `"lower"` | `"both"`
        - **selfUndress**: `bool` - NPC is undressing themselves (truthy)
          - Defaults to `false`
      parameters:
        - 'bareword|var &+ "upper"|"lower"|"both" |+ bool|"self"'
      tags: ["text"]
    npcVagina:
      description: |-
        Prints descriptor of active NPC's vagina

        `<<npcVagina npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to current `$index`
      parameters:
        - "|+ number"
      tags: ["text"]
    NPCVirginityTakenByOther:
      name: NPCVirginityTakenByOther
    NPCvirginitywarning:
      description: |-
        Prints warning for named npc if virginity is available to lose

        `<<NPCvirginitywarning namedNPCName virginityType>>`
        - **namedNPCName**: `string` - name of named NPC
          - %namedNPCDesc%
        - **virginityType**: `string` - type of virginity to check and warn
          - %virginityTypesDesc%
      parameters:
        - "%namedNPC% &+ %virginityTypes%"
    nude_text:
      description: |-
        Prints general exposure state as adjective

        Example:
        ```
        Everyone sees you are just a <<nude_text>> example.
        ```

        Out of date and underutilised. Consider refactoring
      tags: ["text", "refactor"]
    nudity:
      description: |-
        Prints description of pc's nudity

        Example:
        ```
        You feel them ogle your <<nudity>>.
        ```

        Does not take into account over_top or over_bottom. Consider refactoring
      tags: ["refactor", "text"]
    number:
      description: |-
        Prints a number as spelled-out cardinal form (first, second, etc)

        Numbers outside of 100 are not spelled-out for style reasons

        `<<number numberAsInt output>>`
        - **numberAsInt**: `number` - number to convert
        - **output** _optional_: `string` - how to output text
          - `default`: Prints output
          - `"silent"`: Stores output in `_text_output`
      parameters:
        - 'number |+ "silent"'
      tags: ["text", "temp"]
    Number:
      description: |-
        Prints a number as capitalised spelled-out cardinal form (First, Second, etc)

        Numbers outside of 100 are not spelled-out for style reasons

        `<<Number numberAsInt>>`
        - **numberAsInt**: `number` - number to convert
      parameters:
        - "number"
      tags: ["text"]
    numberify:
      name: numberify
    numberpool:
      name: numberpool
      tags: ["unused"]
    numberslider:
      name: numberslider
    nurseinit:
      name: nurseinit
    office_manager:
      name: office_manager
    officeafterhours:
      name: officeafterhours
    officebusinesshours:
      name: officebusinesshours
    officecheckcomplaints:
      name: officecheckcomplaints
    officecomplaintsextreme:
      name: officecomplaintsextreme
    officecomplaintshigh:
      name: officecomplaintshigh
    officecomplaintslow:
      name: officecomplaintslow
    officecomplaintsmedium:
      name: officecomplaintsmedium
    officeliftdescend:
      name: officeliftdescend
    officepassout:
      name: officepassout
    officestreakactions:
      name: officestreakactions
    officestreakhide:
      name: officestreakhide
    officeupdatecomplaints:
      name: officeupdatecomplaints
    ohe:
      description: |-
        Prints singular pronoun for current npc regardless of being a beast (`<<bhe>>`) or man (`<<he>>`)

        Eligible for deprecation. Consider refactoring this functionality into `<<he>>`
      tags: ["text", "refactor"]
    oldWardrobeList:
      description: |-
        Printss provided slots of wardrobe

        `<<oldWardrobeList slot showType?>>`
        - **slot**: `string` - clothing slot to enumerate from current wardrobe
          - %clothesTypesDesc%
        - **showType** _optional_: `string` - outfits or non-outfits
          - Defaults to showing both
          - `"outfits"` | `"non-outfits"`
      parameters:
        - '%clothesTypes% |+ "outfits"|"non-outfits"'
      tags: ["dom", "legacy"]
    oldWardrobeListDisplay:
      deprecatedSuggestions:
        - wardrobeContents
      description: |-
        Enumerates and prints wardrobe contents
      tags: ["dom", "legacy"]
    oldWardrobeMinorOptions:
      description:
        - Enumerates and prints alternative wear options for current clothing
      tags: ["dom", "legacy"]
    openinghours:
      description: |-
        Prints `A sign reads "Opening hours: 8:00 - 21:00"` in user set time format
      tags: ["text"]
    optionsadvanced:
      name: optionsadvanced
    optionsinformation:
      name: optionsinformation
    optionsExportImport:
      name: optionsExportImport
    optionsgeneral:
      name: optionsgeneral
    optionsperformance:
      name: optionsperformance
    optionstheme:
      name: optionstheme
    optionsThemeDefault:
      name: optionsThemeDefault
    oral:
      name: oral
    oraldifficulty:
      description: |-
        Prints color-coded adjective of oral action difficulty in current combat
      tags: ["text"]
    oralejacstat:
      name: oralejacstat
    oralnew:
      name: oralnew
    oralpassage:
      name: oralpassage
    oralskill:
      description: |-
        Adds oral skill to pc's state

        `$oralskill` is a measure of pc's proficiency giving oral where 0 is awkward (0-1,000)

        `<<oralskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    oralskilluse:
      name: oralskilluse
    oralstat:
      name: oralstat
    oralswallownew:
      name: oralswallownew
    oraltext:
      description: |-
        Prints color-coded adjective of active oral skill usage
      tags: ["text"]
    oralvirginitywarning:
      description: |-
        Prints `This action will take your oral virginity.` if oral virginity can still be lost

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    orgasm:
      name: orgasm
    orgasmbeach:
      name: orgasmbeach
    orgasmbog:
      name: orgasmbog
    orgasmcount:
      name: orgasmcount
    orgasmforest:
      name: orgasmforest
    orgasmHourlyRecovery:
      name: orgasmHourlyRecovery
    orgasmLocation:
      name: orgasmLocation
    orgasmstage:
      name: orgasmstage
    orgasmstat:
      name: orgasmstat
    orgasmstreet:
      name: orgasmstreet
    orgasmTrait:
      description: |-
        Prints `| Hedonist` or `| Orgasm Addict` depending on pc's `$submissive`
      tags: ["unused", "text"]
    orphanageWard:
      name: orphanageWard
    orphanageWardOptions:
      name: orphanageWardOptions
    otherOutfitChecks:
      name: otherOutfitChecks
    othersFeelings:
      name: othersFeelings
    outergoo:
      name: outergoo
    outfit:
      description: |-
        Prints name of middle clothing layer as outfit or if it was an outfit

        Also sets `$stripset` to determine if both layers should be removed together
      tags: ["text"]
    outfitChecks:
      description: |-
        Sets temporary variables according to state of pc's dress

        Bools:
        - `_underOutfit`:  under clothes are complete outfit
        - `_middleOutfit`: middle clothes are complete outfit
        - `_overOutfit`: over clothes are complete outfit

        - `_underNaked`: under clothes are completely naked
        - `_middleNaked`: middle clothes are completely naked
        - `_overNaked`: over clothes are completely naked

        - `_shirtless`: no upperwear, underwear or chest is exposed
        - `_bottomExposed`: no lowerwear, underwear or genitals are exposed
        - `_skirtExposed`: lowerwear, skirt exposes underwear or genitals
        - `_bottomless`: bottom clothes are completely naked
        - `_topless`: top clothes are completely naked
        - `_fullyNaked`: all clothes are completely naked

        Temporary $worn[slot] variables
        - `_top`: first visible piece of upperwear
        - `_topUnder`: first visible piece beneath top
        - `_bottom`: first visible piece of lowerwear
        - `_bottomUnder`: first visible piece beneath bottom
      tags: ["temp"]
    outfitChecksExposed:
      name: outfitChecksExposed
    outfitEditor:
      name: outfitEditor
    outfitEditorDefaultFilter:
      name: outfitEditorDefaultFilter
    outfitEditorFilter:
      name: outfitEditorFilter
    outfitEditorItem:
      name: outfitEditorItem
    outfitEditorItemClothes:
      name: outfitEditorItemClothes
    outfitEditorItemColour:
      name: outfitEditorItemColour
    outfitEditorList:
      name: outfitEditorList
    outfitEditorPageControls:
      name: outfitEditorPageControls
    outfitEditorPageSetup:
      name: outfitEditorPageSetup
    outfitEditorUpdateFilter:
      name: outfitEditorUpdateFilter
    outfiton:
      name: outfiton
      tags: ["unused"]
    OutfitShop:
      name: OutfitShop
    overheadon:
      name: overheadon
      tags: ["unused"]
    overheadruined:
      description: |-
        Destroys pc's over_head slot clothing, whether worn or carried

        `<<overheadruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    overheadsend:
      name: overheadsend
      tags: ["unused"]
    overheadsteal:
      name: overheadsteal
      tags: ["unused"]
    overheadstrip:
      name: overheadstrip
      tags: ["unused"]
    overheadundress:
      name: overheadundress
    overheadwear:
      name: overheadwear
      tags: ["unused"]
    overlayReplace:
      name: overlayReplace
    overlower:
      name: overlower
      tags: ["unused"]
    overlowerhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"over_lower"` slot
      tags: ["unused"]
    overlowerimg:
      name: overlowerimg
    overlowerintegrity:
      name: overlowerintegrity
      tags: ["unused"]
    overlowerit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"over_lower"` slot
    overloweritis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"over_lower"` slot
    overloweron:
      name: overloweron
      tags: ["unused"]
    overlowerplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"over_lower"` slot
    overlowerruined:
      description: |-
        Destroys pc's over_lower slot clothing, whether worn or carried

        `<<overlower noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    overlowersend:
      name: overlowersend
      tags: ["unused"]
    overlowersteal:
      name: overlowersteal
      tags: ["unused"]
    overlowerstrip:
      name: overlowerstrip
    overlowerthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"over_lower"` slot
    overlowerundress:
      name: overlowerundress
    overlowerwear:
      name: overlowerwear
    OverOutfitShop:
      name: OverOutfitShop
    overpulldown:
      description: |-
        Prints verb of player pulling lower clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["unused", "text", "refactor"]
    overpullsdown:
      description: |-
        Prints plural verb of player pulling lower clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["unused", "text", "refactor"]
    overpullsup:
      description: |-
        Prints verb of player pulling upper clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["unused", "text", "refactor"]
    overpullup:
      description: |-
        Prints verb of player pulling upper clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["unused", "text", "refactor"]
    overruined:
      description: |-
        Destroys pc's over_upper and over_lower slot clothing, whether worn or carried

        `<<overruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    OverTopShop: #undeclared
      name: OverTopShop
    overupperhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"over_upper"` slot
      tags: ["unused"]
    overupperimg:
      name: overupperimg
    overupperintegrity:
      name: overupperintegrity
      tags: ["unused"]
    overupperit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"over_upper"` slot
    overupperitis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"over_upper"` slot
      tags: ["unused"]
    overupperon:
      name: overupperon
      tags: ["unused"]
    overupperplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"over_upper"` slot
    overupperruined:
      description: |-
        Destroys pc's over_upper slot clothing, whether worn or carried

        `<<overupperruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    overuppersend:
      name: overuppersend
      tags: ["unused"]
    overuppersteal:
      name: overuppersteal
      tags: ["unused"]
    overupperstrip:
      name: overupperstrip
    overupperthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"over_upper"` slot
    overupperundress:
      name: overupperundress
    overupperwear:
      name: overupperwear
    overworld_nickname:
      description: |-
        Prints pc's nickname used in the overworld

        See `<<underworld_nickname>>`

        `<<overworld_nickname textTransform>>`
        - **textTransform**: `string` - transformation to apply to text before printing
          - `"cap"`: Capitalise
      parameters:
        - '|+ "cap"'
      tags: ["text"]
    overwriteoutfit:
      name: overwriteoutfit
    oxford:
      name: oxford
    oxfordeventend:
      name: oxfordeventend
    oxfordexposed:
      name: oxfordexposed
      tags: ["unused"]
    oxfordquick:
      name: oxfordquick
    oxygen:
      name: oxygen
    oxygencaption:
      name: oxygencaption
    oxygenrefresh:
      name: oxygenrefresh
    pain:
      description: |-
        Adds pain to pc's state

        `$pain` is pc's pain amount where 0 is not-in-pain (0-200)

        `<<pain change modifier?>>`
        - **change**: `number` - +/- change to apply
        - **modifier** _optional_: `number` - multiplier mod to apply to change
          - Defaults to `4`
      parameters:
        - "number |+ number"
    paincaption:
      name: paincaption
    painclamp:
      name: painclamp
    panties:
      description: |-
        Prints descriptor of active NPC's inner_lower clothing

        See `<<bra>>` for inner_upper clothing or `<<skirt>>` for lower clothing

        See `<<npcClothesText>>` for full name of clothes
      tags: ["text"]
    pantsable:
      description: |-
        Checks if pc's lower clothing can be pulled down/ flipped up

        `_pantsable` will be set to 0 or 1 if lower can be pulled down
        `_upskirt` will be set to 0 or 1 if lower can be flipped up
      tags: ["temp"]
    pantsdowncomments:
      name: pantsdowncomments
    pantsdownevents:
      name: pantsdownevents
    pantsdowngender:
      name: pantsdowngender
    pantsdownlewd:
      name: pantsdownlewd
    pantsdownscene:
      name: pantsdownscene
    pantsdowntime:
      name: pantsdowntime
    parasite:
      name: parasite
    parasiteinit:
      name: parasiteinit
    park:
      name: park
    parkeventend:
      name: parkeventend
    parkex1:
      name: parkex1
    parkex2:
      name: parkex2
    parkex3:
      name: parkex3
    parkexposed:
      name: parkexposed
      tags: ["unused"]
    parkquick:
      name: parkquick
    parkrun:
      name: parkrun
    pass:
      description: |-
        Advances time by an amount

        `<<pass timeToPass units?>>`
        - **timeToPass**: `number` - number of units
        - **units** _optional_: `string` - units of number
          - `"sec"` | `"seconds"` | `"min"` | `"mins"` | `"minute"` | `"minutes"` | `"hour"` | `"hours"` | `"day"` | `"days"` | `"week"` | `"weeks"`
          - Defaults to `"min"`
      parameters:
        - 'number |+ "sec"|"seconds"|"min"|"mins"|"minute"|"minutes"|"hour"|"hours"|"day"|"days"|"week"|"weeks"'
    passagestrip:
      description: |-
        Strips player and prints a paragraph of description of the sequence

        `<<passagestrip limit?>>`
        - **limit** _optional_: `string` - maximum layer to strip down to
          - `"undies"`
          - `"bottoms"`
      parameters:
        - '|+ "undies"|"bottoms"'
    passiveStudy:
      name: passiveStudy
    passout:
      description: |-
        Applies stat changes from passing out and ruffles hair
    passout_flats:
      description: |-
        Passes out and prints links for players in at the Flats
      tags: ["links"]
    passout_mines:
      description: |-
        Passes out and prints links for players in the Mines
      tags: ["links"]
    passout_moor:
      description: |-
        Passes out and prints links for players in the Moor
      tags: ["links"]
    passout_prison:
      description: |-
        Passes out and prints links for players in Prison
      tags: ["links"]
    passout_rut:
      description: |-
        Passes out and prints links for players in the Prison Rut
      tags: ["links"]
    passoutadultshop:
      description: |-
        Passes out and prints links for players in the Adult Shop
      tags: ["links"]
    passoutalley:
      description: |-
        Passes out and prints links for players in the Alley
      tags: ["links"]
    passoutarcade:
      description: |-
        Passes out and prints links for players in the Arcade
      tags: ["links"]
    passoutasylum:
      description: |-
        Passes out and prints links for players in the Asylum
      tags: ["links"]
    passoutbeach:
      description: |-
        Passes out and prints links for players at the Beach
      tags: ["links"]
    passoutbog:
      description: |-
        Passes out and prints links for players in the Bog
      tags: ["links"]
    passoutbus:
      description: |-
        Passes out and prints links for players on the Bus
      tags: ["links"]
    passoutcatacombs:
      description: |-
        Passes out and prints links for players in the Catacombs
      tags: ["links"]
    passoutcave:
      description: |-
        Passes out and prints links for players in the Seaside Cave
      tags: ["links"]
    passoutcompound:
      description: |-
        Passes out and prints links for players at the Compound
      tags: ["links"]
    passoutdrain:
      description: |-
        Passes out and prints links for players in the Storm Drain
      tags: ["links"]
    passoutfarmroad:
      description: |-
        Passes out and prints links for players along the Farm Road
      tags: ["links"]
    passoutforest:
      description: |-
        Passes out and prints links for players in the Forest
      tags: ["links"]
    passouthome:
      description: |-
        Passes out and prints links for players at the Orphanage
      tags: ["links"]
    passouthospital:
      description: |-
        Passes out and prints links for players in the Hospital
      tags: ["links"]
    passoutlake:
      description: |-
        Passes out and prints links for players at the Lake
      tags: ["links"]
    passoutpark:
      description: |-
        Passes out and prints links for players in the Park
      tags: ["links"]
    passoutpirates:
      description: |-
        Passes out and prints links for players on the Pirate Ship
      tags: ["links"]
    passoutremy:
      description: |-
        Passes out and prints links for players in Remy's hands
      tags: ["links"]
    passoutsea:
      description: |-
        Passes out and prints links for players at Sea
      tags: ["links"]
    passoutshop:
      description: |-
        Passes out and prints links for players in the Shopping Centre
      tags: ["links"]
    passoutstreet:
      description: |-
        Passes out and prints links for players on the Street
      tags: ["links"]
    passouttemple:
      description: |-
        Passes out and prints links for players in the Temple (Sydney does not rescue)
      tags: ["links"]
    passouttempleSydney:
      description: |-
        Passes out and prints links for players in the Temple (Sydney rescues)
      tags: ["links"]
    passouttentacleworld:
      description: |-
        Passes out and prints links for players in the Tentacle World
      tags: ["links"]
    passouttrash:
      description: |-
        Passes out and prints links for players in the Landfill
      tags: ["links"]
    passPercent:
      description: |-
        Prints `| X% pass chance`

        `<<passPercent percentAsInt>>`
        - **percentAsInt**: `number` - percent to output
          `0-100`
      parameters:
        - "number"
      tags: ["text"]
    passTimeUntil:
      description: |-
        Advances time until hours:minutes exactly

        `<<passTimeUntil hour minute?>>`
        - **hour**: `number` - hour to advance to
        - **minute** _optional_: `number` - minute in hour to advance to
          - Defaults to `0`
      parameters:
        - "number |+ number"
    pbhairinit:
      name: pbhairinit
    pcFarmBirth:
      name: pcFarmBirth
    pcpetname:
      description: |-
        Print's named NPC's pet name for pc's

        See `<<pcPetname>>` for capitalised version

        Uses too many versions of NPC's names as inputs. Consider refactoring to use just one

        `<<pcpetname npcName npcEmotionMod?>>`
        - **npcName**: `string` - example kind to output
          - `"Avery"` | `"Wraith"`
        - **npcEmotionMod** _optional_: `string` - npc's emotional intention when using this pet name
          - `"angry"` | `"nice`
      parameters:
        - '"Avery"|"Wraith"'
        - '"Wraith" |+ "angry"|"nice"'
      tags: ["text"]
    pcPetname:
      description: |-
        Print's capitalised prose of named NPC's pet name for pc's

        See `<<pcpetname>>` for non-capitalised version

        Does not take into account second parameter of base widget. Consider refactoring

        `<<pcPetname npcName>>`
        - **npcName**: `string` - example kind to output
          - `"Avery"` | `"Wraith"`
      parameters:
        - '"Avery"|"Wraith"'
      tags: ["text", "refactor"]
    pcPregnancyRevealToAlex:
      name: pcPregnancyRevealToAlex
    penetrationPainCalculate:
      name: penetrationPainCalculate
    peniledifficulty:
      description: |-
        Prints color-coded adjective of penile action difficulty in current combat
      tags: ["text"]
    penileejacstat:
      name: penileejacstat
    penileskill:
      description: |-
        Adds penile skill to pc's state

        `$penileskill` is a measure of pc's proficiency using their penis where 0 is awkward (0-1,000)

        `<<penileskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    penileskilluse:
      name: penileskilluse
    penilestat:
      name: penilestat
    peniletext:
      description: |-
        Prints color-coded adjective of active penile skill usage
      tags: ["text"]
    penilevirginitywarning:
      description: |-
        Prints `This action will deflower you` if penile virginity can still be lost and not protected by strap-on

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    penis:
      name: penis
    penis_lube_amount:
      description: |-
        Prints the amount of lube around player penis

        Relies on `_penis_lube_amount` being set already

        See `<<penis_lube_text>>`
      tags: ["text", "temp"]
    penis_lube_text:
      description: |-
        Prints qualified description of lube around the penis prior to penetration

        Example:
        ```
        <<penis_lube_text>> the example can be performed without a problem.
        ```
      tags: ["text"]
    penisactionDifficulty:
      name: penisactionDifficulty
    penisactionDifficultyTentacle:
      name: penisactionDifficultyTentacle
    penisActionInit:
      name: penisActionInit
    penisActionInitStruggle:
      name: penisActionInitStruggle
    penisActionInitTentacle:
      name: penisActionInitTentacle
    penisActions:
      name: penisActions
    penisActionsTentacle:
      name: penisActionsTentacle
    penises:
      name: penises
    penisinit:
      name: penisinit
    penisinspection:
      name: penisinspection
    penisinspection2:
      name: penisinspection2
    penisinspectionstudents:
      name: penisinspectionstudents
    penisraped:
      name: penisraped
    penisremark:
      name: penisremark
      tags: ["unused"]
    Penisremark:
      name: Penisremark
      tags: ["unused"]
    penisremarkcomma:
      name: penisremarkcomma
      tags: ["unused"]
    Penisremarkcomma:
      name: Penisremarkcomma
      tags: ["unused"]
    penisremarkcommaquote:
      name: penisremarkcommaquote
      tags: ["unused"]
    Penisremarkcommaquote:
      name: Penisremarkcommaquote
      tags: ["unused"]
    penisremarkquote:
      name: penisremarkquote
      tags: ["unused"]
    Penisremarkquote:
      name: Penisremarkquote
    penisremarkstop:
      name: penisremarkstop
      tags: ["unused"]
    Penisremarkstop:
      name: Penisremarkstop
      tags: ["unused"]
    penisremarkstopquote:
      name: penisremarkstopquote
      tags: ["unused"]
    Penisremarkstopquote:
      name: Penisremarkstopquote
    penisSimple:
      description: |-
        Prints `strap-on` or `penis` based on pc's active penis
    penissize:
      name: penissize
    people:
      description: |-
        Prints `men and women` unless player has mono-gendered the world

        See `<<peopley>>`
      tags: ["text"]
    peopley:
      description: |-
        Prints `boys and girls` unless player has mono-gendered the world

        See `<<people>>`
      tags: ["text"]
    peppersprays:
      name: peppersprays
    perNPCSettingsMenu:
      name: perNPCSettingsMenu
    person:
      name: person
    person_dance:
      name: person_dance
    person1:
      name: person1
    person2:
      name: person2
    person3:
      name: person3
    person4:
      name: person4
    person5:
      name: person5
    person6:
      name: person6
    personname:
      name: personname
    personpenis:
      name: personpenis
    persons:
      name: persons
    personselect:
      name: personselect
    personsimple:
      name: personsimple
    persony:
      description: |-
        Prints `boy` or `girl` randomly based on world gender distribution

        Extremely different behavior to `<<person>>`. Consider refactoring
      tags: ["text", "refactor"]
    PetShopBoughtItem:
      name: PetShopBoughtItem
    pharmnurseinit:
      name: pharmnurseinit
      tags: ["unused"]
    pheat:
      name: pheat
    pher:
      description: |-
        Prints singular possessive pronoun of pc (her/his)

        See `<<pHer>>` for capitalised prose, or `<<phers>>` as predicate adjective
      tags: ["text"]
    pHer:
      description: |-
        Prints capitalised singular possessive pronoun of pc (Her/His)

        See `<<pher>>` for uncapitalised prose
      tags: ["text"]
    phers:
      description: |-
        Prints singular possessive pronoun as predicate adjective of pc (his/hers)

        See `<<pher>>` for general possessive pronoun
      tags: ["text"]
    pherself:
      description: |-
        Prints singular objective pronoun as reflexive form of pc (herself/himself)

        See `<<pHerself>>` for capitalised prose
      tags: ["text"]
    pHerself:
      description: |-
        Prints capitalised singular objective pronoun as reflexive form of pc (Herself/Himself)

        See `<<pherself>>` for uncapitalised prose
      tags: ["unused", "text"]
    phim:
      description: |-
        Prints singular objective pronoun as reflexive form of pc (her/him)

        See `<<pHim>>` for capitalised prose
      tags: ["text"]
    pHim:
      description: |-
        Prints capitalised singular objective pronoun as reflexive form of pc (Her/Him)

        See `<<phim>>` for uncapitalised prose
      tags: ["text"]
    photo_end:
      name: photo_end
    photo_evidence_upload:
      name: photo_evidence_upload
    physicalAdjustments:
      name: physicalAdjustments
    physicalAdjustmentsInit:
      name: physicalAdjustmentsInit
    physique:
      name: physique
    physique_loss:
      name: physique_loss
    physiquedifficulty:
      name: physiquedifficulty
    pickupSexToy:
      name: pickupSexToy
    pillory_type:
      name: pillory_type
    pillorypeniscomment:
      name: pillorypeniscomment
    pinchEnd:
      description: |-
        Restores the values frozen by `<<pinchStart>>`, keeping the player's progress of reading the book

        If the player does not currently have the book, either stolen or rented, also removes Pinch from persistent NPCs
    pinchhe:
      name: pinchhe
    pinchHe:
      name: pinchHe
    pinchhim:
      name: pinchhim
    pinchhis:
      name: pinchhis
    pinchHis:
      name: pinchHis
    pinchStart:
      description: |-
        Freezes the story variables, then modifies weather and time
    pirate_attack_end:
      description: |-
        Unsets pirate attack variables to end the event
    pirate_attack_init:
      description: |-
        Sets pirate attack variables to initial values to start the event
    pirate_attention:
      description: |-
        Adds attention away from the pirates to pc's state

        `$pirate_attention` is a measure of how distracting the player is during pirate events where 0 is not distracting (0+)

        `<<pirate_attention change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    pirate_clothes_up:
      description: |-
        Dresses pc in pirate clothes appropriate to their status
    pirate_mate_work:
      description: |-
        Prints passage of pc being assigned a task for being in a location

        `<<pirate_mate_work location>>`
        - **location**: `string` - current location of pc
          - `"deck"` | `"cabin"` | `"bilge"`
      parameters:
        - '"deck"|"cabin"|"bilge"'
      tags: ["text"]
    pirate_mate_work_end_links:
      description: |-
        Prints end links after pirate mate work has been completed

        Relies on `$phase` being set from `<<pirate_mate_work>>` to determine location to send pc back to
      tags: ["links"]
    pirate_rescue:
      description: |-
        Enables rescue from combat if pirate rank is high enough
    pirate_status:
      description: |-
        Changes `$pirate_status` as long as appropriate tier is met

        `$pirate_status` is a `0-100` measurement of the pc's status amongst the pirates

        If a tier is provided, it must match that tier exactly

        `<<pirate_status change qualifyingTier?>>`
        - **change**: `number` - status to gain
        - **qualifyingTier**: `string` - tier to meet to gain status
          - Defaults to `1`
      parameters:
        - 'number |+ "scum"|"mate"'
    pirate_watch:
      description: |-
        Changes `$pirate_watch` by value

        `$pirate_watch` is a `0-100` measurement of how much attention the player has gained from pirates noticing them

        `<<pirate_watch change>>`
        - **change**: `number` - amount to change by
      parameters:
        - "number"
    plant_details:
      description: |-
        Prints season and location appropriate details for a plant person's hair

        `<<plant_details locationOverride?>>`
        - **locationOverride** _optional_: `string` - location to match details to
          - `default`: pc's current `$location`
          - `"moor"` | `"forest"` | `"bog"`
      parameters:
        - '|+ "moor"|"forest"|"bog"'
      tags: ["text"]
    Plant_details:
      description: |-
        Prints capitalised season and location appropriate details for a plant person's hair

        `<<Plant_details locationOverride?>>`
        - **locationOverride** _optional_: `string` - location to match details to
          - `default`: pc's current `$location`
          - `"moor"` | `"forest"` | `"bog"`
      parameters:
        - '|+ "moor"|"forest"|"bog"'
      tags: ["text"]
    plantlower:
      name: plantlower
    plantspeech:
      name: plantspeech
    plantup:
      name: plantup
    plantupper:
      name: plantupper
    player-base-body:
      name: player-base-body
    playerEndWaterBreaking:
      name: playerEndWaterBreaking
      tags: ["unused"]
    playerPrebirth:
      name: playerPrebirth
    playerPregnancy:
      name: playerPregnancy
    playerPregnancyAttempt:
      name: playerPregnancyAttempt
    playerPregnancyHawkAttempt:
      name: playerPregnancyHawkAttempt
    playLinePool:
      name: playLinePool
    playReadiness:
      name: playReadiness
    playWithBreasts:
      name: playWithBreasts
    plot_effects:
      name: plot_effects
    plots_init:
      name: plots_init
    plural:
      description: |-
        Prints a present indicative (are/is) for provided clothing slot

        `<<plural slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
    pmother:
      description: |-
        Prints respectful title for pc as a parent (mother/father)

        See `<<pMother>>` for capitalised prose
      tags: ["unused", "text"]
    pMother:
      description: |-
        Prints capitalised respectful title for pc as a parent (Mother/Father)

        See `<<pmother>>` for uncapitalised prose
      tags: ["unused", "text"]
    police_computer_action:
      name: police_computer_action
    popcornEat:
      name: popcornEat
    popcornSpill:
      name: popcornSpill
      tags: ["text"]
    portalPantiesClear:
      name: portalPantiesClear
    portalPantiesDisplay:
      name: portalPantiesDisplay
      tags: ["unused"]
    portalPantiesDisplayItem:
      name: portalPantiesDisplayItem
    portalPantiesDisplayMessage:
      name: portalPantiesDisplayMessage
    portalPantiesDisplayVirginity:
      name: portalPantiesDisplayVirginity
    portalPantiesFillHole:
      name: portalPantiesFillHole
    portalPantiesFuck:
      name: portalPantiesFuck
    portalPantiesPass:
      name: portalPantiesPass
      tags: ["unused"]
    portalPantiesPlayerCum:
      name: portalPantiesPlayerCum
      tags: ["unused"]
    portalPantiesPortalCum:
      name: portalPantiesPortalCum
    portalPantiesSetup:
      name: portalPantiesSetup
      tags: ["unused"]
    postMirror:
      name: postMirror
    pound_compete_text:
      name: pound_compete_text
    pound_init:
      name: pound_init
    pound_muzzle:
      name: pound_muzzle
    pound_punishment_links:
      name: pound_punishment_links
    pound_stats:
      name: pound_stats
    pound_status:
      name: pound_status
    pound_text:
      name: pound_text
    pound_walk_end:
      name: pound_walk_end
    ppackbrother:
      name: ppackbrother
    pPackbrother:
      name: pPackbrother
    ppackbrothers:
      name: ppackbrothers
    pPackbrothers:
      name: pPackbrothers
    prayerend:
      name: prayerend
    prayerRoomEnd:
      description: |-
        Restores the values frozen by at the start of the prayer room scene

        Keeps Sydney at the first slot of `$NPCList`

        Keeps the world corruption and some other values that can be modified during the scene
    prayoptions:
      name: prayoptions
    PregEventsResult:
      name: PregEventsResult
    pregnancyBabyText:
      name: pregnancyBabyText
    pregnancyBirthBlackWolf:
      name: pregnancyBirthBlackWolf
    pregnancyBirthWolfCave:
      name: pregnancyBirthWolfCave
    pregnancyDailyEvent:
      name: pregnancyDailyEvent
    pregnancyFeats:
      name: pregnancyFeats
    pregnancyGendersText:
      name: pregnancyGendersText
    pregnancyMorningAfterPill:
      name: pregnancyMorningAfterPill
    pregnancyPassout:
      name: pregnancyPassout
    pregnancySettings:
      name: pregnancySettings
    pregnancyTest:
      name: pregnancyTest
    pregnancyType:
      name: pregnancyType
    pregnancyVar:
      name: pregnancyVar
    preMirror:
      name: preMirror
    prenancyObjectRepair:
      name: prenancyObjectRepair
    presetConfirm:
      description: |-
        Validates and applies Preset object into state variables

        Relies on `_validatorObject` already being set

        `<<presetConfirm presetObject useAltLabel?>>`
        - **presetObject**: `object` - object to be imported
        - **useAltLabel** _optional_: `bool` - truthy indicating to use sub-labels
      parameters:
        - var|bareword
        - '"pronoun"|"gender"|"penissize"|"breastsize"|"bottomsize"|"gender_body"|"ballsExist"|"freckles" |+ bool|text|number'
      tags: ["temp"]
    presetConfirmDetails:
      name: presetConfirmDetails
    presets:
      description: |-
        Applies a preset to game and refreshes settings display to provided page

        `<<presets presetName page? randomizeResult?>>`
        - **presetName**: `string` - name of preset to apply
        - **page** _optional_: `string` - page to display after preset is applied
          - Defaults to "characterSettings". See <<displaySettings>> for additional values
        - **randomizeResult** _optional_: `string` - JSON object containing preset results. Generally the return of randomizeSettings()
      parameters:
        - string |+ string
        - '"randomize" &+ string &+ bareword|var'
    priceSettings:
      name: priceSettings
    priest:
      description: |-
        Prints `priest` or `priestess` depending on active NPC pronoun
      tags: ["text"]
    priestapo:
      description: |-
        Prints `priest's` or `priestess'` depending on active NPC pronoun
      tags: ["text"]
    priestAttack:
      name: priestAttack
    priests:
      description: |-
        Prints `priests` or `priestesses` depending on active NPC pronoun
      tags: ["text"]
    printbuysendhome:
      name: printbuysendhome
    printChastity:
      description: |-
        Prints `$worn.genitals.name`

        Used in a single spot that can be escaped. Consider refactoring
      tags: ["text", "refactor"]
    printCombatMenu:
      name: printCombatMenu
    printcursed:
      name: printcursed
    printmoney:
      description: |-
        Prints amount in pennies as formatted currency

        `<<printmoney amountInPennies classlist?>>`
        - **amountInPennies**: `number` - amount in pennies, positive or negative
        - **classlist** _optional_: `number` - DOM classlist to be used to color text
          - Defaults to `"gold"`
      parameters:
        - "number |+ text"
      tags: ["text"]
    printpreggy:
      name: printpreggy
    printShopColourOptions:
      name: printShopColourOptions
    printTipsList:
      name: printTipsList
    prison_attention:
      name: prison_attention
    prison_birds:
      name: prison_birds
    prison_birds_text:
      name: prison_birds_text
    prison_bondage_removal:
      name: prison_bondage_removal
    prison_day:
      name: prison_day
    prison_detach_leash:
      name: prison_detach_leash
    prison_end:
      name: prison_end
    prison_feat_check:
      name: prison_feat_check
    prison_guard_greet:
      name: prison_guard_greet
    prison_guard_watch:
      name: prison_guard_watch
    prison_guards:
      name: prison_guards
    prison_hope:
      name: prison_hope
    prison_init:
      name: prison_init
    prison_inmates:
      name: prison_inmates
    prison_laundry_options:
      name: prison_laundry_options
    prison_list:
      name: prison_list
    prison_list_dark:
      name: prison_list_dark
    prison_list_result:
      name: prison_list_result
    prison_list_speech:
      name: prison_list_speech
    prison_map:
      name: prison_map
    prison_medical_options:
      name: prison_medical_options
    prison_punishment_end:
      name: prison_punishment_end
    prison_punishment_init:
      name: prison_punishment_init
    prison_reb:
      name: prison_reb
    prison_rep:
      name: prison_rep
    prison_repunishment_options:
      name: prison_repunishment_options
    prison_revolt_options:
      name: prison_revolt_options
    prison_sleep_options:
      name: prison_sleep_options
    prison_spire_options:
      name: prison_spire_options
    prison_teeth:
      name: prison_teeth
    prison_teeth_text:
      name: prison_teeth_text
    prison_unbind:
      name: prison_unbind
    prison_work:
      name: prison_work
    prisoncrimeUp:
      name: prisoncrimeUp
    produceDisplay:
      name: produceDisplay
    produceDisplayConfirm:
      name: produceDisplayConfirm
    produceDisplayItem:
      name: produceDisplayItem
    prof:
      description: |-
        Adds proficiency to pc's stats for given category

        `$prof[X]` are amount of player skill in given category where 0 is unskilled (0-1,000)

        `<<prof category change>>`
        - **category**: `string` - category of proficiency to add
          - `"spray"` | `"net"` | `"whip"` | `"baton"`
        - **change**: `number` - +/- change to apply
      parameters:
        - '"spray"|"net"|"whip"|"baton" &+ number'
    projectoptions:
      name: projectoptions
    promiscuity1:
      name: promiscuity1
    promiscuity2:
      name: promiscuity2
    promiscuity3:
      name: promiscuity3
    promiscuity4:
      name: promiscuity4
    promiscuity5:
      name: promiscuity5
    promiscuity6:
      name: promiscuity6
      tags: ["unused"]
    promiscuityN:
      name: promiscuityN
    promiscuous:
      description: |-
        Prints `Promiscuous X` with appropriate color for level

        `<<promiscuous level>>`
        - **level**: `number` - required level for this action
          - `1-6`: level and color
          - `0`: just text
      parameters:
        - "number"
      tags: ["unused", "text"]
    promiscuous1:
      description: |-
        Prints `Promiscuous 1` with appropriate color for level
      tags: ["text"]
    promiscuous2:
      description: |-
        Prints `Promiscuous 2` with appropriate color for level
      tags: ["text"]
    promiscuous3:
      description: |-
        Prints `Promiscuous 3` with appropriate color for level
      tags: ["text"]
    promiscuous4:
      description: |-
        Prints `Promiscuous 4` with appropriate color for level
      tags: ["text"]
    promiscuous5:
      description: |-
        Prints `Promiscuous 5` with appropriate color for level
      tags: ["text"]
    promiscuous6:
      description: |-
        Prints `!Promiscuous 6!` with appropriate color for level
      tags: ["unused", "text"]
    prop:
      name: prop
    prostate:
      description: |-
        Prints `womb` or `prostate` depending on if player has vagina
      tags: ["text"]
    pshe:
      description: |-
        Prints singular pronoun of pc (he/she)

        See `<<pShe>>` for capitalised prose
      tags: ["text"]
    pShe:
      description: |-
        Prints capitalised singular pronoun of pc (He/She)

        See `<<pshe>>` for uncapitalised prose
      tags: ["text"]
    pshes:
      description: |-
        Prints singular pronoun as is/has contraction of pc (he's/she's)

        See `<<pShes>>` for capitalised prose
      tags: ["text"]
    pShes:
      description: |-
        Prints capitalised singular pronoun as is/has contraction of pc (He's/She's)

        See `<<pshes>>` for uncapitalised prose
      tags: ["text"]
    psir:
      description: |-
        Prints respectful address for pc (sir/ma'am)

        See `<<pSir>>` for capitalised prose
      tags: ["text"]
    pSir:
      description: |-
        Prints capitalised respectful address for pc (Sir/Ma'am)

        See `<<pSir>>` for capitalised prose
      tags: ["unused", "text"]
    pub_cave_arrival:
      name: pub_cave_arrival
    pub_cave_intro:
      name: pub_cave_intro
    pubfameChange:
      name: pubfameChange
    pubfameComplete:
      name: pubfameComplete
    pubfameDifficulty:
      name: pubfameDifficulty
    pubfameOptions:
      name: pubfameOptions
    pubfameRemyPassword:
      name: pubfameRemyPassword
    pubfameReset:
      name: pubfameReset
    pulldown:
      description: |-
        Prints verb of player pulling lower clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["text", "refactor"]
    pulldownall:
      description: |-
        Prints description of player pulling all lower clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["text", "refactor"]
    pullsdown:
      description: |-
        Prints plural verb of player pulling lower clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["unused", "text", "refactor"]
    pullsup:
      description: |-
        Prints plural verb of player pulling upper clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["text", "refactor"]
    pullup:
      description: |-
        Prints verb of player pulling upper clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["text", "refactor"]
    pullupall:
      description: |-
        Prints description of player pulling all upper clothing into an exposed state

        Does not actually set clothing into exposed or pulled state. Consider refactoring
      tags: ["text", "refactor"]
    purity:
      description: |-
        Adds purity to pc's state, with appropriate modifiers

        `$purity` is measure of pc's physical distance from sex where 0 is demonic (0-1,000)

        Dark clothing penalises awareness reductions. Consider refactoring

        `<<awareness change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    push_nnpc_genderknown:
      name: push_nnpc_genderknown
    pushClothingCaption:
      name: pushClothingCaption
    pussies:
      name: pussies
    pussy:
      name: pussy
    pussyinspection:
      name: pussyinspection
    pussyinspectionherm:
      name: pussyinspectionherm
    quicksand_actions:
      name: quicksand_actions
    quicksand_end:
      name: quicksand_end
    quicksand_pull:
      name: quicksand_pull
    quickStart:
      name: quickStart
    quickStartOptions:
      name: quickStartOptions
    radio_addnews:
      name: radio_addnews
      tags: ["unused"]
    radio_hardreset:
      name: radio_hardreset
      tags: ["unused"]
    radio_listen:
      name: radio_listen
    radio_midnight:
      name: radio_midnight
      tags: ["unused"]
    radio_placehere:
      name: radio_placehere
      tags: ["unused"]
    radiogroup:
      name: radiogroup
      tags: ["unused"]
    radiooutfits:
      name: radiooutfits
    radiovar:
      container: true
      name: radiovar
    ragup:
      name: ragup
    raidLockers:
      name: raidLockers
    rainstreak:
      name: rainstreak
      tags: ["unused"]
    rainWraith:
      name: rainWraith
    rainyDayHarass:
      name: rainyDayHarass
    random_goo:
      name: random_goo
    random_goo_head:
      name: random_goo_head
    random_semen:
      name: random_semen
    random_semen_head:
      name: random_semen_head
    randomPlay:
      name: randomPlay
    randomteacher:
      description: |-
        Prints name of a teacher the player knows
    randomWear:
      name: randomWear
    raped:
      name: raped
    rapestat:
      name: rapestat
    rapeTrait:
      description: |-
        Prints `| Survivor` or `| Fucktoy` depending on pc's `$submissive`
      tags: ["unused", "text"]
    reb:
      description: |-
        Adds rebelliousness to orphanage

        `$orphan_reb` is measure of rebelliousness levels in orphanage where negative is no rebelliousness and 0 is neutral (-50-50)

        `<<reb change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    recordAnusSperm:
      name: recordAnusSperm
    recordSperm:
      name: recordSperm
    recordVaginalSperm:
      name: recordVaginalSperm
    relation-box:
      name: relation-box
    relation-box-simple:
      name: relation-box-simple
    relation-box-stat:
      name: relation-box-stat
    relation-box-wolves:
      name: relation-box-wolves
    relation-text:
      name: relation-text
      tags: ["unused"]
    relationshipclamp:
      name: relationshipclamp
    relationshiptext:
      name: relationshiptext
    relaxed_guard:
      name: relaxed_guard
    remove_punishments:
      name: remove_punishments
    remove_shackle:
      name: remove_shackle
    removeBabyIntro:
      name: removeBabyIntro
    removeButtplug:
      name: removeButtplug
    removeCChildBirthDate:
      name: removeCChildBirthDate
      tags: ["unused"]
    removeCChildConceptionDate:
      name: removeCChildConceptionDate
      tags: ["unused"]
    removeCNPCEventTimer:
      name: removeCNPCEventTimer
      tags: ["unused"]
    removeCNPCPregnancyTimer:
      name: removeCNPCPregnancyTimer
      tags: ["unused"]
    removeCreature:
      name: removeCreature
    removeNNPCOutfit:
      name: removeNNPCOutfit
    removeNPCCondom:
      name: removeNPCCondom
    removeparasite:
      name: removeparasite
    removePlayerCondom:
      name: removePlayerCondom
    removeTryingOn:
      name: removeTryingOn
    rendermodel:
      description: |-
        Render and print model as a static image

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<rendermodel className? cssAnim?>>`
        - **className**: `string` - class or space-separated classes of canvas element to be inserted when placed in the DOM
        - **cssAnim** _optional_: `bool` - render multiple frames for css animation
          - Defaults to false
      parameters:
        - "|+ text |+ bool|bareword|var"
      tags: ["dom"]
    rentday:
      name: rentday
    rentdue:
      name: rentdue
    rentduerobin:
      name: rentduerobin
    rentEdenTrade:
      name: rentEdenTrade
    rentmod:
      name: rentmod
    rentnopay:
      name: rentnopay
    rentpay:
      name: rentpay
    rentRobinPunishment:
      name: rentRobinPunishment
    replaceAction:
      name: replaceAction
      tags: ["unused"]
    replaceActionLink:
      name: replaceActionLink
    replaceAskColour:
      name: replaceAskColour
      tags: ["unused"]
    reqSkill:
      name: reqSkill
      tags: ["unused"]
    reroute:
      name: reroute
      skipArgs: true
      tags: ["unused"]
    rescueWraith:
      name: rescueWraith
    resetEarSlime:
      name: resetEarSlime
    resetLastOptions:
      name: resetLastOptions
    resetPregButtons:
      name: resetPregButtons
    resetSaveMenu:
      name: resetSaveMenu
    residential:
      name: residential
    residentialdrain:
      name: residentialdrain
    residentialdraineventend:
      name: residentialdraineventend
    residentialdrainlinks:
      name: residentialdrainlinks
    residentialdrainquick:
      name: residentialdrainquick
    residentialeventend:
      name: residentialeventend
    residentialex1:
      name: residentialex1
    residentialex2:
      name: residentialex2
    residentialex3:
      name: residentialex3
    residentialexposed:
      name: residentialexposed
      tags: ["unused"]
    residentialquick:
      name: residentialquick
    restartMenstruationCycle:
      name: restartMenstruationCycle
    returnCarried:
      name: returnCarried
    reveal:
      name: reveal
    right_pursuit_grab:
      name: right_pursuit_grab
    rightactionBoundBanish:
      name: rightactionBoundBanish
    rightactionDifficulty:
      name: rightactionDifficulty
    rightactionDifficultyMachine:
      name: rightactionDifficultyMachine
      tags: ["unused"]
    rightactionDifficultySelf:
      name: rightactionDifficultySelf
    rightactionDifficultyStruggle:
      name: rightactionDifficultyStruggle
      tags: ["unused"]
    rightactionDifficultySwarm:
      name: rightactionDifficultySwarm
      tags: ["unused"]
    rightactionDifficultyTentacle:
      name: rightactionDifficultyTentacle
    rightactionDifficultyVore:
      name: rightactionDifficultyVore
      tags: ["unused"]
    rightActionInit:
      name: rightActionInit
    rightActionInitMachine:
      name: rightActionInitMachine
    rightActionInitSelf:
      name: rightActionInitSelf
    rightActionInitStruggle:
      name: rightActionInitStruggle
    rightActionInitSwarm:
      name: rightActionInitSwarm
    rightActionInitTentacle:
      name: rightActionInitTentacle
    rightActionInitVore:
      name: rightActionInitVore
    rightActions:
      name: rightActions
    rightactionSetupTentacle:
      name: rightactionSetupTentacle
    rightActionsMachine:
      name: rightActionsMachine
    rightActionsSelf:
      name: rightActionsSelf
    rightActionsStruggle:
      name: rightActionsStruggle
    rightActionsSwarm:
      name: rightActionsSwarm
    rightActionsTentacle:
      name: rightActionsTentacle
    rightActionsVore:
      name: rightActionsVore
    rightarmtentacledisable:
      name: rightarmtentacledisable
    rightcamerapose:
      name: rightcamerapose
    rightchoke:
      name: rightchoke
    rightclothesnew:
      name: rightclothesnew
    rightCondom:
      name: rightCondom
    rightcoverface:
      name: rightcoverface
    rightdefault:
      name: rightdefault
    rightdildowhack:
      name: rightdildowhack
    rightFixAndCoverActions:
      name: rightFixAndCoverActions
    rightgrabnew:
      name: rightgrabnew
    righthandpull:
      name: righthandpull
    righthypnosiswhack:
      name: righthypnosiswhack
    rightNPCCondom:
      name: rightNPCCondom
    rightpenwhacknew:
      name: rightpenwhacknew
    rightplaynew:
      name: rightplaynew
    rightshacklewhack:
      name: rightshacklewhack
    rightspraynew:
      name: rightspraynew
    rightstealnew:
      name: rightstealnew
    rightUndressOther:
      name: rightUndressOther
    rng:
      description: |-
        Generates a new rng value between min and max to be stored in `$rng`

        `$rng` is the pseudo-random value last generated by this call or passage start

        `$rngOverride` is a fixed value debug variable to use for all `<<rng>>` calls in a passage

        1. `<<rng max?>>`
        - **max** _optional_: `number` - maximum (inclusive) value
          - Defaults to `100`

        2. `<<rng min max>>`
        - **min**: `string` - minimum (inclusive) value
          - Defaults to `1`
      parameters:
        - "|+ number |+ number"
    rngWraith:
      name: rngWraith
    rngWraithSocial:
      name: rngWraithSocial
    robinbrothelappear:
      name: robinbrothelappear
    robinbully:
      name: robinbully
    robinChocolateOfferHelp:
      name: robinChocolateOfferHelp
    robinForestCostumeBuy:
      name: robinForestCostumeBuy
    robinForestCostumeOptions:
      name: robinForestCostumeOptions
    robinForestCostumePose:
      name: robinForestCostumePose
    robinhug:
      name: robinhug
    robinInfirmaryCDOptions:
      name: robinInfirmaryCDOptions
    robinInfirmaryCDUndressLower:
      name: robinInfirmaryCDUndressLower
    robinInfirmaryVariableCleanup:
      name: robinInfirmaryVariableCleanup
    robinOpen:
      name: robinOpen
    robinoptions:
      name: robinoptions
    robinpay:
      name: robinpay
    robinPayout:
      name: robinPayout
    robinPilloryFailure:
      name: robinPilloryFailure
    robinPilloryHour:
      name: robinPilloryHour
    robinPunishment:
      name: robinPunishment
    robinRentUnsafeMessage:
      name: robinRentUnsafeMessage
    robinroom:
      name: robinroom
    robinroom_link:
      name: robinroom_link
    robinTraumaMultiplierDecay:
      name: robinTraumaMultiplierDecay
    roomoptions:
      name: roomoptions
    ruffleHair:
      name: ruffleHair
    ruffleHairFromSleep:
      name: ruffleHairFromSleep
    ruined:
      description: |-
        Destroys all of the pc's clothing slots, whether worn or carried

        This includes head, face, neck, over_upper, upper, under_upper, hands, over_lower, lower, under_lower, legs, and feet slot clothing
    run_text:
      name: run_text
    runeventpool:
      name: runeventpool
    rut:
      description: |-
        Prints `| Rut`
      tags: ["text"]
    rut_end:
      name: rut_end
    rutCycle:
      name: rutCycle
    sadism:
      description: |-
        Adds sadism to pc's state

        `$sadism` is a measure of pc's progression towards being sadistic where 0 is no progress (0-1,000)

        `<<sadism change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    safereplace:
      container: true
      name: safereplace
    save_anxious_guard:
      name: save_anxious_guard
    save_methodical_guard:
      name: save_methodical_guard
    save_relaxed_guard:
      name: save_relaxed_guard
    save_scarred_inmate:
      name: save_scarred_inmate
    save_tattooed_inmate:
      name: save_tattooed_inmate
      tags: ["unused"]
    save_veteran_guard:
      name: save_veteran_guard
    saveConfirm:
      name: saveConfirm
    saveList:
      name: saveList
    saveNameSection:
      name: saveNameSection
    saveNPC:
      description: |-
        Saves persistent npc to named slot

        See `<<loadNPC>>`, `<<updateNPC>>`, & `<<clearNPC>>`

        `<<saveNPC slot name>>`
        - **slot**: `number` - slot number to pull npc data from (zero-based)
        - **name**: `string` - key to save npc's data to
          - spaces should be avoided if possible
      parameters:
        - "number &+ string|text"
    saves:
      name: saves
    saveTempHairStyle:
      name: saveTempHairStyle
    saveWarning:
      name: saveWarning
    sayexhibproud:
      name: sayexhibproud
    scarred_inmate:
      name: scarred_inmate
    schismEnd:
      description: |-
        Restores the values frozen by `<<schismStart>>` and passes time until 6:00am
    schismStart:
      description: |-
        Freezes the story variables, then morphs the pc into Clánha
    school_infirmary_options:
      name: school_infirmary_options
    school_mark:
      name: school_mark
    school_skill_change:
      name: school_skill_change
    school_skill_down:
      name: school_skill_down
    school_skill_up:
      name: school_skill_up
    school_skill_up_text:
      name: school_skill_up_text
    schoolbully:
      name: schoolbully
    schoolbullyoutside:
      name: schoolbullyoutside
    schoolcatcall:
      description: |-
        Prints random catcall appropriate for pc's peers to say
    schoolChangingRoomLinks:
      name: schoolChangingRoomLinks
    schoolclothesreset:
      name: schoolclothesreset
    schoolday:
      description: |-
        Prints school schedule for today/ tomorrow if player is not trapped
      tags: ["text"]
    schooleffects:
      name: schooleffects
    schoolfameboard:
      name: schoolfameboard
    schoolperiod:
      name: schoolperiod
    schoolperiodtext:
      name: schoolperiodtext
    schoolpoolclothes:
      name: schoolpoolclothes
    schoolpoolclothesreset:
      name: schoolpoolclothesreset
    schoolpoolexposed:
      name: schoolpoolexposed
    schoolpoolmasoncheck:
      description: |-
        Check for bindings and prints quick unbinding description if Mason has to remove them immediately

        Mason makes a mental note to bring chastity key from now on
      tags: ["text"]
    schoolPoolSwap:
      name: schoolPoolSwap
    schoolpoolundress:
      name: schoolpoolundress
    schoolrep:
      description: |-
        Changes school reputation and alerts named NPCs

        Reputation is clamped between 0 and 5

        See `<<schoolrep_naked>>` for autocalculated version

        `<<schoolrep type change>>`
        - **type**: `string` - type of reputation to change
          - `"crossdress"` | `"herm"`
        - **change**: `number` - +/- change to apply
      parameters:
        - '"crossdress"|"herm" &+ number'
    schoolrep_naked:
      description: |-
        Changes school reputation by 1 in response to player being naked
    schoolShop-main:
      name: schoolShop-main
    schoolskill:
      name: schoolskill
    schoolskillgeneral:
      name: schoolskillgeneral
    schoolspareclothes:
      name: schoolspareclothes
    schoolterm:
      name: schoolterm
    schoolVendingMachine:
      name: schoolVendingMachine
    science_skill_up_text:
      name: science_skill_up_text
    scienceprojectchance:
      name: scienceprojectchance
    scienceprojectfinish:
      name: scienceprojectfinish
    scienceprojectstart:
      name: scienceprojectstart
    scienceskill:
      name: scienceskill
    sea_chest:
      name: sea_chest
    sea_eye:
      name: sea_eye
    sea_pair_orgasm:
      name: sea_pair_orgasm
    sea_struggle:
      name: sea_struggle
    sea1:
      name: sea1
    sea2:
      name: sea2
    sea3:
      name: sea3
    sea4:
      name: sea4
    sea5:
      name: sea5
    sea6:
      name: sea6
    sea7:
      name: sea7
    seabeach:
      name: seabeach
    seabeach1:
      name: seabeach1
    seabeach2:
      name: seabeach2
    seabeacheventend:
      name: seabeacheventend
    seabeachquick:
      name: seabeachquick
    seacliffs:
      name: seacliffs
    seacliffseventend:
      name: seacliffseventend
    seacliffsquick:
      name: seacliffsquick
    seadocks:
      name: seadocks
    seadockseventend:
      name: seadockseventend
    seadocksquick:
      name: seadocksquick
    seaflotsam:
      name: seaflotsam
    seamove:
      name: seamove
    seamoveeventend:
      name: seamoveeventend
    seamovequick:
      name: seamovequick
    searape:
      name: searape
    searchWardrobeForItem:
      name: searchWardrobeForItem
    searocks:
      name: searocks
    searockseventend:
      name: searockseventend
    searocksquick:
      name: searocksquick
    seasonal_beverage:
      description: |-
        Prints beverage appropriate to the current season
      tags: ["text"]
    seatangle:
      name: seatangle
    seatedflashcrotchunderskirt:
      name: seatedflashcrotchunderskirt
    Seatedflashcrotchunderskirt:
      name: Seatedflashcrotchunderskirt
    seatedflashcrotchunderskirtcomma:
      name: seatedflashcrotchunderskirtcomma
      tags: ["unused"]
    Seatedflashcrotchunderskirtcomma:
      name: Seatedflashcrotchunderskirtcomma
      tags: ["unused"]
    seatedflashcrotchunderskirtline:
      name: seatedflashcrotchunderskirtline
    seatedflashcrotchunderskirtstop:
      name: seatedflashcrotchunderskirtstop
      tags: ["unused"]
    Seatedflashcrotchunderskirtstop:
      name: seatedflashcrotchunderskirtstop
      tags: ["unused"]
    seatentacles:
      name: seatentacles
    seavore:
      name: seavore
    seductioncheck:
      name: seductioncheck
    seductiondifficulty:
      description: |-
        Prints difficulty of seduction in current combat or estimate of difficulty out

        `_text_output` is set to difficulty description for use with `noPrint`

        `noPrint` styles differ depending on combat/ non-combat. Consider refactoring

        `<<seductiondifficulty noPrint?>>`
        - **noPrint** _optional_: `bool` - Suppress output and only write to temp (truthy)
      parameters:
        - "|+ bool"
      tags: ["text", "temp", "refactor"]
    seductionskill:
      description: |-
        Adds seduction skill to pc's state

        `$seductionskill` is a measure of pc's proficiency seducing others where 0 is awkward (0-1,000)

        `<<seductionskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    seductionskilluptext:
      name: seductionskilluptext
    seductionskilluse:
      name: seductionskilluse
    seductionskillusecombat:
      name: seductionskillusecombat
    seductiontext:
      description: |-
        Prints color-coded adjective of active seduction skill usage
      tags: ["unused", "text"]
    select_random_clothes:
      name: select_random_clothes
    select_random_clothes_limited:
      name: select_random_clothes_limited
    selectmodel:
      description: |-
        Select model and prepare for rendering

        Do not render instance multiple times on same passage

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<selectmodel modelName slot>>`
        - **modelName**: `string` - CanvasModel name in Renderer.CanvasModels
        - **slot**: `string` - id to speed up rendering between passages
      parameters:
        - text |+ text
    selectNpcWithPartInPosition:
      name: selectNpcWithPartInPosition
    selectNpcWithPartInPositionAnus:
      name: selectNpcWithPartInPositionAnus
    selfsuckchecks:
      name: selfsuckchecks
    sellbuns:
      name: sellbuns
    semen:
      name: semen
      tags: ["unused"]
    semen_amount:
      description: |-
        Adds semen to pc's semen supply

        `$semen_amount` is the current pc semen amount remaining

        `<<semen_amount change>>`
        - **change**: `number` - +/- change to apply
    semenOrgasm:
      name: semenOrgasm
    semenswallowedstat:
      name: semenswallowedstat
    semenvolume:
      description: |-
        Adds semen to pc's semen capacity with appropriate checks

        `$semenvolume` is the current maximum pc semen capacity (0-3,000)

        `<<semenvolume change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    sendItemsTo:
      name: sendItemsTo
    sendItemsToDropdown:
      name: sendItemsToDropdown
    sendToWardrobeFromDefault:
      name: sendToWardrobeFromDefault
    setBabyIntro:
      name: setBabyIntro
    setChildFirstWord:
      name: setChildFirstWord
      tags: ["unused"]
    setfemininitymultiplierfromgender:
      name: setfemininitymultiplierfromgender
      tags: ["unused"]
    setFont:
      name: setFont
    setKnowsAboutPregnancy:
      name: setKnowsAboutPregnancy
    setKnowsAboutPregnancyCurrentLoaded:
      name: setKnowsAboutPregnancyCurrentLoaded
    setKnowsAboutPregnancyInLocation:
      name: setKnowsAboutPregnancyInLocation
      tags: ["unused"]
    setLocalPronouns:
      name: setLocalPronouns
      tags: ["unused"]
    setnewtarget:
      name: setnewtarget
    setNPCStrapon:
      name: setNPCStrapon
    setShopCustomColors:
      name: setShopCustomColors
    setSkinColorBase:
      name: setSkinColorBase
    setSlimeSleepEvents:
      name: setSlimeSleepEvents
    setTalkedAboutPregnancy:
      name: setTalkedAboutPregnancy
    settextcolorfromfemininity:
      name: settextcolorfromfemininity
    settextcolorfromgender:
      name: settextcolorfromgender
    settings:
      name: settings
    settingsExit:
      name: settingsExit
    settingsExitConfirm:
      name: settingsExitConfirm
    settingsExitConfirmHistory:
      name: settingsExitConfirmHistory
      tags: ["unused"]
    settingsExitFunction:
      name: settingsExitFunction
    settingsOptions:
      name: settingsOptions
    settingsStart:
      name: settingsStart
    settingsTabButton:
      name: settingsTabButton
    setTowerTemp:
      name: setupTowerTemp
    setup_pillory:
      name: setup_pillory
    setupDefaults:
      name: setupDefaults
    setupFeats:
      name: setupFeats
    setupMidOrgasm:
      name: setupMidOrgasm
    setupOptions:
      name: setupOptions
    setupTabs:
      name: setupTabs
    setupTransformationPiecesObject:
      name: setupTransformationPiecesObject
    sewerscountdown:
      name: sewerscountdown
    sewersend:
      name: sewersend
    sewerspassout:
      name: sewerspassout
    sewerssleep:
      name: sewerssleep
    sewerssleephour:
      name: sewerssleephour
    sewersstart:
      name: sewersstart
    sex:
      name: sex
    sexcheck:
      name: sexcheck
    sexControl:
      name: sexControl
    sexDefaults:
      name: sexDefaults
    sexToysFeatUI:
      name: sexToysFeatUI
    sexToysFeatUIColour:
      name: sexToysFeatUIColour
    sextoystat:
      name: sextoystat
    shackle_feet:
      name: shackle_feet
    shadyFan:
      name: shadyFan
    shame:
      description: |-
        Adds shame to pc's current exhibitionist stint

        `$shame` is a measure of how embarrassed pc is to be exposed where 0 is unrepentant (0-100)

        Shame as a concept is unused. Consider refactoring when clothes are easier to micromanage

        `<<shame change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["unused", "refactor"]
    sharp_eyes:
      description: |-
        Prints `| Sharp eyes`
      tags: ["text"]
    shavestrip:
      name: shavestrip
    shopBuyItemStatus:
      name: shopBuyItemStatus
    shopbuyv2:
      description: |-
        1. `<<shopbuyv2 slot action subAction?>>`

        2. `<<shopbuyv2 slot "buy" "send" choiceIndex amount?>>`
        - **slot**: `string` - clothing slot type to affect
          - `"all"` | %clothesTypesDesc%
        - **action**: `string` - action to apply to for specified slot
          - `"reset"` | `"buy"` | `"steal"` | `"try"` | `"return"`
        - **subAction** _optional_: `string` - action to do after acquiring the clothes
          - `"wear"` | `"send"` | `null`
        - **choiceIndex** _optional_: `number` - index of clothes setup object
        - **amount** _optional_: `number` - amount to buy. Defaults to 1
      parameters:
        - '"all"|%clothesTypes% |+ "reset"|"buy"|"steal"|"try"|"return" |+
          "wear"|"send"|null |+ number'
        - '"all"|%clothesTypes% &+ "buy" &+ "send" &+ number &+ number'
    shopCategoryReplace:
      name: shopCategoryReplace
    shopCategoryTabs:
      name: shopCategoryTabs
    shopclothingcustomcolourwheel:
      description: |-
        Wrapper for `window.shopClothCustomColorWheel()`

        Prints customcolourwheel form for clothing shop

        `<<shopclothingcustomcolourwheel type>>`
        - **type**: `string` - custom clothing slots to pull from/ save to
          - `"primary"` | `"secondary"`
      parameters:
        - '"primary"|"secondary"'
      tags: ["form"]
    shopClothingFilterReset:
      name: shopClothingFilterReset
    shopClothingFilterSettingsDefault:
      name: shopClothingFilterSettingsDefault
    shopClothingFilterToggle:
      name: shopClothingFilterToggle
    shopCommandoCheck:
      description: |-
        Checks if pc has left a shop without wearing underwear
    shopDetailsv2:
      name: shopDetailsv2
    shopFullImage:
      name: shopFullImage
    shopFullImagePart:
      name: shopFullImagePart
    shopFullImageSlot:
      name: shopFullImageSlot
    shopFullImageToggle:
      name: shopFullImageToggle
    shopHoodCheck:
      name: shopHoodCheck
    shoptraits:
      description: |-
        Prints all clothing traits as DOM
      tags: ["dom"]
    showlayer:
      description: |-
        Show layer and optionally add filters

        [High-Level Model API Overview](%workspaceDir%/game/base-clothing/canvasmodel.twee#L2)

        `<<showlayer layerName ...filters?>>`
        - **layerName**: `string` - layer name corresponding to CanvasModel.layer
        - **filters** _optional_: `object` - Filter objects passed to layer
          - Later filters have priority
      parameters:
        - text |+ ...(bareword|var)
    showTransformations:
      description: |-
        Restores the transformations hidden by `<<hideTransformations>>`
      tags: ["unused"]
    ShowUnderEquip:
      name: ShowUnderEquip
    shredderactions:
      name: shredderactions
    sidebarlookdescription:
      name: sidebarlookdescription
    silver_hunt_action_guard:
      description: |-
        Performs a guard's action during silver hunt
        
        `<<silver_hunt_move_guard guardIndex>>`
        - **guardIndex**: `number` - index of guard to perform action for
      parameters:
        - 'number'
    silver_hunt_move_guard:
      description: |-
        Moves guard during silver hunt
        
        `<<silver_hunt_move_guard guardIndex forceMove?>>`
        - **guardIndex**: `number` - index of guard to move
        - **forceMove** _optional_: `bool` - force guard to move even if not a legal move (truthy)
      parameters:
        - 'number |+ bool'
    sir:
      description: |-
        Prints `sir` or `miss` depending on pc's appearance
      tags: ["text"]
    Sir:
      description: |-
        Prints capitalised `Sir` or `Miss` depending on pc's appearance
      tags: ["text"]
    sister:
      name: sister
    Sister:
      name: Sister
    sister_npc:
      name: sister_npc
    Sister_npc:
      name: Sister_npc
      tags: ["unused"]
    sizeLimitsSettings:
      name: sizeLimitsSettings
    skill_difficulty:
      name: skill_difficulty
    skillDifficultyText:
      name: skillDifficultyText
    skinColorInit:
      name: skinColorInit
    skinColorInitOldSave:
      name: skinColorInitOldSave
    skinColourName:
      name: skinColourName
    skincolourtext:
      description: |-
        Prints `X skin colour.` modified by natural skin colour and tan levels
      tags: ["text"]
    skipToOrgasm:
      name: skipToOrgasm
    skirt:
      description: |-
        Prints descriptor of active NPC's lower clothing

        See `<<dress>>` for upper clothing or `<<panties>>` for inner_lower clothing

        See `<<npcClothesText>>` for full name of clothes
      tags: ["text"]
    skul_dock_contents:
      name: skul_dock_contents
    skul_dock_init:
      name: skul_dock_init
    skul_dock_location:
      name: skul_dock_location
    skul_dock_nav:
      name: skul_dock_nav
    skul_dock_state:
      name: skul_dock_state
    skulduggery:
      description: |-
        Adds skulduggery skill to pc's state

        `$skulduggery` is a measure of pc's dexterity and guile where 0 is bad (0-1,000)

        `<<skulduggery change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    skulduggerycheck:
      description: |-
        Performs an inline skulduggery check

        `$skulduggerydifficulty` is a measure of the action difficulty where 0 is guaranteed (0-1,000)

        `$skulduggerysuccess` is the result of the check where 0 is failed (0|1)

        `<<skulduggerycheck outputModifier?>>`
        - **outputModifier** _optional_: `string` - type of modifier to apply
          - `"silent"`: Does not print results
      parameters:
        - '|+ "silent"'
      tags: ["text"]
    skulduggerydifficulty:
      description: Prints color-coded adjective of skulduggery difficulty

        Relies on `$skulduggerydifficulty`, see `<<skulduggerycheck>>`
      tags: ["text"]
    skulduggeryrequired:
      description:
        Prints minimum skulduggery level required to successfully lockpick

        `$lock` is the minimum skulduggery skill required to unlock where 0 is guaranteed (0-1,000)
      tags: ["text"]
    skulduggeryskilluse:
      name: skulduggeryskilluse
    skulduggeryuse:
      name: skulduggeryuse
    skulshopevents:
      name: skulshopevents
    skybox:
      name: skybox
      tags: ["dom"]
    sleep:
      description: |-
        Process and apply sleep effects, with appropriate interruptions

        `<<sleep skipWakeEvents?>>`
        - **skipWakeEvents** _optional_: `bool` - skip events that could wake pc from sleep, even if they would normally occur
      parameters:
        - "|+ bool"
    sleep_clamp:
      name: sleep_clamp
    sleepeffects:
      name: sleepeffects
    sleephour:
      name: sleephour
    sleepJanet:
      description: |-
        Restores the values frozen by `<<callJanet>>`
    slime_wake_home:
      name: slime_wake_home
    slimeEventEnd:
      name: slimeEventEnd
    slimeEventResult:
      name: slimeEventResult
    slimePunishmentForest:
      name: slimePunishmentForest
    slimeSleepEvents:
      name: slimeSleepEvents
    slimeWakeAlleyway:
      name: slimeWakeAlleyway
    slimeWakeBodyliquid:
      description: |-
        Covers pc in random amounts of specified liquid from slime sleepwalking pc around town

        `<<slimeWakeBodyliquid liquid>>`
        - **liquid**: `string` - liquid to apply to pc
          - %liquidTypesDesc%
      parameters:
        - "%liquidTypes%"
    slimeWakeMasturbation:
      description: |-
        Activates forced slime masturbation outcome out of sleep
      tags: ["links"]
    slithering:
      description: |-
        Prints synonym for `slithering`
      tags: ["text"]
    slithers:
      description: |-
        Prints synonym for `slithers`
      tags: ["text"]
    slug_caught:
      name: slug_caught
    slug_cave_intro:
      name: slug_cave_intro
    slug_end:
      name: slug_end
    slug_init:
      name: slug_init
    slug_text:
      name: slug_text
    slut:
      description: |-
        Prints `pervert` or `slut` depending on pc's appearance
      tags: ["text"]
    small_text:
      description: |-
        Prints appropriate `| Small body` descriptor that allowed this text option
      tags: ["text"]
    smugglerdifficultyactions:
      name: smugglerdifficultyactions
    smugglerdifficultynpcs:
      name: smugglerdifficultynpcs
    smugglerdifficultytext:
      name: smugglerdifficultytext
    smugglerobject:
      name: smugglerobject
    social:
      name: social
    someone:
      description: |-
        Prints `<<him>>` of an NPC, either provided or previously selected

        Modifies selected NPC

        `<<someone npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to 0
      parameters:
        - "|+ number"
    someones:
      description: |-
        Prints possessive pronoun of an NPC, either provided or previously selected

        Modifies selected NPC if not `"two"`

        `<<someones npcIndex?>>`
        - **npcIndex** _optional_: `number|string` - zero-based index of active npcs
          - `"two"` : does not select NPC, just prints `"their"`
          - `0-5` : selects NPC and prints `<<his>>`
      parameters:
        - 'number|"two"'
    spa_actions:
      name: spa_actions
    spa_breasts_strip:
      name: spa_breasts_strip
    spa_end:
      name: spa_end
    spa_event_select:
      name: spa_event_select
    spa_genitals_reaction:
      name: spa_genitals_reaction
    spa_genitals_strip:
      name: spa_genitals_strip
    spa_hand_failed:
      name: spa_hand_failed
    spa_init:
      name: spa_init
    spa_job_init:
      name: spa_job_init
    spa_rape_failed:
      name: spa_rape_failed
    spa_rob_options:
      name: spa_rob_options
    spa_tan_events:
      name: spa_tan_events
    spa_work:
      name: spa_work
    spankmaninit:
      name: spankmaninit
    spareclothesdomus:
      name: spareclothesdomus
    spareschoolswimshorts:
      name: spareschoolswimshorts
    spareschoolswimsuit:
      name: spareschoolswimsuit
    speak:
      name: speak
    specialClothesEffectsSetup:
      name: specialClothesEffectsSetup
    specialClothesHint:
      description: |-
        Sets the temporary array `_specialClothesHint` to static values
        - Keys are lowercase special clothes names without spaces
        - Values are the hints
      tags: ["temp"]
    specialClothesSetup:
      name: specialClothesSetup
    specialClothesUpdate:
      name: specialClothesUpdate
    speech-sydney:
      name: speech-sydney
    speechWraith:
      description: |-
        Prints up to two relevant wraith lines

        `_line1` / `_line2` are two lines chosen

        `"lines"` argument expects output to be silenced since it doesn't properly set `_speaks`.
        Consider refactoring to either apply speaks or guarantee no output is generated

        Sydney is a love interest but doesn't have argument override set. Consider refactoring

        `<<speechWraith type?>>`
        - **type** _optional_: `string` - type of extra modification to do on pool of lines to pull from
          - `"none"`: Relevant lines (default)
          - `"lines"`: Generic lines
          - `loveInterestName`: Overrides present npcs to add relevant lines to pool
          - %loveInterestDesc%
      parameters:
        - '|+ "none"|"lines"|%loveInterest%'
      tags: ["text", "temp", "refactor"]
    spouse:
      name: spouse
    spray:
      description: |-
        Adds amount of spray uses to pc's state

        `$spray` is number of pepper spray uses available to player where 0 is none remaining

        Consuming a charge does not grant proficiency skill when successfully conserving a charge or using infinite spray. Consider refactoring

        `<<spray numberUses>>`
        - **numberUses**: `number` - +/- charges to use
          - `+number`: Adds additional use to pc
          - `-number`: Consumes use of spray
      parameters:
        - "number"
      tags: ["refactor"]
    sprayspeech:
      name: sprayspeech
    stalk_athletics_difficulty:
      name: stalk_athletics_difficulty
    stalk_attack:
      name: stalk_attack
    stalk_catch:
      name: stalk_catch
    stalk_events_followup:
      name: stalk_events_followup
    stalk_flight:
      name: stalk_flight
    stalk_img:
      name: stalk_img
    stalk_init:
      name: stalk_init
    stalk_nnpc_name:
      name: stalk_nnpc_name
    stalk_nnpc_text_attack:
      name: stalk_nnpc_text_attack
    stalk_nnpc_text_confront:
      name: stalk_nnpc_text_confront
    stalk_nnpc_text_passed:
      name: stalk_nnpc_text_passed
    stalk_nnpc_text_threat:
      name: stalk_nnpc_text_threat
    stalk_pursuit:
      name: stalk_pursuit
    stalk_run:
      name: stalk_run
    stalk_run_events:
      name: stalk_run_events
    stalk_skulduggery_difficulty:
      name: stalk_skulduggery_difficulty
    stalk_walk_events:
      name: stalk_walk_events
    stall_actions:
      name: stall_actions
    stall_amount:
      name: stall_amount
    stall_chance:
      name: stall_chance
    stall_check_text:
      name: stall_check_text
    stall_init:
      name: stall_init
    stall_inventory:
      name: stall_inventory
    stall_sell:
      name: stall_sell
    stall_sell_actions:
      name: stall_sell_actions
    stall_sell_man:
      name: stall_sell_man
    stall_trust:
      name: stall_trust
    stall_update:
      description: |-
        Generates new amount and cost of produce stall items being haggled
    stallShop-text:
      name: stallShop-text
      tags: ["text"]
    starfish:
      name: starfish
    starfisheventend:
      name: starfisheventend
    starfishexposed:
      name: starfishexposed
      tags: ["unused"]
    starfishquick:
      name: starfishquick
    startbrothelshow:
      name: startbrothelshow
    startCaption:
      name: startCaption
    startDescriptions:
      name: startDescriptions
    startingPlayerImage:
      name: startingPlayerImage
    startingPlayerImageReset:
      name: startingPlayerImageReset
    startingPlayerImageUpdate:
      name: startingPlayerImageUpdate
    startOptions:
      name: startOptions
    startOptionsComplexityButton:
      name: startOptionsComplexityButton
    startWraith:
      name: startWraith
    statbar:
      description: |-
        Prints percentage-filled statbar representing values over 0

        See `<<invertedstatbar>>` for unfilled version

        `<<statbar min current max rightMeter? pin?>>`
        - **min**: `number` - lower bound to clamp display to
        - **current**: `number` - current amount to consider for percentage calculation
        - **max**: `number` - max amount to consider for percentage calculation
        - **rightMeter** _optional_: `bool` - display as small inline version
          - Defaults to `false`
        - **pin**: `number` - ensure current does not go above this value
          - Defaults to max
      parameters:
        - "number &+ number &+ number |+ bool |+ number"
      tags: ["dom"]
    statbarinverted:
      description: |-
        Prints percentage-unfilled statbar representing values over 0

        See `<<statbar>>` for filled version

        `<<invertedstatbar current max rightMeter?>>`
        - **current**: `number` - current amount to consider for percentage calculation
        - **max**: `number` - max amount to consider for percentage calculation
        - **rightMeter** _optional_: `bool` - display as small inline version
          - Defaults to `false`
      parameters:
        - "number &+ number |+ bool"
      tags: ["dom"]
    stateabomination:
      name: stateabomination
    stateman:
      name: stateman
    statetentacles:
      name: statetentacles
    statistics:
      name: statistics
    statisticsTimeCompare:
      description: |-
        Prints time since provided DateTime in statistics formatting

        `<<statisticsTimeCompare datetime>>`
        - **datetime**: `DateTime|timestamp` - timestamp or DateTime object to be checked against
      parameters:
        - "number|var|bareword"
    statsCaption:
      name: statsCaption
    statsMoneyNoImg:
      name: statsMoneyNoImg
    statsWraith:
      name: statsWraith
    status:
      description: |-
        Adds coolness to pc's state, scaled as appropriate

        `$cool` is a measure of pc's coolness amongst their peers where 0 is not-cool (0-400)

        `<<status change>>`
        - **change**: `number` - +/- change to apply
          - `+number`: linear, multiplied by number of coolness clothes
          - `-number`: percentage subtracted from current coolness, values below `-100` are not allowed
      parameters:
        - "number"
    steal:
      name: steal
    stealclothes:
      name: stealclothes
    steed_he:
      name: steed_he
    steed_He:
      name: steed_He
    steed_him:
      name: steed_him
    steed_his:
      name: steed_his
    steed_init:
      name: steed_init
    steed_text:
      name: steed_text
    steed_type:
      desc: |-
        Prints centaurs/horses depending on hallucinations
      tags: ["text"]
    sterlingFather:
      name: sterlingFather
    sterlingSir:
      name: sterlingSir
    sterlingTitle:
      name: sterlingTitle
    stockholmTrait:
      description: |-
        Prints `| Stockholm Syndrome: X`

        `<<stockholmTrait type?>>`
        - **type** _optional_: `string` - additional label to apply to output
      parameters:
        - "|+ string"
      tags: ["text"]
    storeactions:
      description: |-
        Strip, print description of actions, and store clothes

        Used as mini-menu on passages

        `<<storeactions tempStrip>>`
        - **tempStrip**: `string` - location where clothes are being temporarily stored
      parameters:
        - text
      tags: ["text", "links", "dom"]
    storecleanup:
      name: storecleanup
    storeItem:
      name: storeItem
    storeload:
      name: storeload
    storeloaditem:
      name: storeloaditem
    storeon:
      name: storeon
    storeonface:
      name: storeonface
      tags: ["unused"]
    storeonfeet:
      name: storeonfeet
      tags: ["unused"]
    storeonhands:
      name: storeonhands
      tags: ["unused"]
    storeonhead:
      name: storeonhead
      tags: ["unused"]
    storeonlegs:
      name: storeonlegs
      tags: ["unused"]
    storeonlower:
      name: storeonlower
      tags: ["unused"]
    storeonneck:
      name: storeonneck
      tags: ["unused"]
    storeonoverhead:
      name: storeonoverhead
      tags: ["unused"]
    storeonoverlower:
      name: storeonoverlower
      tags: ["unused"]
    storeonoverupper:
      name: storeonoverupper
      tags: ["unused"]
    storeonunderlower:
      name: storeonunderlower
      tags: ["unused"]
    storeonunderupper:
      name: storeonunderupper
      tags: ["unused"]
    storeonupper:
      name: storeonupper
      tags: ["unused"]
    storereturn:
      name: storereturn
    storesave:
      name: storesave
    stormdrain:
      name: stormdrain
    straighttrauma:
      description: |-
        Adds trauma to pc without any modifiers whatsoever

        Trauma effects on pc are not updated after change.
        Consider refactoring to call `<<trauma>>` instead of `<<traumaclamp>>`

        `<<straighttrauma change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["unused", "refactor"]
    strangeman1init:
      name: strangeman1init
      tags: ["unused"]
    strangeman2init:
      name: strangeman2init
    strangewoman1init:
      name: strangewoman1init
    stray_happiness:
      name: stray_happiness
    stray_happiness_text:
      name: stray_happiness_text
    street_alley_detour:
      name: street_alley_detour
    street_niki:
      name: street_niki
    street_rescue:
      name: street_rescue
    street1:
      name: street1
    street10:
      name: street10
    street2:
      name: street2
    street3:
      name: street3
    street4:
      name: street4
    street5:
      name: street5
    street6:
      name: street6
    street7:
      name: street7
    street8:
      name: street8
    street9:
      name: street9
    streetabstinence:
      name: streetabstinence
    streetavery:
      name: streetavery
    streetbestialityfame:
      name: streetbestialityfame
    streetbodywriting:
      name: streetbodywriting
    streetbottomgrope:
      name: streetbottomgrope
    streetbound:
      name: streetbound
    streetbox:
      name: streetbox
    streetbullies:
      name: streetbullies
    streetcollared:
      name: streetcollared
    streetcriminalbodywriting:
      name: streetcriminalbodywriting
    streetdog:
      name: streetdog
    streetedenangry:
      name: streetedenangry
    streetedenrage:
      name: streetedenrage
    streetedenworried:
      name: streetedenworried
    streeteffects:
      name: streeteffects
    streetex1:
      name: streetex1
    streetex2:
      name: streetex2
    streetex3:
      name: streetex3
    streetex4:
      name: streetex4
    streetex5:
      name: streetex5
    streetexday1:
      name: streetexday1
    streetexday2:
      name: streetexday2
    streetexhibitionismfame:
      name: streetexhibitionismfame
    streetExhibitionismFameShamed:
      name: streetExhibitionismFameShamed
    streetexoffer:
      name: streetexoffer
    streetexoffer2:
      name: streetexoffer2
    streetexoffer3:
      name: streetexoffer3
    streetexoffer4:
      name: streetexoffer4
    streetexshow:
      name: streetexshow
    streetfamerape:
      name: streetfamerape
    streetfootbridge:
      name: streetfootbridge
    streetfriendly1:
      name: streetfriendly1
    streetheeltrip:
      name: streetheeltrip
    streetkidnap:
      name: streetkidnap
    streetlowertowel:
      name: streetlowertowel
    streetlurker:
      name: streetlurker
    streetmodelshow:
      name: streetmodelshow
    streetnight1:
      name: streetnight1
    streetnight2:
      name: streetnight2
    streetnpcflash:
      name: streetnpcflash
    streetoffer:
      name: streetoffer
      tags: ["unused"]
    streetorphancookie:
      name: streetorphancookie
    streetpolice:
      name: streetpolice
    streetpregnancyfame:
      name: streetpregnancyfame
    streetprostitutionfame:
      name: streetprostitutionfame
    streetrapefame:
      name: streetrapefame
    streetrocks:
      name: streetrocks
    streetsexfame:
      name: streetsexfame
    streetstray:
      name: streetstray
    streettentacle:
      name: streettentacle
    streetuppertowel:
      name: streetuppertowel
    streetvan:
      name: streetvan
    streetwanted:
      name: streetwanted
    streetwhorebodywriting:
      name: streetwhorebodywriting
    stress:
      description: |-
        Adds stress to pc with appropriate modifiers

        `$stress` is pc's stress amount where 0 is healthy (0-10,000)

        `<<stress change multiplierOverride?>>`
        - **change**: `number` - +/- change to apply
        - **multiplierOverride** _optional_: `number` - multiplier to use in place of calculated one
          - Defaults to some modification of `1` or `0.8` if negative
      parameters:
        - "number |+ number"
    stresscaption:
      name: stresscaption
    strip:
      name: strip
    stripobject:
      description: |-
        Prints description of and ruins upper, lower, and under_lower clothes

        `$stripobject` is the text name of object used to snag clothes off player

        `$stripintegrity` is the damage to apply to clothes before determining if it would be stripped

        Does not take into account over clothes. Consider refactoring
      tags: ["text", "refactor"]
    strippedtext:
      description: |-
        Template tree for control, trauma, stress

        Empty widget, consider refactoring
      tags: ["unused", "legacy", "refactor"]
    strokerSelfPenisEntrance:
      name: strokerSelfPenisEntrance
    strokes:
      name: strokes
    struggle:
      name: struggle
    struggle_actions:
      name: struggle_actions
    struggle_add:
      name: struggle_add
    struggle_appendage:
      name: struggle_appendage
    struggle_attach:
      name: struggle_attach
    struggle_bide_the:
      name: struggle_bide_the
    struggle_bodypart:
      name: struggle_bodypart
    struggle_clothes:
      name: struggle_clothes
    struggle_creatures:
      name: struggle_creatures
    struggle_difficulty:
      name: struggle_difficulty
      tags: ["unused"]
    struggle_difficulty_set:
      name: struggle_difficulty_set
    struggle_effects:
      name: struggle_effects
    struggle_end:
      name: struggle_end
    struggle_enemy:
      name: struggle_enemy
    struggle_flat_chest:
      name: struggle_flat_chest
    struggle_fluid:
      name: struggle_fluid
    struggle_init:
      name: struggle_init
    struggle_name:
      name: struggle_name
    struggle_part_init:
      name: struggle_part_init
    struggle_region:
      name: struggle_region
    struggle_skin:
      name: struggle_skin
    struggle_state:
      name: struggle_state
    struggleClearActions:
      name: struggleClearActions
    stuck_in_wall_oral:
      name: stuck_in_wall_oral
    sub:
      description: |-
        Adds submissiveness quality to pc's state and applies effects

        `$submissive` is a measure of pc's defiant/ submissive spectrum where 0 is defiant and 1,000 is neutral (0-2,000)

        See `<<def>>`

        `<<sub change>>`
        - **change**: `number` - + change to apply
      parameters:
        - "number"
    sub_check:
      description: |-
        Applies effects from pc changing submissiveness
    submission:
      name: submission
    submissivetext:
      description: |-
        Prints `| Submissive`
      tags: ["text"]
    subsectionSettingsTabButton:
      name: subsectionSettingsTabButton
    suffocatepass:
      name: suffocatepass
    suspicion:
      description: |-
        Adds suspicion to pc's state

        `$suspicion` is asylum's level of suspicion towards the pc where 0 is not-suspicious (0-100)

        `<<suspicion change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    svg:
      container: true
      name: svg
    swallowed:
      name: swallowed
    swallowedstat:
      name: swallowedstat
    swarm:
      name: swarm
    swarm_img:
      name: swarm_img
    swarmactions:
      name: swarmactions
    swarmeffects:
      name: swarmeffects
    swarminit:
      name: swarminit
    swarmName:
      name: swarmName
    swim_check:
      name: swim_check
    swimmingdifficulty:
      name: swimmingdifficulty
    swimmingdifficultytext0:
      description: |-
        Prints `| These waters look safe` if stats are visible
      tags: ["text"]
    swimminglessoneffects:
      name: swimminglessoneffects
      tags: ["unused"]
    swimmingskilluse:
      name: swimmingskilluse
    swimmingtext:
      description: |-
        Prints color-coded adjective of active swimming skill usage
      tags: ["text"]
    sydneyBeachGender:
      name: sydneyBeachGender
    sydneyBodywriting:
      name: sydneyBodywriting
    sydneyBodywritingLocation:
      name: sydneyBodywritingLocation
    sydneyChastityMessage:
      name: sydneyChastityMessage
    sydneyExpose:
      name: sydneyExpose
    sydneyFinish:
      name: sydneyFinish
    sydneyGenitals:
      name: sydneyGenitals
    sydneyGlasses:
      name: sydneyGlasses
    sydneyGreeting:
      name: sydneyGreeting
    sydneyLewd:
      name: sydneyLewd
    sydneyLibrary:
      name: sydneyLibrary
    sydneyMass:
      name: sydneyMass
    sydneymother:
      name: sydneymother
    sydneyMother:
      name: sydneyMother
      tags: ["unused"]
    sydneymum:
      name: sydneymum
    sydneyMum:
      name: sydneyMum
    sydneyOptions:
      name: sydneyOptions
    sydneyOptionsLeave:
      name: sydneyOptionsLeave
    sydneyOptionsTalk:
      name: sydneyOptionsTalk
    sydneyOtherParent:
      name: sydneyOtherParent
    sydneyOtherParentGender:
      name: sydneyOtherParentGender
    sydneySchedule:
      name: sydneySchedule
    sydneySexFail:
      name: sydneySexFail
    sydneySirrisResemble:
      name: sydneySirrisResemble
    sydneySwimwear:
      name: sydneySwimwear
    sydneyTortureFail:
      name: sydneyTortureFail
    sydneyTortureOptions:
      name: sydneyTortureOptions
    sydneyWarning:
      description: |-
        Prints `| This action might/will purify/corrupt Sydney`

        Relies on `_warnstate` for default case

        `<<sydneyWarning type?>>`
        - **type** _optional_: `string` - severity of corruption
          - `"purify"` | `"corrupt"`: "might" corruption messages
          - `default`: "will" corruption messages
      parameters:
        - '|+ "purify"|"corrupt"'
      tags: ["temp", "text"]
    tableText:
      name: tableText
    tailorinit:
      name: tailorinit
    takeHandholdingVirginity:
      name: takeHandholdingVirginity
    takeKissVirginity:
      name: takeKissVirginity
    takeKissVirginityNamed:
      name: takeKissVirginityNamed
    takeNPCVirginity:
      name: takeNPCVirginity
    takeTempleVirginity:
      name: takeTempleVirginity
    takeVirginity:
      name: takeVirginity
    tanned:
      name: tanned
    tanningGainOutput:
      name: tanningGainsOutput
    tanningPenaltiesOutput:
      name: tanningPenaltiesOutput
    targetListBox:
      name: targetListBox
    targetrepeatcontroller:
      name: targetrepeatcontroller
    tattoo:
      name: tattoo
    tattoo_parlour:
      name: tattoo_parlour
    tattooed_inmate:
      name: tattooed_inmate
    tattooFilter:
      name: tattooFilter
    tattooList:
      name: tattooList
    taylorSibling:
      name: taylorSibling
    taylorSon:
      name: taylorSon
    tearful:
      description: |-
        Prints player opinion of their state based on trauma, stress, arousal, and pain

        Description is without subject and capitalised

        Example:
        ```
        <<tearful>> you are made an example of.
        ```
      tags: ["text"]
    tearup:
      name: tearup
    telltalepenissize:
      name: telltalepenissize
    temperature:
      name: temperature
    temple_bailey_options:
      name: temple_bailey_options
    temple_effects:
      name: temple_effects
    temple_spear_mission_end:
      name: temple_spear_mission_end
    temple_title:
      name: temple_title
    temple_Title:
      name: temple_Title
    tending:
      name: tending
    tending_bird_eggs:
      name: tending_bird_eggs
    tending_day:
      name: tending_day
    tending_give:
      name: tending_give
    tending_harvest:
      name: tending_harvest
    tending_pick:
      description: |-
        Gives the pc a random number of plants, modified by traits

        `<<tending_pick type min? max?>>`
        - **type**: `string` - type of plant to pick
          - %plantTypesDesc%
        - **min** _optional_: `number` - min number of plants to pick
          - Defaults to `1`
        - **max** _optional_: `object` - max number of plants to pick
          - Defaults to `5`
      parameters:
        - "%plantTypes%"
        - "%plantTypes% &+ number &+ number"
    tending_season_notice:
      name: tending_season_notice
    tending_text:
      description: |-
        Prints color-coded description of how good the player is at housekeeping
      tags: ["text"]
    tendingdifficulty:
      name: tendingdifficulty
    tendingPlantSeedsOptions:
      name: tendingPlantSeedsOptions
    tendingtext:
      description: |-
        Prints color-coded adjective of active tending skill usage
      tags: ["text"]
    tendingTillOptions:
      name: tendingTillOptions
    tendingWaterAllDryBeds:
      name: tendingWaterAllDryBeds
    tendingWaterPlot:
      name: tendingWaterPlot
    tentacle_forest_end_scene:
      name: tentacle_forest_end_scene
    tentacle_forest_events:
      name: tentacle_forest_events
    tentacle_forest_orgasm_scene:
      name: tentacle_forest_orgasm_scene
    tentacle_forest_pass:
      name: tentacle_forest_pass
    tentacle_forest_safe_orgasm:
      name: tentacle_forest_safe_orgasm
    tentacle_forest_stress_scene:
      name: tentacle_forest_stress_scene
    tentacle_forest_time:
      name: tentacle_forest_time
    tentacle_skin:
      name: tentacle_skin
    tentacleact:
      name: tentacleact
      tags: ["unused"]
    tentacleadv:
      description: |-
        Main controller for advanced tentacles combat system

        `<<tentacleadv tentacleObject>>`
        - **tentacleObject**: `object` - Tentacle from `$tentacles`
      parameters:
        - var|bareword
      tags: ["text"]
    tentacleadvdefault:
      description: |-
        Prints effects of a provided idle tentacle ejaculating onto player

        `<<tentacleadvdefault tentacleObject>>`
        - **tentacleObject**: `object` - Tentacle from `$tentacles`
      parameters:
        - var|bareword
      tags: ["text"]
    tentacleadvdisable:
      description: |-
        Disables provided tentacle

        `<<tentacleadvdisable tentacleObject>>`
        - **tentacleObject**: `object` - Tentacle from `$tentacles`
      parameters:
        - var|bareword
    tentacledefault:
      name: tentacledefault
    tentacleDefaults:
      name: tentacleDefaults
    tentacledirection:
      name: tentacledirection
    tentacledisable:
      name: tentacledisable
    tentacleimg:
      name: tentacleimg
    tentacleimgmiss:
      name: tentacleimgmiss
    tentacles:
      name: tentacles
    tentaclestart:
      name: tentaclestart
    tentacleTrait:
      description: |-
        Prints `| Witch` or `| Prey` depending on pc's `$submissive`
      tags: ["unused", "text"]
    tentaclewolf:
      name: tentaclewolf
    tentacleworldend:
      name: tentacleworldend
    tentacleworldintro:
      name: tentacleworldintro
    tenyclusPlay:
      name: tenyclusPlay
    testicle:
      description: |-
        Prints synonym for testicle

        `<<testicle situation?>>`
        - **situation** _optional_: `string` - category to filter possible outputs by
          - `"clinical"`
      parameters:
        - '|+ "clinical"'
      tags: ["unused", "text"]
    testicles:
      description: |-
        Prints synonym for testicles

        `<<testicle situation?>>`
        - **situation** _optional_: `string` - category to filter possible outputs by
          - `"clinical"`
      parameters:
        - '|+ "clinical"'
      tags: ["text"]
    testMultiple:
      name: testMultiple
      tags: ["unused"]
    testSingles:
      name: testSingles
    text_pillory_release_fail_strip:
      name: text_pillory_release_fail_strip
    textmap:
      name: textmap
    that:
      description: |-
        Prints plural/singular prose of that (those/that) for provided clothing slot

        `<<that slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
      tags: ["text"]
    the_pillory_person:
      description: |-
        Prints `The <<person>>` or the name of person in the pillory

        Lowercase `<<The_pillory_person>>`.
        Related to `<<a_pillory_person>>`/ '<<A_pillory_person>>'
      tags: ["text"]
    The_pillory_person:
      description: |-
        Prints `The <<person>>` or the name of person in the pillory

        Capitalised `<<the_pillory_person>>`.
        Related to `<<a_pillory_person>>`/ '<<A_pillory_person>>'
      tags: ["text"]
    their:
      description: |-
        Prints `their/<<him>>` of an NPC based on combat size, either provided or previously selected

        Modifies selected NPC if combat is single man

        `<<their npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of active npcs
          - `0-5`: Defaults to 0
      parameters:
        - "|+ number"
      tags: ["text"]
    theowner:
      description: |-
        Prints `the owner` or active NPC pronoun based on number of enemies
      tags: ["text"]
    thermometer:
      description: |-
        Prints a thermometer representing the player's body temperature
      tags: ["dom"]
    thighactionDifficulty:
      name: thighactionDifficulty
    thighActionInit:
      name: thighActionInit
    thighactions:
      name: thighactions
    thighdifficulty:
      description: |-
        Prints color-coded adjective of thigh action difficulty in current combat
      tags: ["text"]
    thighejacstat:
      name: thighejacstat
    thighskill:
      description: |-
        Adds thigh skill to pc's state

        `$thighskill` is a measure of pc's proficiency using their thighs where 0 is awkward (0-1,000)

        `<<thighskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    thighskilluse:
      name: thighskilluse
    thighstat:
      name: thighstat
    thightext:
      description: |-
        Prints color-coded adjective of active thigh skill usage
      tags: ["text"]
    thirst:
      name: thirst
      tags: ["unused"]
    threaten:
      description: |-
        Prints a random spoken threat of active NPC towards player
      tags: ["text"]
    timeAfterXHours:
      description: |-
        Prints formatted time after X hours would pass

        `<<timeAfterXHours hours>>`
        - **hours**: `number` - number of hours to simulate passing
      parameters:
        - "number"
      tags: ["text"]
    tinyPenisDryOrgasmChance:
      name: tinyPenisDryOrgasmChance
    tip_neg:
      name: tip_neg
    tip_up:
      name: tip_up
    tipreceive:
      name: tipreceive
    tips:
      name: tips
    tipset:
      name: tipset
    tiredness:
      description: |-
        Adds tiredness to pc's state

        `$tiredness` is pc's amount of tiredness where 0 is not-tired (0-2,000)

        tiredness is unclamped and source is unused. Consider refactoring

        `<<tiredness change source?>>`
        - **change**: `number` - +/- change to apply
        - **source** _optional_: `string` - source of tiredness change
          - `"pass"`: tiredness gained from passage of time, not affected by modifiers
      parameters:
        - 'number |+ "pass"'
      tags: ["refactor"]
    tirednesscaption:
      name: tirednesscaption
    titleBlackjackHelp:
      name: titleBlackjackHelp
    titleCharacteristics:
      name: titleCharacteristics
    titleCheats:
      name: titleCheats
    titleDebugRenderer:
      name: titleDebugRenderer
    titleEventInfo:
      name: titleEventInfo
    titleFeats:
      name: titleFeats
    titleJournal:
      name: titleJournal
    titlejournalNotes:
      name: titlejournalNotes
    titleOptions:
      name: titleOptions
    titleOutfitEditor:
      name: titleOutfitEditor
    titleSaves:
      name: titleSaves
    titleSocial:
      name: titleSocial
    titleStats:
      name: titleStats
    titleTraits:
      name: titleTraits
    toggleAltLink:
      description: |-
        Creates link that toggles unique clothing between alternate states

        `<<toggleAltLink slot location>>`
        - **slot**: `string` - clothing slot being toggled
          - %clothesTypesDesc%
        - **location** _optional_: `string` - location where clothing is being toggled
          - `"wardrobe"`
      parameters:
        - '%clothesTypes% |+ "wardrobe"|"shop"'
      tags: ["dom", "text"]
    toggleAltPosition:
      description: |-
        Toggles unique clothing between alternate states

        `<<toggleAltPosition slot>>`
        - **slot**: `string` - clothing slot being toggled
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
    toggleAltSleeve:
      description: |-
        Toggles unique clothing between alternate sleeve states

        `<<toggleAltSleeve inDefaultState? inAltState?>>`
        - **inDefaultState** _optional_: `string` - text to be printed if sleeves are using their default image
          - Defaults to "Roll up sleeves"
        - **inAltState** _optional_: `string` - text to be printed if sleeves are using their alt image
          - Defaults to "Unroll sleeves"
      parameters:
        - "|+ string |+ string"
      tags: ["dom"]
    toggledebug:
      name: toggledebug
      tags: ["unused"]
    toggleFaceLayer:
      description: |-
        Creates link that toggles hair position on face

        First arg is never used. Consider refactoring

        `<<toggleFaceLayer location>>`
        - **location** _optional_: `string` - location where clothing is being toggled
          - `"wardrobe"`
      parameters:
        - '|+ "wardrobe"|"shop"'
      tags: ["dom", "text", "refactor"]
    toggleHood:
      description: |-
        Toggles pc's hood state between up and down

        `<<toggleHood location>>`
        - **location** _optional_: `string` - location where hood is being toggled
          - Only respects "shop"
      parameters:
        - '|+ "shop"'
    toggleHoodLink:
      description: |-
        Creates link that toggles pc's hood state between up and down

        `<<toggleHoodLink location>>`
        - **location** _optional_: `string` - location where hood is being toggled
          - Only respects "shop"
      parameters:
        - '|+ "shop"'
      tags: ["dom", "text"]
    toggleLeash:
      name: toggleLeash
    toggleLowerTuck:
      description: |-
        Outputs a link that toggles lower tucked state (tucks lowerwear into footwear)

        `<<toggleLowerTuck untuckText? tuckText?>>`
        - **untuckText** _optional_: `string` - text to be printed if already tucked
          - Defaults to "Untuck"
        - **tuckText** _optional_: `string` - text to be printed if already untucked
          - Defaults to "Tuck in"
      parameters:
        - "|+ string |+ string"
      tags: ["dom"]
    toggleMannequinGender:
      name: toggleMannequinGender
    toggleTab:
      name: toggleTab
    toggleUpperTuck:
      description: |-
        Outputs a link that toggles upper tucked state (tucks upperwear into lowerwear)

        `<<toggleUpperTuck untuckText? tuckText?>>`
        - **untuckText** _optional_: `string` - text to be printed if already tucked
          - Defaults to "Untuck"
        - **tuckText** _optional_: `string` - text to be printed if already untucked
          - Defaults to "Tuck in"
      parameters:
        - "|+ string |+ string"
      tags: ["dom"]
    top:
      description: |-
        Prints name of outermost top clothing layer
      tags: ["text"]
    topaside:
      description: |-
        Prints name of innermost top clothing layer that can be seen or `top` if everything is exposed

        See `<<breastsaside>>`
      tags: ["text"]
    TopShop:
      name: TopShop
    towelup:
      name: towelup
    towelupm:
      name: towelupm
    tower_creature_text:
      description: |-
        Prints monster/ beast noun of the first NPC slot

        To be used for the tower creature
      tags: ["text"]
    towerBuildOption:
      name: towerBuildOption
    towerValuables:
      name: towerValuables
    toy:
      name: toy
    toyName:
      name: toyName
    toySelection:
      name: toySelection
    traitLists:
      name: traitLists
    traitListsSearch:
      name: traitListsSearch
    traits:
      name: traits
    transform:
      name: transform
    transformationAlteration:
      name: transformationAlteration
    transformationStateUpdate:
      name: transformationStateUpdate
    TrashComparePlayerBreastsReact:
      name: TrashComparePlayerBreastsReact
    TrashComparePlayerChastity:
      name: TrashComparePlayerChastity
    TrashComparePlayerPenisReact:
      name: TrashComparePlayerPenisReact
    trashSelect:
      name: trashSelect
    trauma:
      description: |-
        Adds trauma to pc based on control and trait modifiers

        `$trauma` is pc's trauma amount where 0 is healthy (0-5,000)

        See `<<combattrauma>>` and `<<straighttrauma>>` for other use cases

        `unusedArg` is not implemented. Consider refactoring to remove or implement

        `<<trauma change? unusedArg?>>`
        - **change** _optional_: `number` - +/- change to apply
          - if not provided, just updates pc's trauma effects
        - **unusedArg** _optional_: `bool` - doesn't do anything (truthy)
      parameters:
        - "number"
      tags: ["refactor"]
    traumacaption:
      name: traumacaption
    traumaclamp:
      name: traumaclamp
    tryOnInit:
      name: tryOnInit
    tryOnReset:
      name: tryOnReset
    tryOnStats:
      name: tryOnStats
    tryOnWear:
      name: tryOnWear
    tummyejacstat:
      name: tummyejacstat
    turnend:
      name: turnend
    twinescript:
      container: true
      name: twinescript
    unbecomePinch:
      description: |-
        Overwrites some story variables with their respective values in `$frozenValues`, without modifying the latter

        Use to visually restore a pc morphed with `<<becomePinch>>` to their original state (not all values are restored)
    unbind:
      name: unbind
    unbindtemp:
      name: unbindtemp
    underbottoms:
      description: |-
        Prints under_lower clothing layer, taking into account if it is part of an outfit
      tags: ["text"]
    UnderBottomShop:
      name: UnderBottomShop
    undergroundCellOptions:
      name: undergroundCellOptions
    undergroundEscapeForestRobin:
      name: undergroundEscapeForestRobin
    undergroundEscapeForestStart:
      name: undergroundEscapeForestStart
    undergroundPlantFakeChoice:
      name: undergroundPlantFakeChoice
    undergroundReturnToCell:
      name: undergroundReturnToCell
    undergroundRobinInterlude:
      name: undergroundRobinInterlude
    undergroundRobinKiss:
      name: undergroundRobinKiss
    undergroundRobinTopic:
      name: undergroundRobinTopic
    undergroundRobinTopicRefresh:
      name: undergroundRobinTopicRefresh
    underlowerhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"under_lower"` slot
    underlowerimg:
      name: underlowerimg
    underlowerintegrity:
      name: underlowerintegrity
      tags: ["unused"]
    underlowerit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"under_lower"` slot
      tags: ["text"]
    underloweritis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"under_lower"` slot
      tags: ["unused", "text"]
    underloweron:
      name: underloweron
      tags: ["unused"]
    underlowerplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"under_lower"` slot
      tags: ["text"]
    underlowerruined:
      description: |-
        Destroys pc's under_lower slot clothing, whether worn or carried

        `<<underlowerruined noRebuy? exposedType?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
        - **exposedType** _optional_: `string` - reason for exposing under lower
          - `"commando"` | `"given"` | `"stolen"` | `"sold"`
      parameters:
        - '|+ bool|null|undefined |+ "commando"|"given"|"stolen"|"sold"'
    underlowersend:
      name: underlowersend
    underlowersteal:
      name: underlowersteal
    underlowerstrip:
      name: underlowerstrip
    underlowerthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"under_lower"` slot
      tags: ["unused", "text"]
    underlowerundress:
      name: underlowerundress
    underlowerwear:
      name: underlowerwear
    underlowerwet:
      description: |-
        Adds wetness to pc's under lower clothing state

        `$underlowerwet` is a measure of how wet pc's under lower clothing is where 0 is dry (0-200)

        `$underlowerwetstate` is a measure of effects due to wetness of pc's under lower clothing where 0 is dry (0-3)

        Over clothes don't take into account wetness. Consider refactoring to expand

        `<<underlowerwet change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["refactor"]
    underoutfit:
      name: underoutfit
    UnderOutfitShop:
      name: UnderOutfitShop
    underruined:
      description: |-
        Destroys pc's under_upper and under_lower slot clothing, whether worn or carried
    underslither:
      name: underslither
    undertop:
      name: undertop
    UnderTopShop:
      name: UnderTopShop
    underupperhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"under_upper"` slot
      tags: ["text"]
    underupperimg:
      name: underupperimg
    underupperintegrity:
      name: underupperintegrity
      tags: ["unused", "text"]
    underupperit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"under_upper"` slot
      tags: ["text"]
    underupperitis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"under_upper"` slot
      tags: ["unused", "text"]
    underupperon:
      name: underupperon
      tags: ["unused"]
    underupperplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"under_upper"` slot
      tags: ["text"]
    underupperruined:
      description: |-
        Destroys pc's under_upper slot clothing, whether worn or carried

        `<<underupperruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    underuppersend:
      name: underuppersend
    underuppersteal:
      name: underuppersteal
    underupperstrip:
      name: underupperstrip
    underupperthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"under_upper"` slot
      tags: ["unused", "text"]
    underupperundress:
      name: underupperundress
    underupperwear:
      name: underupperwear
    underupperwet:
      description: |-
        Adds wetness to pc's under upper clothing state

        `$underupperwet` is a measure of how wet pc's under upper clothing is where 0 is dry (0-200)

        `$underupperwetstate` is a measure of effects due to wetness of pc's under upper clothing where 0 is dry (0-3)

        Over clothes don't take into account wetness. Consider refactoring to expand

        `<<underupperwet change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["refactor"]
    underwater:
      name: underwater
    underwearTypeText:
      description: |-
        Prints "underwear" or more specific type as appropriate
      tags: ["text"]
    underworld_nickname:
      description: |-
        Prints pc's nickname used in the underworld

        See `<<overworld_nickname>>`

        `<<underworld_nickname textTransform>>`
        - **textTransform**: `string` - transformation to apply to text before printing
          - `"cap"`: Capitalise
      parameters:
        - '|+ "cap"'
      tags: ["text"]
    undies:
      name: undies
    undiestrauma:
      name: undiestrauma
    undress:
      name: undress
    undressclothes:
      name: undressclothes
    undressKeepFace:
      name: undressKeepFace
    undressmid:
      name: undressmid
    undressNPC:
      name: undressNPC
    undressOverClothes:
      name: undressOverClothes
    undressSleep:
      name: undressSleep
    unlockAdultShop:
      name: unlockAdultShop
    update_npc_pillory_appearance:
      name: update_npc_pillory_appearance
    update_school_skills:
      name: update_school_skills
    updateallure:
      name: updateallure
    updateAskColour:
      name: updateAskColour
    updatebuysendhome:
      name: updatebuysendhome
      tags: ["unused"]
    updateChildActivity:
      name: updateChildActivity
    updateClothes:
      name: updateClothes
    updateclotheslist:
      name: updateclotheslist
    updateclothingshop:
      name: updateclothingshop
    updateFeatName:
      name: updateFeatName
    updateFeats:
      name: updateFeats
    updateFeatsPointsMenu:
      name: updateFeatsPointsMenu
    updateHallucinations:
      description: |-
        Updates pc's hallucination state based on trauma, awareness, drugs, weather, and clothing
    updatehistorycontrols:
      name: updatehistorycontrols
    updatemannequin:
      name: updatemannequin
    updateMuseumAntiques:
      name: updateMuseumAntiques
    updateNewNamedNpcs:
      description: |-
        Adds non-present new NPCs to saves with version 1 or 2 $npcNamedVersion
    updateNPC:
      description: |-
        Updates named persistent npc with data from given slot

        Currently only updates virginity

        `<<updateNPC npcObject>>`
        - **npcObject**: `object` - full npc object to pull update data from
      parameters:
        - "var|bareword"
    updateNPCsFirst:
      description: |-
        Updates all persistent npcs first-order properties to specific value

        See `<<updateNPCsSecond>>` for second-order properties

        Could be made to accept a function as value to increase useability in data migration. Consider refactoring

        `<<updateNPCsFirst key value>>`
        - **key**: `string` - first-order key to modify
        - **value**: `any` - value to set
      parameters:
        - "string &+ var|bareword"
      tags: ["unused", "refactor"]
    updateNPCsSecond:
      description: |-
        Updates all persistent npcs second-order properties to specific value

        See `<<updateNPCsFirst>>` for first-order properties

        Could be made to accept a function as value to increase useability in data migration. Consider refactoring

        `<<updateNPCsFirst firstKey secondKey value>>`
        - **firstKey**: `string` - first-order key to modify
        - **secondKey**: `string` - second-order key to modify
        - **value**: `any` - value to set
      parameters:
        - "string &+ var|bareword"
      tags: ["unused", "refactor"]
    updateOwned:
      name: updateOwned
    updatePersistentNPCs:
      description: |-
        Updates persistent npc characteristics based on player setting changes

        selectiveUpdate accepts `skincolour` but does nothing with it. Consider refactoring

        `<<updatePersistentNPCs selectiveUpdate?>>`
        - **selectiveUpdate** _optional_: `string` - category to selectively update instead of all
          - `"genders"` | `"breasts"` | `"penis"` | `"skincolour"`
      parameters:
        - '|+ "genders"|"breasts"|"penis"|"skincolour"'
      tags: ["refactor"]
    updateRecordedSperm:
      name: updateRecordedSperm
    updatesidebardescription:
      name: updatesidebardescription
    updatesidebarimg:
      name: updatesidebarimg
    updatesidebarmoney:
      name: updatesidebarmoney
    updateStoredSlot:
      name: updateStoredSlot
    updatetryonstats:
      name: updatetryonstats
    updatewardrobe:
      description: |-
        Applies wardrobe updates based on `$wear_` actions

        `$wear_X` are variables where X is a clothing slot that is set to `"none"` or the name of a clothing item

        `<<updatewardrobe additionalUpdates? overrideSlot?>>`
        - **additionalUpdates** _optional_: `string` - sections to update along with wardrobe
          - Only accepts "outfits"
        - **overrideSlot** _optional_: `string` - clothing slot wear action key to treat as selected
          - Not required for new wardrobe display
          - `wear_` + (%clothesTypesDesc%)
      parameters:
        - '|+ false|null|undefined|"outfits" |+ text'
    updatewarmthdescription:
      name: updatewarmthdescription
    updatewarmthscale:
      name: updatewarmthscale
    updateWornClothingLocation:
      name: updateWornClothingLocation
    upperhas:
      description: |-
        Prints plural/singular prose of has (have/has) for worn `"upper"` slot
      tags: ["text"]
    upperimg:
      name: upperimg
    upperintegrity:
      name: upperintegrity
      tags: ["unused"]
    upperit:
      description: |-
        Prints an objective case pronoun (them/it) for worn `"upper"` slot
      tags: ["text"]
    upperitis:
      description: |-
        Prints a pronoun/ present indicative pair (they are/it is) describing worn `"upper"` slot
      tags: ["unused", "text"]
    upperon:
      name: upperon
    upperplural:
      description: |-
        Prints a present indicative (are/is) for the worn `"upper"` slot
      tags: ["text"]
    upperruined:
      description: |-
        Destroys pc's upper slot clothing, whether worn or carried

        `<<upperruined noRebuy?>>`
        - **noRebuy** _optional_: `bool` - skip rebuying command (truthy)
          - Defaults to `false`
      parameters:
        - "|+ bool"
    uppersend:
      name: uppersend
    upperslither:
      name: upperslither
    uppersteal:
      name: uppersteal
      tags: ["unused"]
    upperstrip:
      name: upperstrip
    upperthat:
      description: |-
        Prints plural/singular prose of that (those/that) for worn `"upper"` slot
      tags: ["unused", "text"]
    upperundress:
      name: upperundress
    upperwear:
      name: upperwear
    upperwet:
      description: |-
        Adds wetness to pc's upper clothing state

        `$upperwet` is a measure of how wet pc's upper clothing is where 0 is dry (0-200)

        `$upperwetstate` is a measure of effects due to wetness of pc's upper clothing where 0 is dry (0-3)

        Over clothes don't take into account wetness. Consider refactoring to expand

        `<<upperwet change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
      tags: ["refactor"]
    urinestat:
      name: urinestat
    useLube:
      name: useLube
    vagina_lube_amount:
      description: |-
        Prints the amount of lube around player vagina

        Relies on `_vagina_lube_amount` being set already

        See `<<vagina_lube_text>>`
      tags: ["text", "temp"]
    vagina_lube_text:
      description: |-
        Prints qualified description of lube around the vagina prior to penetration

        Example:
        ```
        <<vagina_lube_text>> the example can be performed without trouble.
        ```
      tags: ["text"]
    vaginaactionDifficulty:
      name: vaginaactionDifficulty
    vaginaactionDifficultyTentacle:
      name: vaginaactionDifficultyTentacle
    vaginaActionInit:
      name: vaginaActionInit
    vaginaActionInitStruggle:
      name: vaginaActionInitStruggle
    vaginaActionInitTentacle:
      name: vaginaActionInitTentacle
    vaginaActions:
      name: vaginaActions
    vaginaActionsTentacle:
      name: vaginaActionsTentacle
    vaginaFluidActive:
      name: vaginaFluidActive
    vaginaFluidOrgasm:
      name: vaginaFluidOrgasm
    vaginaFluidPassive:
      name: vaginaFluidPassive
    vaginainit:
      name: vaginainit
    vaginaldifficulty:
      description: |-
        Prints color-coded adjective of vaginal action difficulty in current combat
      tags: ["text"]
    vaginaldoublestat:
      name: vaginaldoublestat
    vaginalejacstat:
      name: vaginalejacstat
    vaginalentranceejacstat:
      name: vaginalentranceejacstat
    vaginalskill:
      description: |-
        Adds vaginal skill to pc's state

        `$vaginalskill` is a measure of pc's proficiency using their vagina where 0 is awkward (0-1,000)

        `<<vaginalskill change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    vaginalskilluse:
      name: vaginalskilluse
    vaginalstat:
      name: vaginalstat
    vaginaltext:
      description: |-
        Prints color-coded adjective of active vaginal skill usage
      tags: ["text"]
    vaginalvirginitywarning:
      description: |-
        Prints `This action will deflower you` if vaginal virginity can still be lost

        Takes combat state into account to display starting pipe `| `
      tags: ["text"]
    vaginaraped:
      name: vaginaraped
    vaginaWetnessCalculate:
      name: vaginaWetnessCalculate
    variablesStart2:
      name: variablesStart2
    variablesStatic:
      name: variablesStatic
    variablesVersionUpdate:
      name: variablesVersionUpdate
    variablesVersionUpdate2:
      name: variablesVersionUpdate2
    versioninfo:
      name: versioninfo
    linkinformation:
      name: linkinformation
    veteran_guard:
      name: veteran_guard
    victimgirl:
      name: victimgirl
    victimgirls:
      name: victimgirls
    violence:
      name: violence
    violence_noncombat:
      name: violence_noncombat
    virginitylosttext:
      name: virginitylosttext
    visionPrepMorph:
      description: |-
        Resets some stats and settings, in preparation to morph the pc into another character

        **Should be used after `<<freezePlayerStats>>`**

        - Resets all transformation progress, all virginities, as well as base stats like pain and arousal
        - Removes any parasites, bodywriting, bodyliquid, chastity devices and worn sex toys
        - Disables auto clothing rebuy
    voice:
      description: |-
        Prints verb by player attempting to use their voice

        Example:
        ```
        You <<voice "moan">>.
        ```

        `<<voice type>>`
        - **type**: `string` - type of verb
          - `"plead"` | `"moan"` | `"demand"`
      parameters:
        - '"plead"|"moan"|"demand"'
      tags: ["text"]
    vore:
      name: vore
    voreactions:
      name: voreactions
    voreeffects:
      name: voreeffects
    voreimg:
      name: voreimg
    voreTrait:
      description: |-
        Prints `| Daredevil` or `| Tasty` depending on pc's `$submissive`
      tags: ["unused", "text"]
    waist_goo:
      name: waist_goo
    wakingEffects:
      name: wakingEffects
    wallet:
      description: |-
        Prints where active NPC would keep their money

        Sets `_stealType` to type of clothing if swim suit

        npcIndex and active NPC can be out of sync. Consider refactoring

        `<<wallet npcIndex?>>`
        - **npcIndex** _optional_: `number` - zero-based index of npc to check clothes for
          - `0-5`: Only affects swimsuit clothing check, not text output
      parameters:
        - "|+ number"
      tags: ["text", "temp", "refactor"]
    walnutStoreMessage:
      name: walnutStoreMessage
    wardrobe:
      name: wardrobe
    wardrobeClothingOptions:
      name: wardrobeClothingOptions
    wardrobeContents:
      description: |-
        Prints either `<<wardrobeList>>` or `<<wardrobeNewOutfit>>` depending on `$lastWardrobeSlot`

        `<<wardrobeNewOutfit>>` is never called because $lastWardrobeSlot is never set to "NewOutfit". Consider refactoring
      tags: ["refactor", "dom"]
    wardrobeExits:
      name: wardrobeExits
    wardrobeGetRepairedClothes:
      name: wardrobeGetRepairedClothes
    wardrobeintegrity:
      description: |-
        Prints text integrity description of provided clothing item if below max

        `<<wardrobeintegrity clothingObject slot>>`
        - **clothingObject**: `object` - Clothes object to be checked for integrity
        - **slot**: `string` - clothing setup slot to be checked if not on clothingObject
          - %clothesTypesDesc%
      parameters:
        - bareword|var &+ %clothesTypes%
      tags: ["text"]
    wardrobeLinks:
      name: wardrobeLinks
      tags: ["unused"]
    wardrobeList:
      description: |-
        Prints actual wardrobe contents. Wrapped by `<<wardrobeContents>>`

        `<<wardrobeList slot>>`
        - **slot**: `string` - clothing slot player has selected selected
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
      tags: ["dom"]
    wardrobeListReorder:
      description: |-
        Reorders current wardrobe items by provided sorting

        `<<wardrobeListReorder slot orderType descending?>>`
        - **slot**: `string` - clothing slot to enumerate from current wardrobe
          - %clothesTypesDesc%
        - **orderType**: `string` - clothing property to sort by
          - `"name"` | `"color"` | `"lewd"` | `"integrity"` | `"warmth"` | `"outfit"`
        - **descending** _optional_: `bool` - sort by descending values
          - Defaults to false
      parameters:
        - '%clothesTypes% &+ "name"|"color"|"lewd"|"integrity"|"warmth"|"outfit" |+ bool'
      tags: ["dom"]
    wardrobeNewOutfit:
      name: wardrobeNewOutfit
    wardrobeSanityCheck:
      name: wardrobeSanityCheck
    wardrobeSelection:
      description: |-
        Sets and overrides current wardrobe selection based on `$forceWardrobeLocation`

        `$forceWardrobeLocation` is a string from possible `$location` values

        `<<wardrobeList allowTransfer?>>`
        - **blockTransfer** _optional_: `bool` - block transfering from this wardrobe
          - Defaults to false
          - Currently implemented as pseudo-teleportator while debug is enabled
      parameters:
        - "|+ bool"
      tags: ["refactor"]
    wardrobeSend:
      name: wardrobeSend
    wardrobesUpdate:
      name: wardrobesUpdate
    wardrobewear:
      name: wardrobewear
    warmth:
      name: warmth
    warmth_description:
      name: warmth_description
    warmthscale:
      name: warmthscale
    wash:
      name: wash
    wash_face:
      name: wash_face
    wash_mouth:
      name: wash_mouth
    washmakeup:
      name: washmakeup
    washRecordedSperm:
      name: washRecordedSperm
    water:
      name: water
    wateraction:
      name: wateraction
    waterwash:
      name: waterwash
    wearandtear:
      name: wearandtear
    wearlink_norefresh:
      description: |-
        Creates non-refreshing links that will update clothes according to `$wardrobeOption`

        `$wardrobeOption` is `0` or a form option as a string

        `<<wearlink_norefresh displayName clothingId actionVariable?>>`
        - **displayName**: `string` - the text of the link. May contain markup
        - **clothingId**: `number|string` - id of clothing to apply when clicked
          - Index in slot array on selected wardrobe
          - Key of non-outfit actions (`"towel"` | `"large_towel"` | `"strip"`)
        - **actionVariable** _optional_: `string` - clothing slot wear action key to treat as selected
          - Defaults to variable pointed to by temporary variable `_wear`
          - `wear_` + (%clothesTypesDesc%)
      parameters:
        - text &+ number|"towel"|"large_towel"|"strip" |+ text
      tags: ["temp", "dom"]
    wearoutfit:
      name: wearoutfit
    wearProp:
      description: |-
        Temporarily equips a handheld prop for visual effect in scenes

        Props can be cleared earlier in a scene via `<<handheldon>>` or `<<clotheson>>` and are removed in `<<endevent>>`

        `<<wearProp prop>>`
        - **prop**: `string` - prop to equip, using the variable of the handheld item
      parameters:
        - text
    weather_select:
      name: weather_select
    weatherdisplay:
      name: weatherdisplay
    weatherinit:
      name: weatherinit
      tags: ["unused"]
    wet_all:
      name: wet_all
    wet_lower:
      name: wet_lower
    wet_upper:
      name: wet_upper
    wetness_init:
      name: wetness_init
    wetnessCalculate:
      name: wetnessCalculate
    wheeze:
      name: wheeze
    WhitneyChastityCheck:
      name: WhitneyChastityCheck
    whitneyexit:
      name: whitneyexit
    whitneyFaceWritingInspection:
      name: whitneyFaceWritingInspection
    whitneyFinish:
      name: whitneyFinish
    whitneyoptions:
      name: whitneyoptions
    whitneyoptionsleave:
      name: whitneyoptionsleave
    WhitneyPantyCheck:
      name: WhitneyPantyCheck
    WhitneyParasite:
      description: |-
        Prints adaptive passage of Whitney giving pc a parasite
      tags: ["text", "links"]
    WhitneyParasitePenisComment:
      description: |-
        Prints comments of onlookers with appropriate effects when Whitney gives pc a genital parasite
      tags: ["text"]
    whitneyposter:
      name: whitneyposter
    whitneyRescueEnd:
      name: whitneyRescueEnd
    whitneyRescueExit:
      name: whitneyRescueExit
    whitneyShoppingData:
      description: |-
        Stores Whitney's clothes and reactions from statics into temporary variables
      tags: ["temp"]
    whitneyShoppingPicker:
      description: |-
        Replaces pc's worn clothes with a temporary choice from Whitney

        Relies on temporary variables from `<<whitneyShoppingData>>`
      tags: ["temp"]
    whitneyShoppingPickerChoice:
      description: |-
        Replaces pc's worn clothes with a permanent choice from Whitney

        Relies on temporary variables from `<<whitneyShoppingData>>`
      tags: ["temp"]
    wHunt:
      name: wHunt
    wife:
      name: wife
    Wife:
      name: Wife
    willpower:
      description: |-
        Adds willpower to pc's state

        `$willpower` is a measure of strength of pc's willpower where 0 is not strong (0-1,000)

        `<<willpower change>>`
        - **change**: `number` - +/- change to apply
      parameters:
        - "number"
    willpowerdifficulty:
      name: willpowerdifficulty
    willpowerorgasm:
      name: willpowerorgasm
    willpowerpain:
      name: willpowerpain
    wolf:
      name: wolf
    wolf_cave_plural:
      name: wolf_cave_plural
    wolf_cave_singular:
      name: wolf_cave_singular
    wolf_cave_update:
      name: wolf_cave_update
    wolfcaveevent:
      name: wolfcaveevent
    wolfcaveselect:
      name: wolfcaveselect
    wolfCaveSingles:
      name: wolfCaveSingles
    wolfcavestate:
      name: wolfcavestate
    wolfChildActivity:
      name: wolfChildActivity
    wolfeventend:
      name: wolfeventend
    wolfexposed:
      name: wolfexposed
      tags: ["unused"]
    wolfgirl:
      description: |-
        Prints `| Wolfboy` or `| Wolfgirl` depending on pc's appearance
      tags: ["text"]
    wolfhuntevents:
      name: wolfhuntevents
    wolfpackfear:
      description: |-
        Adds fear to the wolfpack and prints `The pack fears you a little more.`

        `$wolfpackfear` is a measure of how much the wolfpack fears the pc where 0 is not at all (0-30)
      tags: ["text"]
    wolfpackhuntoptions:
      name: wolfpackhuntoptions
    wolfpacktrust:
      description: |-
        Adds trust to the wolfpack and prints `The pack trusts you a little more.`

        `$wolfpacktrust` is a measure of how much the wolfpack trusts the pc where 0 is not at all (0-30)
      tags: ["text"]
    wolfquick:
      name: wolfquick
    wolfTransform:
      name: wolfTransform
    wood_required:
      name: wood_required
    word:
      description: |-
        Prints an indefinite article (a/an) if needed for provided clothing slot

        `<<word slot>>`
        - **slot**: `string` - category of worn clothing to check
          - %clothesTypesDesc%
      parameters:
        - "%clothesTypes%"
      tags: ["text"]
    wordify_i:
      description: |-
        Prints the ordinal numeral for a given integer (first, second, ...)

        `<<wordify_i number capitalise?>>`
        - **number**: `number` - positive integer to convert to text
          - `1-11` : numbers not between 1-10 inclusive are treated as 11
        - **capitalise** _optional_: `bool` - capitalise output (truthy)
      parameters:
        - "number |+ bool"
      tags: ["text"]
    world_corruption:
      description: |-
        Adds corruption to world state

        `$world_corruption_hard`

        `<<world_corruption type change>>`
        - **type**: `string` - type of corrupting event
          - `"hard"`: world scoped changes
          - `"soft"`: player scoped changes
        - **change**: `number` - +/- change to apply
      parameters:
        - '"hard"|"soft" &+ number'
    wPersist:
      name: wPersist
    wraith_pass:
      name: wraith_pass
    wraithCaught:
      name: wraithCaught
    wraithEvent:
      name: wraithEvent
    wraithEventSewers:
      name: wraithEventSewers
    wraithEventStreet:
      name: wraithEventStreet
    wraithExorcise:
      name: wraithExorcise
    wraithEyes:
      name: wraithEyes
    wraithPossess:
      name: wraithPossess
    wraithShamble:
      name: wraithShamble
    wren_sabotage_nude:
      name: wren_sabotage_nude
    wTimerProgress:
      name: wTimerProgress
    xrayimg:
      name: xrayimg
    yogalessons:
      name: yogalessons
    yogalewd:
      name: yogalewd
    your_bird_text:
      description: |-
        Prints either `your spouse`, `your hawk/harpy`, or `the hawk/harpy` depending on player's stockholm status

        `<<your_bird_text formatting?>>`
        - **formatting** _optional_: `string` - formatting to apply
          - `"cap"`: capitalise output
      parameters:
        - '|+ "cap"'
      tags: ["text"]
